{
  "properties": {
    "[plaintext]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {
        "editor.unicodeHighlight.ambiguousCharacters": false,
        "editor.unicodeHighlight.invisibleCharacters": false
      }
    },
    "keyboard.dispatch": {
      "scope": 1,
      "type": "string",
      "enum": [
        "code",
        "keyCode"
      ],
      "default": "code",
      "markdownDescription": "Controls the dispatching logic for key presses to use either `code` (recommended) or `keyCode`.",
      "included": true,
      "defaultDefaultValue": "code",
      "restricted": false
    },
    "telemetry.telemetryLevel": {
      "type": "string",
      "enum": [
        "all",
        "error",
        "crash",
        "off"
      ],
      "enumDescriptions": [
        "Sends usage data, errors, and crash reports.",
        "Sends general error telemetry and crash reports.",
        "Sends OS level crash reports.",
        "Disables all product telemetry."
      ],
      "markdownDescription": "\nControls Visual Studio Code telemetry, first-party extension telemetry, and participating third-party extension telemetry. Some third party extensions might not respect this setting. Consult the specific extension's documentation to be sure. Telemetry helps us better understand how Visual Studio Code is performing, where improvements need to be made, and how features are being used. Read more about the [data we collect](https://aka.ms/vscode-telemetry) and our [privacy statement](https://go.microsoft.com/fwlink/?LinkId=786907). A full restart of the application is necessary for crash reporting changes to take effect.\n\n&nbsp;\n\nThe following table outlines the data sent with each setting:\n\n|       | Crash Reports | Error Telemetry | Usage Data |\n|:------|:---------------------:|:---------------:|:--------------:|\n| all   |            ✓          |        ✓        |        ✓       |\n| error |            ✓          |        ✓        |        -       |\n| crash |            ✓          |        -        |        -       |\n| off   |            -          |        -        |        -       |\n\n\n&nbsp;\n\n****Note:*** If this setting is 'off', no telemetry will be sent regardless of other telemetry settings. If this setting is set to anything except 'off' and telemetry is disabled with deprecated settings, no telemetry will be sent.*\n",
      "default": "all",
      "restricted": true,
      "scope": 1,
      "tags": [
        "usesOnlineServices",
        "telemetry"
      ],
      "defaultDefaultValue": "all"
    },
    "telemetry.enableTelemetry": {
      "type": "boolean",
      "markdownDescription": "Enable diagnostic data to be collected. This helps us to better understand how Visual Studio Code is performing and where improvements need to be made. [Read more](https://go.microsoft.com/fwlink/?LinkId=786907) about what we collect and our privacy statement.",
      "default": true,
      "restricted": true,
      "markdownDeprecationMessage": "If this setting is false, no telemetry will be sent regardless of the new setting's value. Deprecated in favor of the `#telemetry.telemetryLevel#` setting.",
      "scope": 1,
      "tags": [
        "usesOnlineServices",
        "telemetry"
      ],
      "defaultDefaultValue": true,
      "deprecationMessage": "If this setting is false, no telemetry will be sent regardless of the new setting's value. Deprecated in favor of the `#telemetry.telemetryLevel#` setting."
    },
    "update.mode": {
      "type": "string",
      "enum": [
        "none",
        "manual",
        "start",
        "default"
      ],
      "default": "default",
      "scope": 1,
      "description": "Configure whether you receive automatic updates. Requires a restart after change. The updates are fetched from a Microsoft online service.",
      "tags": [
        "usesOnlineServices"
      ],
      "enumDescriptions": [
        "Disable updates.",
        "Disable automatic background update checks. Updates will be available if you manually check for updates.",
        "Check for updates only on startup. Disable automatic background update checks.",
        "Enable automatic update checks. Code will check for updates automatically and periodically."
      ],
      "policy": {
        "name": "UpdateMode",
        "minimumVersion": "1.67"
      },
      "defaultDefaultValue": "default",
      "restricted": false
    },
    "update.channel": {
      "type": "string",
      "default": "default",
      "scope": 1,
      "description": "Configure whether you receive automatic updates. Requires a restart after change. The updates are fetched from a Microsoft online service.",
      "deprecationMessage": "This setting is deprecated, please use 'update.mode' instead.",
      "defaultDefaultValue": "default",
      "restricted": false
    },
    "update.showReleaseNotes": {
      "type": "boolean",
      "default": true,
      "scope": 1,
      "description": "Show Release Notes after an update. The Release Notes are fetched from a Microsoft online service.",
      "tags": [
        "usesOnlineServices"
      ],
      "defaultDefaultValue": true,
      "restricted": false
    },
    "window.openFilesInNewWindow": {
      "type": "string",
      "enum": [
        "on",
        "off",
        "default"
      ],
      "enumDescriptions": [
        "Files will open in a new window.",
        "Files will open in the window with the files' folder open or the last active window.",
        "Files will open in the window with the files' folder open or the last active window unless opened via the Dock or from Finder."
      ],
      "default": "off",
      "scope": 1,
      "markdownDescription": "Controls whether files should open in a new window when using a command line or file dialog.\nNote that there can still be cases where this setting is ignored (e.g. when using the `--new-window` or `--reuse-window` command line option).",
      "defaultDefaultValue": "off",
      "restricted": false
    },
    "window.openFoldersInNewWindow": {
      "type": "string",
      "enum": [
        "on",
        "off",
        "default"
      ],
      "enumDescriptions": [
        "Folders will open in a new window.",
        "Folders will replace the last active window.",
        "Folders will open in a new window unless a folder is picked from within the application (e.g. via the File menu)."
      ],
      "default": "default",
      "scope": 1,
      "markdownDescription": "Controls whether folders should open in a new window or replace the last active window.\nNote that there can still be cases where this setting is ignored (e.g. when using the `--new-window` or `--reuse-window` command line option).",
      "defaultDefaultValue": "default",
      "restricted": false
    },
    "window.confirmBeforeClose": {
      "type": "string",
      "enum": [
        "always",
        "keyboardOnly",
        "never"
      ],
      "enumDescriptions": [
        "Always ask for confirmation.",
        "Only ask for confirmation if a keybinding was used.",
        "Never explicitly ask for confirmation."
      ],
      "default": "never",
      "markdownDescription": "Controls whether to show a confirmation dialog before closing the window or quitting the application.",
      "scope": 1,
      "defaultDefaultValue": "never",
      "restricted": false
    },
    "workbench.enableExperiments": {
      "type": "boolean",
      "description": "Fetches experiments to run from a Microsoft online service.",
      "default": true,
      "scope": 1,
      "restricted": true,
      "tags": [
        "usesOnlineServices"
      ],
      "defaultDefaultValue": true
    },
    "workbench.trustedDomains.promptInTrustedWorkspace": {
      "scope": 1,
      "type": "boolean",
      "default": false,
      "description": "When enabled, trusted domain prompts will appear when opening links in trusted workspaces.",
      "defaultDefaultValue": false,
      "restricted": false
    },
    "window.autoDetectHighContrast": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "If enabled, will automatically change to high contrast theme if the OS is using a high contrast theme. The high contrast theme to use is specified by `#workbench.preferredHighContrastColorTheme#` and `#workbench.preferredHighContrastLightColorTheme#`.",
      "scope": 1,
      "defaultDefaultValue": true,
      "restricted": false
    },
    "files.experimental.watcherUseUtilityProcess": {
      "type": "boolean",
      "description": "When enabled, the file watcher will be launched using the new UtilityProcess Electron API.",
      "default": false,
      "ignoreSync": true,
      "scope": 1,
      "defaultDefaultValue": false,
      "restricted": false
    },
    "files.hotExit": {
      "type": "string",
      "scope": 1,
      "enum": [
        "off",
        "onExit",
        "onExitAndWindowClose"
      ],
      "default": "onExit",
      "markdownEnumDescriptions": [
        "Disable hot exit. A prompt will show when attempting to close a window with editors that have unsaved changes.",
        "Hot exit will be triggered when the last window is closed on Windows/Linux or when the `workbench.action.quit` command is triggered (command palette, keybinding, menu). All windows without folders opened will be restored upon next launch. A list of previously opened windows with unsaved files can be accessed via `File > Open Recent > More...`",
        "Hot exit will be triggered when the last window is closed on Windows/Linux or when the `workbench.action.quit` command is triggered (command palette, keybinding, menu), and also for any window with a folder opened regardless of whether it's the last window. All windows without folders opened will be restored upon next launch. A list of previously opened windows with unsaved files can be accessed via `File > Open Recent > More...`"
      ],
      "description": "Controls whether unsaved files are remembered between sessions, allowing the save prompt when exiting the editor to be skipped.",
      "defaultDefaultValue": "onExit",
      "restricted": false
    },
    "workbench.welcomePage.preferReducedMotion": {
      "scope": 1,
      "type": "boolean",
      "default": false,
      "deprecationMessage": "Deprecated, use the global `workbench.reduceMotion`.",
      "description": "When enabled, reduce motion in welcome page.",
      "defaultDefaultValue": false,
      "restricted": false
    },
    "application.shellEnvironmentResolutionTimeout": {
      "type": "number",
      "default": 10,
      "minimum": 1,
      "maximum": 120,
      "included": true,
      "scope": 1,
      "markdownDescription": "Controls the timeout in seconds before giving up resolving the shell environment when the application is not already launched from a terminal. See our [documentation](https://go.microsoft.com/fwlink/?linkid=2149667) for more information.",
      "defaultDefaultValue": 10,
      "restricted": false
    },
    "window.openWithoutArgumentsInNewWindow": {
      "type": "string",
      "enum": [
        "on",
        "off"
      ],
      "enumDescriptions": [
        "Open a new empty window.",
        "Focus the last active running instance."
      ],
      "default": "off",
      "scope": 1,
      "markdownDescription": "Controls whether a new empty window should open when starting a second instance without arguments or if the last running instance should get focus.\nNote that there can still be cases where this setting is ignored (e.g. when using the `--new-window` or `--reuse-window` command line option).",
      "defaultDefaultValue": "off",
      "restricted": false
    },
    "window.restoreWindows": {
      "type": "string",
      "enum": [
        "preserve",
        "all",
        "folders",
        "one",
        "none"
      ],
      "enumDescriptions": [
        "Always reopen all windows. If a folder or workspace is opened (e.g. from the command line) it opens as a new window unless it was opened before. If files are opened they will open in one of the restored windows.",
        "Reopen all windows unless a folder, workspace or file is opened (e.g. from the command line).",
        "Reopen all windows that had folders or workspaces opened unless a folder, workspace or file is opened (e.g. from the command line).",
        "Reopen the last active window unless a folder, workspace or file is opened (e.g. from the command line).",
        "Never reopen a window. Unless a folder or workspace is opened (e.g. from the command line), an empty window will appear."
      ],
      "default": "all",
      "scope": 1,
      "description": "Controls how windows are being reopened after starting for the first time. This setting has no effect when the application is already running.",
      "defaultDefaultValue": "all",
      "restricted": false
    },
    "window.restoreFullscreen": {
      "type": "boolean",
      "default": false,
      "scope": 1,
      "description": "Controls whether a window should restore to full screen mode if it was exited in full screen mode.",
      "defaultDefaultValue": false,
      "restricted": false
    },
    "window.newWindowDimensions": {
      "type": "string",
      "enum": [
        "default",
        "inherit",
        "offset",
        "maximized",
        "fullscreen"
      ],
      "enumDescriptions": [
        "Open new windows in the center of the screen.",
        "Open new windows with same dimension as last active one.",
        "Open new windows with same dimension as last active one with an offset position.",
        "Open new windows maximized.",
        "Open new windows in full screen mode."
      ],
      "default": "default",
      "scope": 1,
      "description": "Controls the dimensions of opening a new window when at least one window is already opened. Note that this setting does not have an impact on the first window that is opened. The first window will always restore the size and location as you left it before closing.",
      "defaultDefaultValue": "default",
      "restricted": false
    },
    "window.doubleClickIconToClose": {
      "type": "boolean",
      "default": false,
      "scope": 1,
      "markdownDescription": "If enabled, this setting will close the window when the application icon in the title bar is double-clicked. The window will not be able to be dragged by the icon. This setting is effective only if `#window.titleBarStyle#` is set to `custom`.",
      "defaultDefaultValue": false,
      "restricted": false
    },
    "window.titleBarStyle": {
      "type": "string",
      "enum": [
        "native",
        "custom"
      ],
      "default": "custom",
      "scope": 1,
      "description": "Adjust the appearance of the window title bar. On Linux and Windows, this setting also affects the application and context menu appearances. Changes require a full restart to apply.",
      "defaultDefaultValue": "custom",
      "restricted": false
    },
    "window.dialogStyle": {
      "type": "string",
      "enum": [
        "native",
        "custom"
      ],
      "default": "native",
      "scope": 1,
      "description": "Adjust the appearance of dialog windows.",
      "defaultDefaultValue": "native",
      "restricted": false
    },
    "window.nativeTabs": {
      "type": "boolean",
      "default": false,
      "scope": 1,
      "description": "Enables macOS Sierra window tabs. Note that changes require a full restart to apply and that native tabs will disable a custom title bar style if configured.",
      "included": true,
      "defaultDefaultValue": false,
      "restricted": false
    },
    "window.nativeFullScreen": {
      "type": "boolean",
      "default": true,
      "description": "Controls if native full-screen should be used on macOS. Disable this option to prevent macOS from creating a new space when going full-screen.",
      "scope": 1,
      "included": true,
      "defaultDefaultValue": true,
      "restricted": false
    },
    "window.clickThroughInactive": {
      "type": "boolean",
      "default": true,
      "scope": 1,
      "description": "If enabled, clicking on an inactive window will both activate the window and trigger the element under the mouse if it is clickable. If disabled, clicking anywhere on an inactive window will activate it only and a second click is required on the element.",
      "included": true,
      "defaultDefaultValue": true,
      "restricted": false
    },
    "window.experimental.useSandbox": {
      "type": "boolean",
      "description": "Experimental: When enabled, the window will have sandbox mode enabled via Electron API.",
      "default": false,
      "tags": [
        "experimental"
      ],
      "scope": 1,
      "ignoreSync": true,
      "defaultDefaultValue": false,
      "restricted": false
    },
    "window.experimental.sharedProcessUseUtilityProcess": {
      "type": "boolean",
      "description": "Experimental: When enabled, the window will have sandbox mode enabled via Electron API.",
      "default": false,
      "scope": 1,
      "ignoreSync": true,
      "defaultDefaultValue": false,
      "restricted": false
    },
    "extensions.autoUpdate": {
      "enum": [
        true,
        "onlyEnabledExtensions",
        false
      ],
      "enumItemLabels": [
        "All Extensions",
        "Only Enabled Extensions",
        "None"
      ],
      "enumDescriptions": [
        "Download and install updates automatically for all extensions except for those updates are ignored.",
        "Download and install updates automatically only for enabled extensions except for those updates are ignored. Disabled extensions are not updated automatically.",
        "Extensions are not automatically updated."
      ],
      "description": "Controls the automatic update behavior of extensions. The updates are fetched from a Microsoft online service.",
      "default": true,
      "scope": 1,
      "tags": [
        "usesOnlineServices"
      ],
      "defaultDefaultValue": true,
      "restricted": false
    },
    "extensions.autoCheckUpdates": {
      "type": "boolean",
      "description": "When enabled, automatically checks extensions for updates. If an extension has an update, it is marked as outdated in the Extensions view. The updates are fetched from a Microsoft online service.",
      "default": true,
      "scope": 1,
      "tags": [
        "usesOnlineServices"
      ],
      "defaultDefaultValue": true,
      "restricted": false
    },
    "extensions.confirmedUriHandlerExtensionIds": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "When an extension is listed here, a confirmation prompt will not be shown when that extension handles a URI.",
      "default": [],
      "scope": 1,
      "defaultDefaultValue": [],
      "restricted": false
    },
    "extensions.supportUntrustedWorkspaces": {
      "type": "object",
      "scope": 1,
      "markdownDescription": "Override the untrusted workspace support of an extension. Extensions using `true` will always be enabled. Extensions using `limited` will always be enabled, and the extension will hide functionality that requires trust. Extensions using `false` will only be enabled only when the workspace is trusted.",
      "patternProperties": {
        "([a-z0-9A-Z][a-z0-9-A-Z]*)\\.([a-z0-9A-Z][a-z0-9-A-Z]*)$": {
          "type": "object",
          "properties": {
            "supported": {
              "type": [
                "boolean",
                "string"
              ],
              "enum": [
                true,
                false,
                "limited"
              ],
              "enumDescriptions": [
                "Extension will always be enabled.",
                "Extension will only be enabled only when the workspace is trusted.",
                "Extension will always be enabled, and the extension will hide functionality requiring trust."
              ],
              "description": "Defines the untrusted workspace support setting for the extension."
            },
            "version": {
              "type": "string",
              "description": "Defines the version of the extension for which the override should be applied. If not specified, the override will be applied independent of the extension version."
            }
          }
        }
      },
      "default": {},
      "restricted": false
    },
    "terminal.integrated.inheritEnv": {
      "scope": 1,
      "description": "Whether new shells should inherit their environment from VS Code, which may source a login shell to ensure $PATH and other development variables are initialized. This has no effect on Windows.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "restricted": false
    },
    "terminal.integrated.persistentSessionScrollback": {
      "scope": 1,
      "markdownDescription": "Controls the maximum amount of lines that will be restored when reconnecting to a persistent terminal session. Increasing this will restore more lines of scrollback at the cost of more memory and increase the time it takes to connect to terminals on start up. This setting requires a restart to take effect and should be set to a value less than or equal to `#terminal.integrated.scrollback#`.",
      "type": "number",
      "default": 100,
      "defaultDefaultValue": 100,
      "restricted": false
    },
    "terminal.integrated.showLinkHover": {
      "scope": 1,
      "description": "Whether to show hovers for links in the terminal output.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "restricted": false
    },
    "security.workspace.trust.enabled": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether or not Workspace Trust is enabled within VS Code.",
      "tags": [
        "workspaceTrust"
      ],
      "scope": 1,
      "defaultDefaultValue": true,
      "restricted": false
    },
    "security.workspace.trust.startupPrompt": {
      "type": "string",
      "default": "once",
      "description": "Controls when the startup prompt to trust a workspace is shown.",
      "tags": [
        "workspaceTrust"
      ],
      "scope": 1,
      "enum": [
        "always",
        "once",
        "never"
      ],
      "enumDescriptions": [
        "Ask for trust every time an untrusted workspace is opened.",
        "Ask for trust the first time an untrusted workspace is opened.",
        "Do not ask for trust when an untrusted workspace is opened."
      ],
      "defaultDefaultValue": "once",
      "restricted": false
    },
    "security.workspace.trust.banner": {
      "type": "string",
      "default": "untilDismissed",
      "description": "Controls when the restricted mode banner is shown.",
      "tags": [
        "workspaceTrust"
      ],
      "scope": 1,
      "enum": [
        "always",
        "untilDismissed",
        "never"
      ],
      "enumDescriptions": [
        "Show the banner every time an untrusted workspace is open.",
        "Show the banner when an untrusted workspace is opened until dismissed.",
        "Do not show the banner when an untrusted workspace is open."
      ],
      "defaultDefaultValue": "untilDismissed",
      "restricted": false
    },
    "security.workspace.trust.untrustedFiles": {
      "type": "string",
      "default": "prompt",
      "markdownDescription": "Controls how to handle opening untrusted files in a trusted workspace. This setting also applies to opening files in an empty window which is trusted via `#security.workspace.trust.emptyWindow#`.",
      "tags": [
        "workspaceTrust"
      ],
      "scope": 1,
      "enum": [
        "prompt",
        "open",
        "newWindow"
      ],
      "enumDescriptions": [
        "Ask how to handle untrusted files for each workspace. Once untrusted files are introduced to a trusted workspace, you will not be prompted again.",
        "Always allow untrusted files to be introduced to a trusted workspace without prompting.",
        "Always open untrusted files in a separate window in restricted mode without prompting."
      ],
      "defaultDefaultValue": "prompt",
      "restricted": false
    },
    "security.workspace.trust.emptyWindow": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Controls whether or not the empty window is trusted by default within VS Code. When used with `#security.workspace.trust.untrustedFiles#`, you can enable the full functionality of VS Code without prompting in an empty window.",
      "tags": [
        "workspaceTrust"
      ],
      "scope": 1,
      "defaultDefaultValue": true,
      "restricted": false
    },
    "[code-text-binary]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[Log]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[log]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[scminput]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "terminal.external.windowsExec": {
      "type": "string",
      "description": "Customizes which terminal to run on Windows.",
      "default": "C:\\Windows\\System32\\cmd.exe",
      "scope": 1,
      "defaultDefaultValue": "C:\\Windows\\System32\\cmd.exe",
      "restricted": false
    },
    "terminal.external.osxExec": {
      "type": "string",
      "description": "Customizes which terminal application to run on macOS.",
      "default": "Terminal.app",
      "scope": 1,
      "defaultDefaultValue": "Terminal.app",
      "restricted": false
    },
    "terminal.external.linuxExec": {
      "type": "string",
      "description": "Customizes which terminal to run on Linux.",
      "default": "xterm",
      "scope": 1,
      "defaultDefaultValue": "xterm",
      "restricted": false
    },
    "settingsSync.keybindingsPerPlatform": {
      "type": "boolean",
      "description": "Synchronize keybindings for each platform.",
      "default": true,
      "scope": 1,
      "tags": [
        "sync",
        "usesOnlineServices"
      ],
      "defaultDefaultValue": true,
      "restricted": false
    },
    "settingsSync.ignoredExtensions": {
      "type": "array",
      "markdownDescription": "List of extensions to be ignored while synchronizing. The identifier of an extension is always `${publisher}.${name}`. For example: `vscode.csharp`.",
      "items": [
        {
          "type": "string",
          "pattern": "^([a-z0-9A-Z][a-z0-9-A-Z]*)\\.([a-z0-9A-Z][a-z0-9-A-Z]*)$",
          "errorMessage": "Expected format '${publisher}.${name}'. Example: 'vscode.csharp'."
        }
      ],
      "default": [],
      "scope": 1,
      "uniqueItems": true,
      "disallowSyncIgnore": true,
      "tags": [
        "sync",
        "usesOnlineServices"
      ],
      "defaultDefaultValue": [],
      "restricted": false
    },
    "settingsSync.ignoredSettings": {
      "type": "array",
      "description": "Configure settings to be ignored while synchronizing.",
      "default": [],
      "scope": 1,
      "$ref": "vscode://schemas/ignoredSettings",
      "additionalProperties": true,
      "uniqueItems": true,
      "disallowSyncIgnore": true,
      "tags": [
        "sync",
        "usesOnlineServices"
      ],
      "defaultDefaultValue": [],
      "restricted": false
    },
    "[clojure]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {
        "diffEditor.ignoreTrimWhitespace": false
      },
      "defaultValueSource": {
        "id": "vscode.clojure",
        "displayName": "Clojure Language Basics"
      }
    },
    "[coffeescript]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {
        "diffEditor.ignoreTrimWhitespace": false
      },
      "defaultValueSource": {
        "id": "vscode.coffeescript",
        "displayName": "CoffeeScript Language Basics"
      }
    },
    "[csharp]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {
        "editor.maxTokenizationLineLength": 2500
      },
      "defaultValueSource": {
        "id": "vscode.csharp",
        "displayName": "C# Language Basics"
      }
    },
    "[css]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {
        "editor.suggest.insertMode": "replace"
      },
      "defaultValueSource": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      }
    },
    "[scss]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {
        "editor.suggest.insertMode": "replace"
      },
      "defaultValueSource": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      }
    },
    "[less]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {
        "editor.suggest.insertMode": "replace"
      },
      "defaultValueSource": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      }
    },
    "[dockerfile]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {
        "editor.quickSuggestions": {
          "strings": true
        }
      },
      "defaultValueSource": {
        "id": "vscode.docker",
        "displayName": "Docker Language Basics"
      }
    },
    "[fsharp]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {
        "diffEditor.ignoreTrimWhitespace": false
      },
      "defaultValueSource": {
        "id": "vscode.fsharp",
        "displayName": "F# Language Basics"
      }
    },
    "[git-commit]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {
        "editor.rulers": [
          72
        ],
        "workbench.editor.restoreViewState": false
      },
      "defaultValueSource": {
        "id": "vscode.git",
        "displayName": "Git"
      }
    },
    "[git-rebase]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {
        "workbench.editor.restoreViewState": false
      },
      "defaultValueSource": {
        "id": "vscode.git",
        "displayName": "Git"
      }
    },
    "[go]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {
        "editor.insertSpaces": false
      },
      "defaultValueSource": {
        "id": "vscode.go",
        "displayName": "Go Language Basics"
      }
    },
    "[html]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {
        "editor.suggest.insertMode": "replace"
      },
      "defaultValueSource": {
        "id": "vscode.html-language-features",
        "displayName": "HTML Language Features"
      }
    },
    "[handlebars]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {
        "editor.suggest.insertMode": "replace"
      },
      "defaultValueSource": {
        "id": "vscode.html-language-features",
        "displayName": "HTML Language Features"
      }
    },
    "[javascript]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {
        "editor.maxTokenizationLineLength": 2500
      },
      "defaultValueSource": {
        "id": "vscode.javascript",
        "displayName": "JavaScript Language Basics"
      }
    },
    "[json]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {
        "editor.quickSuggestions": {
          "strings": true
        },
        "editor.suggest.insertMode": "replace"
      },
      "defaultValueSource": {
        "id": "vscode.json-language-features",
        "displayName": "JSON Language Features"
      }
    },
    "[jsonc]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {
        "editor.quickSuggestions": {
          "strings": true
        },
        "editor.suggest.insertMode": "replace"
      },
      "defaultValueSource": {
        "id": "vscode.json-language-features",
        "displayName": "JSON Language Features"
      }
    },
    "[makefile]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {
        "editor.insertSpaces": false
      },
      "defaultValueSource": {
        "id": "vscode.make",
        "displayName": "Make Language Basics"
      }
    },
    "[markdown]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {
        "editor.unicodeHighlight.ambiguousCharacters": false,
        "editor.unicodeHighlight.invisibleCharacters": false,
        "diffEditor.ignoreTrimWhitespace": false,
        "editor.wordWrap": "on",
        "editor.quickSuggestions": {
          "comments": "off",
          "strings": "off",
          "other": "off"
        }
      },
      "defaultValueSource": {
        "id": "vscode.markdown-language-features",
        "displayName": "Markdown Language Features"
      }
    },
    "[jade]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {
        "diffEditor.ignoreTrimWhitespace": false
      },
      "defaultValueSource": {
        "id": "vscode.pug",
        "displayName": "Pug Language Basics"
      }
    },
    "[python]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {
        "diffEditor.ignoreTrimWhitespace": false,
        "editor.wordBasedSuggestions": false
      },
      "defaultValueSource": {
        "id": "ms-python.vscode-pylance",
        "displayName": "Pylance"
      }
    },
    "[search-result]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {
        "editor.lineNumbers": "off"
      },
      "defaultValueSource": {
        "id": "vscode.search-result",
        "displayName": "Search Result"
      }
    },
    "[shellscript]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {
        "files.eol": "\n"
      },
      "defaultValueSource": {
        "id": "vscode.shellscript",
        "displayName": "Shell Script Language Basics"
      }
    },
    "[yaml]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {
        "editor.insertSpaces": true,
        "editor.tabSize": 2,
        "editor.autoIndent": "keep",
        "diffEditor.ignoreTrimWhitespace": false,
        "editor.quickSuggestions": {
          "other": true,
          "comments": false,
          "strings": true
        }
      },
      "defaultValueSource": {
        "id": "redhat.vscode-yaml",
        "displayName": "YAML"
      }
    },
    "[dockercompose]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {
        "editor.insertSpaces": true,
        "editor.tabSize": 2,
        "editor.autoIndent": "advanced"
      },
      "defaultValueSource": {
        "id": "vscode.yaml",
        "displayName": "YAML Language Basics"
      }
    },
    "grunt.autoDetect": {
      "scope": 1,
      "type": "string",
      "enum": [
        "off",
        "on"
      ],
      "default": "off",
      "description": "Controls enablement of Grunt task detection. Grunt task detection can cause files in any open workspace to be executed.",
      "source": {
        "id": "vscode.grunt",
        "displayName": "Grunt support for VS Code"
      },
      "defaultDefaultValue": "off",
      "restricted": false
    },
    "gulp.autoDetect": {
      "scope": 1,
      "type": "string",
      "enum": [
        "off",
        "on"
      ],
      "default": "off",
      "description": "Controls enablement of Gulp task detection. Gulp task detection can cause files in any open workspace to be executed.",
      "source": {
        "id": "vscode.gulp",
        "displayName": "Gulp support for VSCode"
      },
      "defaultDefaultValue": "off",
      "restricted": false
    },
    "jake.autoDetect": {
      "scope": 1,
      "type": "string",
      "enum": [
        "off",
        "on"
      ],
      "default": "off",
      "description": "Controls enablement of Jake task detection. Jake task detection can cause files in any open workspace to be executed.",
      "source": {
        "id": "vscode.jake",
        "displayName": "Jake support for VS Code"
      },
      "defaultDefaultValue": "off",
      "restricted": false
    },
    "gitpod.host": {
      "type": "string",
      "description": "Gitpod Service URL. Update this if you are using a Gitpod self-hosted installation.",
      "default": "https://gitpod.io/",
      "scope": 1,
      "source": {
        "id": "gitpod.gitpod-desktop",
        "displayName": "Gitpod"
      },
      "defaultDefaultValue": "https://gitpod.io/",
      "restricted": false
    },
    "gitpod.showReleaseNotes": {
      "type": "boolean",
      "description": "Show the Gitpod Changelog whenever a new one comes out.",
      "default": true,
      "scope": 1,
      "source": {
        "id": "gitpod.gitpod-desktop",
        "displayName": "Gitpod"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gitpod.remote.useLocalApp": {
      "type": "boolean",
      "description": "Use the local companion app to connect to a remote workspace.\nWarning: Connecting to a remote workspace using local companion app will be removed in the near future.",
      "default": true,
      "scope": 1,
      "source": {
        "id": "gitpod.gitpod-desktop",
        "displayName": "Gitpod"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "configurationSync.store": {
      "type": "object",
      "description": "Settings Sync Provider configuration.",
      "scope": 1,
      "source": {
        "id": "gitpod.gitpod-desktop",
        "displayName": "Gitpod"
      },
      "default": {},
      "restricted": false
    },
    "remote.containers.defaultExtensions": {
      "scope": 1,
      "deprecationMessage": "Use 'dev.containers.defaultExtensions' instead.",
      "markdownDeprecationMessage": "Use `#dev.containers.defaultExtensions#` instead.",
      "source": {
        "id": "ms-vscode-remote.remote-containers",
        "displayName": "Dev Containers"
      },
      "default": null,
      "restricted": false
    },
    "dev.containers.defaultExtensions": {
      "scope": 1,
      "type": "array",
      "description": "Configures the list of extensions to always install while creating a container.",
      "default": [],
      "items": {
        "type": "string",
        "pattern": "([a-z0-9A-Z][a-z0-9\\-A-Z]*)\\.([a-z0-9A-Z][a-z0-9\\-A-Z]*)",
        "errorMessage": "Expected format '${publisher}.${name}'. Example: 'vscode.csharp'."
      },
      "source": {
        "id": "ms-vscode-remote.remote-containers",
        "displayName": "Dev Containers"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "dev.containers.defaultFeatures": {
      "scope": 1,
      "type": "object",
      "description": "Configures the list of features to always install while creating a container.",
      "default": {},
      "source": {
        "id": "ms-vscode-remote.remote-containers",
        "displayName": "Dev Containers"
      },
      "defaultDefaultValue": {},
      "restricted": false
    },
    "remote.containers.workspaceMountConsistency": {
      "scope": 1,
      "deprecationMessage": "Use 'dev.containers.workspaceMountConsistency' instead.",
      "markdownDeprecationMessage": "Use `#dev.containers.workspaceMountConsistency#` instead.",
      "source": {
        "id": "ms-vscode-remote.remote-containers",
        "displayName": "Dev Containers"
      },
      "default": null,
      "restricted": false
    },
    "dev.containers.workspaceMountConsistency": {
      "scope": 1,
      "type": "string",
      "enum": [
        "consistent",
        "cached",
        "delegated"
      ],
      "enumDescriptions": [
        "Perfect consistency.",
        "The host’s view is authoritative.",
        "The container’s view is authoritative."
      ],
      "description": "The consistency level used for the workspace mount (existing containers must be rebuilt to take effect).",
      "default": "cached",
      "source": {
        "id": "ms-vscode-remote.remote-containers",
        "displayName": "Dev Containers"
      },
      "defaultDefaultValue": "cached",
      "restricted": false
    },
    "remote.containers.cacheVolume": {
      "scope": 1,
      "deprecationMessage": "Use 'dev.containers.cacheVolume' instead.",
      "markdownDeprecationMessage": "Use `#dev.containers.cacheVolume#` instead.",
      "source": {
        "id": "ms-vscode-remote.remote-containers",
        "displayName": "Dev Containers"
      },
      "default": null,
      "restricted": false
    },
    "dev.containers.cacheVolume": {
      "scope": 1,
      "type": "boolean",
      "description": "Controls whether a Docker volume should be used to cache the VS Code server and extensions. Currently only applies to single container and not Docker Compose configurations.",
      "default": true,
      "source": {
        "id": "ms-vscode-remote.remote-containers",
        "displayName": "Dev Containers"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "remote.containers.logLevel": {
      "scope": 1,
      "deprecationMessage": "Use 'dev.containers.logLevel' instead.",
      "markdownDeprecationMessage": "Use `#dev.containers.logLevel#` instead.",
      "source": {
        "id": "ms-vscode-remote.remote-containers",
        "displayName": "Dev Containers"
      },
      "default": null,
      "restricted": false
    },
    "dev.containers.logLevel": {
      "scope": 1,
      "type": "string",
      "description": "The log level for the extension.",
      "default": "debug",
      "enum": [
        "info",
        "debug",
        "trace"
      ],
      "source": {
        "id": "ms-vscode-remote.remote-containers",
        "displayName": "Dev Containers"
      },
      "defaultDefaultValue": "debug",
      "restricted": false
    },
    "remote.containers.dockerPath": {
      "scope": 1,
      "deprecationMessage": "Use 'dev.containers.dockerPath' instead.",
      "markdownDeprecationMessage": "Use `#dev.containers.dockerPath#` instead.",
      "source": {
        "id": "ms-vscode-remote.remote-containers",
        "displayName": "Dev Containers"
      },
      "default": null,
      "restricted": false
    },
    "dev.containers.dockerPath": {
      "scope": 1,
      "type": "string",
      "description": "Docker (or Podman) executable name or path.",
      "default": "docker",
      "source": {
        "id": "ms-vscode-remote.remote-containers",
        "displayName": "Dev Containers"
      },
      "defaultDefaultValue": "docker",
      "restricted": false
    },
    "remote.containers.dockerComposePath": {
      "scope": 1,
      "deprecationMessage": "Use 'dev.containers.dockerComposePath' instead.",
      "markdownDeprecationMessage": "Use `#dev.containers.dockerComposePath#` instead.",
      "source": {
        "id": "ms-vscode-remote.remote-containers",
        "displayName": "Dev Containers"
      },
      "default": null,
      "restricted": false
    },
    "dev.containers.dockerComposePath": {
      "scope": 1,
      "type": "string",
      "description": "Docker Compose executable name or path.",
      "default": "docker-compose",
      "source": {
        "id": "ms-vscode-remote.remote-containers",
        "displayName": "Dev Containers"
      },
      "defaultDefaultValue": "docker-compose",
      "restricted": false
    },
    "remote.containers.executeInWSL": {
      "scope": 1,
      "deprecationMessage": "Use 'dev.containers.executeInWSL' instead.",
      "markdownDeprecationMessage": "Use `#dev.containers.executeInWSL#` instead.",
      "source": {
        "id": "ms-vscode-remote.remote-containers",
        "displayName": "Dev Containers"
      },
      "default": null,
      "restricted": false
    },
    "dev.containers.executeInWSL": {
      "scope": 1,
      "type": "boolean",
      "description": "Controls whether CLI commands should always be executed in WSL. The default is to only execute in WSL for workspace folders in WSL. This setting has no effect on other platforms than Windows.",
      "default": false,
      "source": {
        "id": "ms-vscode-remote.remote-containers",
        "displayName": "Dev Containers"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "remote.containers.executeInWSLDistro": {
      "scope": 1,
      "deprecationMessage": "Use 'dev.containers.executeInWSLDistro' instead.",
      "markdownDeprecationMessage": "Use `#dev.containers.executeInWSLDistro#` instead.",
      "source": {
        "id": "ms-vscode-remote.remote-containers",
        "displayName": "Dev Containers"
      },
      "default": null,
      "restricted": false
    },
    "dev.containers.executeInWSLDistro": {
      "scope": 1,
      "type": "string",
      "markdownDescription": "WSL distro to use when not reopening a WSL folder. The default is to use the default WSL distro (see `wsl -l`). This setting has no effect when `#dev.containers.executeInWSL#` is not enabled or on other platforms than Windows.",
      "source": {
        "id": "ms-vscode-remote.remote-containers",
        "displayName": "Dev Containers"
      },
      "default": "",
      "restricted": false
    },
    "remote.containers.repositoryConfigurationPaths": {
      "scope": 1,
      "description": "Deprecated setting. Use 'dev.containers.repositoryConfigurationPaths' instead.",
      "deprecationMessage": "Use 'dev.containers.repositoryConfigurationPaths' instead.",
      "markdownDeprecationMessage": "Use `#dev.containers.repositoryConfigurationPaths#` instead.",
      "source": {
        "id": "ms-vscode-remote.remote-containers",
        "displayName": "Dev Containers"
      },
      "default": null,
      "restricted": false
    },
    "dev.containers.repositoryConfigurationPaths": {
      "scope": 1,
      "type": "array",
      "markdownDescription": "List of additional paths to search for [repository configurations](https://github.com/microsoft/vscode-dev-containers/tree/main/repository-containers).",
      "default": [],
      "items": {
        "type": "string"
      },
      "source": {
        "id": "ms-vscode-remote.remote-containers",
        "displayName": "Dev Containers"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "remote.SSH.configFile": {
      "type": "string",
      "description": "The absolute file path to a custom SSH config file.",
      "default": "",
      "scope": 1,
      "source": {
        "id": "ms-vscode-remote.remote-ssh",
        "displayName": "Remote - SSH"
      },
      "defaultDefaultValue": "",
      "restricted": false
    },
    "remote.SSH.showLoginTerminal": {
      "type": "boolean",
      "description": "Always reveal the SSH login terminal.",
      "scope": 1,
      "default": false,
      "source": {
        "id": "ms-vscode-remote.remote-ssh",
        "displayName": "Remote - SSH"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "remote.SSH.defaultExtensions": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "List of extensions that should be installed automatically on all SSH hosts.",
      "scope": 1,
      "source": {
        "id": "ms-vscode-remote.remote-ssh",
        "displayName": "Remote - SSH"
      },
      "default": [],
      "restricted": false
    },
    "remote.SSH.path": {
      "type": "string",
      "description": "An absolute path to the SSH executable. When empty, it will use \"ssh\" on the path or in common install locations.",
      "default": "",
      "scope": 1,
      "source": {
        "id": "ms-vscode-remote.remote-ssh",
        "displayName": "Remote - SSH"
      },
      "defaultDefaultValue": "",
      "restricted": false
    },
    "remote.SSH.serverInstallPath": {
      "type": "object",
      "description": "A map of remote host to absolute path where the VS Code server will be installed. By default the server is installed in the home directory of every remote. **Note**: By changing this setting you may need to clean up other installations of `.vscode-server` on your remote that isn't in the path you've configured.",
      "scope": 1,
      "additionalProperties": {
        "type": "string"
      },
      "source": {
        "id": "ms-vscode-remote.remote-ssh",
        "displayName": "Remote - SSH"
      },
      "default": {},
      "restricted": false
    },
    "remote.SSH.lockfilesInTmp": {
      "type": "boolean",
      "markdownDescription": "Whether to keep lockfiles in `/tmp` instead of in the server's install folder. Useful for connecting to hosts which have issues with locking, such as hosts with a home directory using NFS or another distributed filesystem.",
      "scope": 1,
      "default": false,
      "source": {
        "id": "ms-vscode-remote.remote-ssh",
        "displayName": "Remote - SSH"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "remote.SSH.useFlock": {
      "type": "boolean",
      "markdownDescription": "Whether to use `flock` for creating lockfiles on Linux remotes instead of `ln`. By default, we use `flock` on Linux remotes and `ln` on macOS.",
      "scope": 1,
      "default": true,
      "source": {
        "id": "ms-vscode-remote.remote-ssh",
        "displayName": "Remote - SSH"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "remote.SSH.enableDynamicForwarding": {
      "type": "boolean",
      "description": "Whether to use SSH dynamic forwarding to allow setting up new port tunnels over an existing SSH connection. When this is used, a password only needs to be entered once for each remote window.",
      "scope": 1,
      "default": true,
      "source": {
        "id": "ms-vscode-remote.remote-ssh",
        "displayName": "Remote - SSH"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "remote.SSH.enableAgentForwarding": {
      "type": "boolean",
      "markdownDescription": "Enable fixing the remote environment so that the SSH config option `ForwardAgent` will take effect as expected from VS Code's remote extension host.",
      "scope": 1,
      "default": true,
      "source": {
        "id": "ms-vscode-remote.remote-ssh",
        "displayName": "Remote - SSH"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "remote.SSH.enableX11Forwarding": {
      "type": "boolean",
      "markdownDescription": "Enable fixing the remote environment so that the SSH config option `ForwardX11` will take effect as expected from VS Code's remote extension host.",
      "scope": 1,
      "default": true,
      "source": {
        "id": "ms-vscode-remote.remote-ssh",
        "displayName": "Remote - SSH"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "remote.SSH.enableRemoteCommand": {
      "type": "boolean",
      "markdownDescription": "**Experimental:** Enable using RemoteCommands from ssh config entries. This is only enabled if `#remote.SSH.useLocalServer#` is enabled as well and the remote you are trying to connect to is not listed under the `#remote.SSH.remotePlatform#` setting.",
      "scope": 1,
      "default": false,
      "source": {
        "id": "ms-vscode-remote.remote-ssh",
        "displayName": "Remote - SSH"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "remote.SSH.externalSSH_ASKPASS": {
      "type": "boolean",
      "markdownDescription": "**Experimental:** In local server mode (enabled with `#remote.SSH.useLocalServer#`) Remote - SSH uses SSH_ASKPASS to set VS Code as the application to handle authentication requests; this makes prompts for input show up inside VS Code. However, if you have an external application to handle authentication, such as an YubiKey, you may want to set SSH_ASKPASS to your application instead. If you enable this setting then Remote - SSH won't override your existing SSH_ASKPASS value if one exists.",
      "scope": 1,
      "default": false,
      "source": {
        "id": "ms-vscode-remote.remote-ssh",
        "displayName": "Remote - SSH"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "remote.SSH.allowLocalServerDownload": {
      "type": "boolean",
      "description": "If downloading the VS Code server fails on the host, this allows the extension to fall back to downloading on the client and transferring it to the host with scp.",
      "markdownDeprecationMessage": "Deprecated, please use `#remote.SSH.localServerDownload#`",
      "scope": 1,
      "default": true,
      "source": {
        "id": "ms-vscode-remote.remote-ssh",
        "displayName": "Remote - SSH"
      },
      "defaultDefaultValue": true,
      "restricted": false,
      "deprecationMessage": "Deprecated, please use `#remote.SSH.localServerDownload#`"
    },
    "remote.SSH.localServerDownload": {
      "type": "string",
      "description": "Whether the extension can download the VS Code Server on the client and transfer it to the host with scp, instead of downloading it on the host.",
      "enum": [
        "auto",
        "always",
        "off"
      ],
      "enumDescriptions": [
        "The server will first be downloaded on the host, and if that fails, will fall back to downloading locally",
        "The server will only be downloaded locally and transferred to the host",
        "The server will only be downloaded on the host"
      ],
      "scope": 1,
      "default": "auto",
      "source": {
        "id": "ms-vscode-remote.remote-ssh",
        "displayName": "Remote - SSH"
      },
      "defaultDefaultValue": "auto",
      "restricted": false
    },
    "remote.SSH.windowsRemotes": {
      "type": "array",
      "markdownDescription": "**Deprecated**: Enables experimental support for connecting to Windows remotes. Add the names of windows remotes to this list.",
      "deprecationMessage": "Deprecated: Please use `#remote.SSH.remotePlatorm#` instead",
      "default": [],
      "items": {
        "type": "string"
      },
      "scope": 1,
      "source": {
        "id": "ms-vscode-remote.remote-ssh",
        "displayName": "Remote - SSH"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "remote.SSH.useLocalServer": {
      "type": "boolean",
      "markdownDescription": "Enables a mode for connecting using a single connection shared between windows and across window reloads. This makes it faster to open new windows and reduces the number of times a password needs to be entered.",
      "scope": 1,
      "default": true,
      "source": {
        "id": "ms-vscode-remote.remote-ssh",
        "displayName": "Remote - SSH"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "remote.SSH.connectTimeout": {
      "type": "number",
      "description": "Specifies the timeout in seconds used for the SSH command that connects to the remote.",
      "default": 15,
      "scope": 1,
      "minimum": 1,
      "source": {
        "id": "ms-vscode-remote.remote-ssh",
        "displayName": "Remote - SSH"
      },
      "defaultDefaultValue": 15,
      "restricted": false
    },
    "remote.SSH.logLevel": {
      "type": "string",
      "description": "The log level for the extension.",
      "default": "debug",
      "scope": 1,
      "enum": [
        "debug",
        "trace"
      ],
      "source": {
        "id": "ms-vscode-remote.remote-ssh",
        "displayName": "Remote - SSH"
      },
      "defaultDefaultValue": "debug",
      "restricted": false
    },
    "remote.SSH.maxReconnectionAttempts": {
      "type": [
        "number",
        "null"
      ],
      "markdownDescription": "The maximum number of times to attempt reconnection. Use 0 to disallow reconnection, and `null` to use the maximum of 8.",
      "default": null,
      "scope": 1,
      "maximum": 8,
      "minimum": 0,
      "source": {
        "id": "ms-vscode-remote.remote-ssh",
        "displayName": "Remote - SSH"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "remote.SSH.suppressWindowsSshWarning": {
      "type": "boolean",
      "description": "Due to a bug with password handling in some versions of the SSH client bundled with Windows, the extension prefers a non-Windows SSH client, such as the one bundled with Git, and will show a warning when another one can't be found. This setting disables that warning.",
      "default": false,
      "scope": 1,
      "source": {
        "id": "ms-vscode-remote.remote-ssh",
        "displayName": "Remote - SSH"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "remote.SSH.remotePlatform": {
      "type": "object",
      "markdownDescription": "A map of the remote hostname to the platform for that remote. Valid values: `linux`, `macOS`, `windows`. Note - this setting will soon be required when `#remote.SSH.useLocalServer#` is disabled, so it is currently being autopopulated for successful connections, but is not currently used.",
      "scope": 1,
      "additionalProperties": {
        "type": "string",
        "enum": [
          "macOS",
          "windows",
          "linux"
        ]
      },
      "source": {
        "id": "ms-vscode-remote.remote-ssh",
        "displayName": "Remote - SSH"
      },
      "default": {},
      "restricted": false
    },
    "remote.SSH.serverPickPortsFromRange": {
      "type": "object",
      "markdownDescription": "A map of the remote hostname to a range of ports you'd prefer the server to connect to on launch on the remote machine. If no free port is found in range, an error will be thrown. Valid ranges of the form `number-number` such as `4000-5000`; it's expected the first number will be lower than the next.",
      "scope": 1,
      "additionalProperties": {
        "type": "string",
        "pattern": "^\\d+-\\d+$"
      },
      "source": {
        "id": "ms-vscode-remote.remote-ssh",
        "displayName": "Remote - SSH"
      },
      "default": {},
      "restricted": false
    },
    "remote-explorer.foldersSortOrder": {
      "type": "string",
      "description": "Specifies the order in which to display folders under Remote targets in the Remote Explorer.",
      "default": "most recently used",
      "scope": 1,
      "enum": [
        "most recently used",
        "alphabetical"
      ],
      "enumDescriptions": [
        "Display folders in order of the most recently opened at the top",
        "Display folders in alphabetical order"
      ],
      "source": {
        "id": "ms-vscode.remote-explorer",
        "displayName": "Remote Explorer"
      },
      "defaultDefaultValue": "most recently used",
      "restricted": false
    },
    "[bat]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[c]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[cpp]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[cuda-cpp]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[dart]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[diff]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[ignore]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[groovy]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[hlsl]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[ini]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[properties]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[java]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[javascriptreact]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[jsx-tags]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[julia]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[juliamarkdown]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[tex]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[latex]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[bibtex]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[cpp_embedded_latex]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[markdown_latex_combined]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[lua]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[markdown-math]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[objective-c]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[objective-cpp]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[perl]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[perl6]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[php]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[powershell]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[r]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[razor]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[restructuredtext]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[ruby]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[rust]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[shaderlab]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[sql]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[swift]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[typescript]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[typescriptreact]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[vb]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[xml]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[xsl]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[_hyperscript]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[drawio]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[ssh_config]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[jinja]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[tailwindcss]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "svelte.language-server.runtime": {
      "scope": 1,
      "type": "string",
      "title": "Language Server Runtime",
      "description": "- You normally don't need this - Path to the node executable to use to spawn the language server. This is useful when you depend on native modules such as node-sass as without this they will run in the context of vscode, meaning node version mismatch is likely. Minimum required node version is 12.17. This setting can only be changed in user settings for security reasons.",
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "default": "",
      "restricted": false
    },
    "svelte.language-server.ls-path": {
      "scope": 1,
      "type": "string",
      "title": "Language Server Path",
      "description": "- You normally don't set this - Path to the language server executable. If you installed the \"svelte-language-server\" npm package, it's within there at \"bin/server.js\". Path can be either relative to your workspace root or absolute. Set this only if you want to use a custom version of the language server. This will then also use the workspace version of TypeScript. This setting can only be changed in user settings for security reasons.",
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "default": "",
      "restricted": false
    },
    "[svelte]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "python.diagnostics.sourceMapsEnabled": {
      "default": false,
      "description": "Enable source map support for meaningful stack traces in error logs.",
      "scope": 1,
      "type": "boolean",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "jupyter.experiments.optInto": {
      "type": "array",
      "default": [],
      "items": {
        "enum": []
      },
      "markdownDescription": "List of experiment to opt into. If empty, user is assigned the default experiment groups. [Learn more](https://github.com/microsoft/vscode-jupyter/wiki/Experiments).",
      "scope": 1,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "jupyter.experiments.optOutFrom": {
      "type": "array",
      "default": [],
      "items": {
        "enum": []
      },
      "markdownDescription": "List of experiment to opt out of. If empty, user is assigned the default experiment groups. [Learn more](https://github.com/microsoft/vscode-jupyter/wiki/Experiments).",
      "scope": 1,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "jupyter.widgetScriptSources": {
      "type": "array",
      "default": [],
      "items": {
        "type": "string",
        "enum": [
          "jsdelivr.com",
          "unpkg.com"
        ],
        "enumDescriptions": [
          "Loads widget (javascript) scripts from https://www.jsdelivr.com/",
          "Loads widget (javascript) scripts from https://unpkg.com/"
        ]
      },
      "uniqueItems": true,
      "markdownDescription": "Defines the location and order of the sources where scripts files for Widgets are downloaded from (e.g. ipywidgest, bqplot, beakerx, ipyleaflet, etc). Not selecting any of these could result in widgets not rendering or function correctly. See [here](https://aka.ms/PVSCIPyWidgets) for more information. Once updated you will need to restart the Kernel.",
      "scope": 1,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "jupyter.askForLargeDataFrames": {
      "type": "boolean",
      "default": true,
      "description": "Warn the user before trying to open really large data frames.",
      "scope": 1,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "jupyter.pythonExportMethod": {
      "type": "string",
      "enum": [
        "direct",
        "commentMagics",
        "nbconvert"
      ],
      "default": "direct",
      "description": "The method to use when exporting a notebook to a Python file. 'direct' will copy over the code directly as is. 'commentMagics' will comment out lines starting with line magics (%), cell magics (%%), and shell commands(!). 'nbconvert' will install nbconvert and use that for the conversion which can translate iPython syntax into Python syntax.",
      "scope": 1,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": "direct",
      "restricted": false
    },
    "jupyter.runStartupCommands": {
      "type": "array",
      "default": "",
      "description": "A series of Python instructions or iPython magic commands. Can be either an array of strings or a single string with commands separated by '\\n'. Commands will be silently executed whenever the interactive window loads. For instance, set this to '%load_ext autoreload\\n%autoreload 2' to automatically reload changes made to imported files without having to restart the interactive session.",
      "scope": 1,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": "",
      "restricted": false
    },
    "jupyter.pythonCompletionTriggerCharacters": {
      "type": "string",
      "default": ".%'\"",
      "description": "Characters which trigger auto completion on a python jupyter kernel.",
      "scope": 1,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": ".%'\"",
      "restricted": false
    },
    "jupyter.excludeUserSitePackages": {
      "type": "boolean",
      "default": false,
      "description": "Add PYTHONNOUSERSITE to kernels before starting. This prevents global/user site-packages from being used in the PYTHONPATH of the kernel.",
      "scope": 1,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "jupyter.enableExtendedKernelCompletions": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Enables Jedi support for extended IntelliSense completions in running Jupyter kernels (see this [setting](https://ipython.readthedocs.io/en/stable/config/options/terminal.html?highlight=use_jedi#configtrait-Completer.use_jedi)). This can greatly impact notebook cell execution performance. Use with caution.",
      "scope": 1,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "[pip-requirements]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[toml]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[raw]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "leetcode.hideSolved": {
      "type": "boolean",
      "default": false,
      "scope": 1,
      "description": "Hide solved problems.",
      "source": {
        "id": "KuiyuanFu.python-leetcode",
        "displayName": "PythonLeetcode"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "leetcode.showLocked": {
      "type": "boolean",
      "default": false,
      "scope": 1,
      "description": "Show locked problems.",
      "source": {
        "id": "KuiyuanFu.python-leetcode",
        "displayName": "PythonLeetcode"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "leetcode.defaultLanguage": {
      "type": "string",
      "enum": [
        "bash",
        "c",
        "cpp",
        "csharp",
        "golang",
        "java",
        "javascript",
        "kotlin",
        "mysql",
        "php",
        "python",
        "python3",
        "ruby",
        "rust",
        "scala",
        "swift",
        "typescript"
      ],
      "scope": 1,
      "description": "Default language for solving the problems.",
      "source": {
        "id": "KuiyuanFu.python-leetcode",
        "displayName": "PythonLeetcode"
      },
      "default": "",
      "restricted": false
    },
    "leetcode.showDescription": {
      "type": "string",
      "default": "In Webview",
      "enum": [
        "In Webview",
        "In File Comment",
        "Both",
        "None"
      ],
      "enumDescriptions": [
        "Show the problem description in a new webview window",
        "Show the problem description in the file's comment"
      ],
      "scope": 1,
      "description": "Specify where to show the description.",
      "source": {
        "id": "KuiyuanFu.python-leetcode",
        "displayName": "PythonLeetcode"
      },
      "defaultDefaultValue": "In Webview",
      "restricted": false
    },
    "leetcode.showCommentDescription": {
      "type": "boolean",
      "default": false,
      "scope": 1,
      "description": "[Deprecated] Include problem description in comments.",
      "deprecationMessage": "This setting will be deprecated in 0.17.0, please use 'leetcode.showDescription' instead",
      "source": {
        "id": "KuiyuanFu.python-leetcode",
        "displayName": "PythonLeetcode"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "leetcode.hint.setDefaultLanguage": {
      "type": "boolean",
      "default": true,
      "scope": 1,
      "description": "Show a hint to set the default language.",
      "source": {
        "id": "KuiyuanFu.python-leetcode",
        "displayName": "PythonLeetcode"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "leetcode.hint.configWebviewMarkdown": {
      "type": "boolean",
      "default": true,
      "scope": 1,
      "description": "Show a hint to change webview appearance through markdown config.",
      "source": {
        "id": "KuiyuanFu.python-leetcode",
        "displayName": "PythonLeetcode"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "leetcode.hint.commentDescription": {
      "type": "boolean",
      "default": true,
      "scope": 1,
      "description": "Show a hint to enable comment description in solution code file.",
      "source": {
        "id": "KuiyuanFu.python-leetcode",
        "displayName": "PythonLeetcode"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "leetcode.hint.commandShortcut": {
      "type": "boolean",
      "default": true,
      "scope": 1,
      "description": "Show a hint to configure commands key binding.",
      "source": {
        "id": "KuiyuanFu.python-leetcode",
        "displayName": "PythonLeetcode"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "leetcode.useWsl": {
      "type": "boolean",
      "default": false,
      "scope": 1,
      "description": "Use the Windows Subsystem for Linux.",
      "source": {
        "id": "KuiyuanFu.python-leetcode",
        "displayName": "PythonLeetcode"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "leetcode.endpoint": {
      "type": "string",
      "default": "leetcode",
      "scope": 1,
      "enum": [
        "leetcode",
        "leetcode-cn"
      ],
      "description": "Endpoint of the user account.",
      "source": {
        "id": "KuiyuanFu.python-leetcode",
        "displayName": "PythonLeetcode"
      },
      "defaultDefaultValue": "leetcode",
      "restricted": false
    },
    "leetcode.useEndpointTranslation": {
      "type": "boolean",
      "default": true,
      "scope": 1,
      "description": "Use endpoint's translation (if available)",
      "source": {
        "id": "KuiyuanFu.python-leetcode",
        "displayName": "PythonLeetcode"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "leetcode.workspaceFolder": {
      "type": "string",
      "scope": 1,
      "description": "The path of the workspace folder to store the problem files.",
      "default": "",
      "source": {
        "id": "KuiyuanFu.python-leetcode",
        "displayName": "PythonLeetcode"
      },
      "defaultDefaultValue": "",
      "restricted": false
    },
    "leetcode.filePath": {
      "type": "object",
      "scope": 1,
      "description": "The output folder and filename to save the problem files.",
      "properties": {
        "default": {
          "type": "object",
          "properties": {
            "folder": {
              "type": "string",
              "examples": [
                "src"
              ]
            },
            "filename": {
              "type": "string",
              "examples": [
                "${camelCaseName}.${ext}",
                "${PascalCaseName}.${ext}",
                "${id}-${kebab-case-name}.${ext}",
                "${id}_${snake_case_name}.${ext}"
              ]
            }
          },
          "required": [
            "folder",
            "filename"
          ]
        },
        "bash": {
          "type": "object",
          "properties": {
            "folder": {
              "type": "string"
            },
            "filename": {
              "type": "string"
            }
          },
          "minProperties": 1
        },
        "c": {
          "type": "object",
          "properties": {
            "folder": {
              "type": "string"
            },
            "filename": {
              "type": "string"
            }
          },
          "minProperties": 1
        },
        "cpp": {
          "type": "object",
          "properties": {
            "folder": {
              "type": "string"
            },
            "filename": {
              "type": "string"
            }
          },
          "minProperties": 1
        },
        "csharp": {
          "type": "object",
          "properties": {
            "folder": {
              "type": "string"
            },
            "filename": {
              "type": "string"
            }
          },
          "minProperties": 1
        },
        "golang": {
          "type": "object",
          "properties": {
            "folder": {
              "type": "string"
            },
            "filename": {
              "type": "string"
            }
          },
          "minProperties": 1
        },
        "java": {
          "type": "object",
          "properties": {
            "folder": {
              "type": "string"
            },
            "filename": {
              "type": "string"
            }
          },
          "minProperties": 1
        },
        "javascript": {
          "type": "object",
          "properties": {
            "folder": {
              "type": "string"
            },
            "filename": {
              "type": "string"
            }
          },
          "minProperties": 1
        },
        "kotlin": {
          "type": "object",
          "properties": {
            "folder": {
              "type": "string"
            },
            "filename": {
              "type": "string"
            }
          },
          "minProperties": 1
        },
        "mysql": {
          "type": "object",
          "properties": {
            "folder": {
              "type": "string"
            },
            "filename": {
              "type": "string"
            }
          },
          "minProperties": 1
        },
        "php": {
          "type": "object",
          "properties": {
            "folder": {
              "type": "string"
            },
            "filename": {
              "type": "string"
            }
          },
          "minProperties": 1
        },
        "python": {
          "type": "object",
          "properties": {
            "folder": {
              "type": "string"
            },
            "filename": {
              "type": "string"
            }
          },
          "minProperties": 1
        },
        "python3": {
          "type": "object",
          "properties": {
            "folder": {
              "type": "string"
            },
            "filename": {
              "type": "string"
            }
          },
          "minProperties": 1
        },
        "ruby": {
          "type": "object",
          "properties": {
            "folder": {
              "type": "string"
            },
            "filename": {
              "type": "string"
            }
          },
          "minProperties": 1
        },
        "rust": {
          "type": "object",
          "properties": {
            "folder": {
              "type": "string"
            },
            "filename": {
              "type": "string"
            }
          },
          "minProperties": 1
        },
        "scala": {
          "type": "object",
          "properties": {
            "folder": {
              "type": "string"
            },
            "filename": {
              "type": "string"
            }
          },
          "minProperties": 1
        },
        "swift": {
          "type": "object",
          "properties": {
            "folder": {
              "type": "string"
            },
            "filename": {
              "type": "string"
            }
          },
          "minProperties": 1
        }
      },
      "additionalProperties": {
        "type": "object",
        "properties": {
          "folder": {
            "type": "string"
          },
          "filename": {
            "type": "string"
          }
        },
        "minProperties": 1
      },
      "default": {
        "default": {
          "folder": "",
          "filename": "${id}.${kebab-case-name}.${ext}"
        }
      },
      "source": {
        "id": "KuiyuanFu.python-leetcode",
        "displayName": "PythonLeetcode"
      },
      "defaultDefaultValue": {
        "default": {
          "folder": "",
          "filename": "${id}.${kebab-case-name}.${ext}"
        }
      },
      "restricted": false
    },
    "leetcode.enableStatusBar": {
      "type": "boolean",
      "default": true,
      "scope": 1,
      "description": "Show the LeetCode status bar or not.",
      "source": {
        "id": "KuiyuanFu.python-leetcode",
        "displayName": "PythonLeetcode"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "leetcode.editor.shortcuts": {
      "type": "array",
      "default": [
        "submit",
        "test"
      ],
      "scope": 1,
      "items": {
        "type": "string",
        "enum": [
          "submit",
          "test",
          "star",
          "solution",
          "description"
        ],
        "enumDescriptions": [
          "Submit your answer to LeetCode.",
          "Test your answer with customized test cases.",
          "Star or unstar the current problem.",
          "Show the top voted solution for the current problem.",
          "Show the problem description page."
        ]
      },
      "description": "Customize the shortcuts in editors.",
      "source": {
        "id": "KuiyuanFu.python-leetcode",
        "displayName": "PythonLeetcode"
      },
      "defaultDefaultValue": [
        "submit",
        "test"
      ],
      "restricted": false
    },
    "leetcode.enableSideMode": {
      "type": "boolean",
      "default": true,
      "scope": 1,
      "description": "Determine whether to group all webview pages into the second editor column when solving problems.",
      "source": {
        "id": "KuiyuanFu.python-leetcode",
        "displayName": "PythonLeetcode"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "leetcode.nodePath": {
      "type": "string",
      "default": "node",
      "scope": 1,
      "description": "The Node.js executable path. for example, C:\\Program Files\\nodejs\\node.exe",
      "source": {
        "id": "KuiyuanFu.python-leetcode",
        "displayName": "PythonLeetcode"
      },
      "defaultDefaultValue": "node",
      "restricted": false
    },
    "leetcode.colorizeProblems": {
      "type": "boolean",
      "default": true,
      "scope": 1,
      "description": "Add difficulty badge and colorize problems files in explorer tree.",
      "source": {
        "id": "KuiyuanFu.python-leetcode",
        "displayName": "PythonLeetcode"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "leetcode.problems.sortStrategy": {
      "type": "string",
      "default": "None",
      "scope": 1,
      "enum": [
        "None",
        "Acceptance Rate (Ascending)",
        "Acceptance Rate (Descending)"
      ],
      "description": "Sorting strategy for problems list.",
      "source": {
        "id": "KuiyuanFu.python-leetcode",
        "displayName": "PythonLeetcode"
      },
      "defaultDefaultValue": "None",
      "restricted": false
    },
    "workbench.list.multiSelectModifier": {
      "type": "string",
      "enum": [
        "ctrlCmd",
        "alt"
      ],
      "markdownEnumDescriptions": [
        "Maps to `Control` on Windows and Linux and to `Command` on macOS.",
        "Maps to `Alt` on Windows and Linux and to `Option` on macOS."
      ],
      "default": "ctrlCmd",
      "description": "The modifier to be used to add an item in trees and lists to a multi-selection with the mouse (for example in the explorer, open editors and scm view). The 'Open to Side' mouse gestures - if supported - will adapt such that they do not conflict with the multiselect modifier.",
      "defaultDefaultValue": "ctrlCmd",
      "scope": 3,
      "restricted": false
    },
    "workbench.list.openMode": {
      "type": "string",
      "enum": [
        "singleClick",
        "doubleClick"
      ],
      "default": "singleClick",
      "description": "Controls how to open items in trees and lists using the mouse (if supported). Note that some trees and lists might choose to ignore this setting if it is not applicable.",
      "defaultDefaultValue": "singleClick",
      "scope": 3,
      "restricted": false
    },
    "workbench.list.horizontalScrolling": {
      "type": "boolean",
      "default": false,
      "description": "Controls whether lists and trees support horizontal scrolling in the workbench. Warning: turning on this setting has a performance implication.",
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "workbench.list.scrollByPage": {
      "type": "boolean",
      "default": false,
      "description": "Controls whether clicks in the scrollbar scroll page by page.",
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "workbench.tree.indent": {
      "type": "number",
      "default": 8,
      "minimum": 4,
      "maximum": 40,
      "description": "Controls tree indentation in pixels.",
      "defaultDefaultValue": 8,
      "scope": 3,
      "restricted": false
    },
    "workbench.tree.renderIndentGuides": {
      "type": "string",
      "enum": [
        "none",
        "onHover",
        "always"
      ],
      "default": "onHover",
      "description": "Controls whether the tree should render indent guides.",
      "defaultDefaultValue": "onHover",
      "scope": 3,
      "restricted": false
    },
    "workbench.list.smoothScrolling": {
      "type": "boolean",
      "default": false,
      "description": "Controls whether lists and trees have smooth scrolling.",
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "workbench.list.mouseWheelScrollSensitivity": {
      "type": "number",
      "default": 1,
      "markdownDescription": "A multiplier to be used on the `deltaX` and `deltaY` of mouse wheel scroll events.",
      "defaultDefaultValue": 1,
      "scope": 3,
      "restricted": false
    },
    "workbench.list.fastScrollSensitivity": {
      "type": "number",
      "default": 5,
      "markdownDescription": "Scrolling speed multiplier when pressing `Alt`.",
      "defaultDefaultValue": 5,
      "scope": 3,
      "restricted": false
    },
    "workbench.list.defaultFindMode": {
      "type": "string",
      "enum": [
        "highlight",
        "filter"
      ],
      "enumDescriptions": [
        "Highlight elements when searching. Further up and down navigation will traverse only the highlighted elements.",
        "Filter elements when searching."
      ],
      "default": "highlight",
      "description": "Controls the default find mode for lists and trees in the workbench.",
      "defaultDefaultValue": "highlight",
      "scope": 3,
      "restricted": false
    },
    "workbench.list.keyboardNavigation": {
      "type": "string",
      "enum": [
        "simple",
        "highlight",
        "filter"
      ],
      "enumDescriptions": [
        "Simple keyboard navigation focuses elements which match the keyboard input. Matching is done only on prefixes.",
        "Highlight keyboard navigation highlights elements which match the keyboard input. Further up and down navigation will traverse only the highlighted elements.",
        "Filter keyboard navigation will filter out and hide all the elements which do not match the keyboard input."
      ],
      "default": "highlight",
      "description": "Controls the keyboard navigation style for lists and trees in the workbench. Can be simple, highlight and filter.",
      "deprecated": true,
      "deprecationMessage": "Please use 'workbench.list.defaultFindMode' and\t'workbench.list.typeNavigationMode' instead.",
      "defaultDefaultValue": "highlight",
      "scope": 3,
      "restricted": false
    },
    "workbench.list.defaultFindMatchType": {
      "type": "string",
      "enum": [
        "fuzzy",
        "contiguous"
      ],
      "enumDescriptions": [
        "Use fuzzy matching when searching.",
        "Use contiguous matching when searching."
      ],
      "default": "fuzzy",
      "description": "Controls the type of matching used when searching lists and trees in the workbench.",
      "defaultDefaultValue": "fuzzy",
      "scope": 3,
      "restricted": false
    },
    "workbench.tree.expandMode": {
      "type": "string",
      "enum": [
        "singleClick",
        "doubleClick"
      ],
      "default": "singleClick",
      "description": "Controls how tree folders are expanded when clicking the folder names. Note that some trees and lists might choose to ignore this setting if it is not applicable.",
      "defaultDefaultValue": "singleClick",
      "scope": 3,
      "restricted": false
    },
    "workbench.list.typeNavigationMode": {
      "type": "string",
      "enum": [
        "automatic",
        "trigger"
      ],
      "default": "automatic",
      "description": "Controls the how type navigation works in lists and trees in the workbench. When set to 'trigger', type navigation begins once the 'list.triggerTypeNavigation' command is run.",
      "defaultDefaultValue": "automatic",
      "scope": 3,
      "restricted": false
    },
    "breadcrumbs.enabled": {
      "description": "Enable/disable navigation breadcrumbs.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "breadcrumbs.filePath": {
      "description": "Controls whether and how file paths are shown in the breadcrumbs view.",
      "type": "string",
      "default": "on",
      "enum": [
        "on",
        "off",
        "last"
      ],
      "enumDescriptions": [
        "Show the file path in the breadcrumbs view.",
        "Do not show the file path in the breadcrumbs view.",
        "Only show the last element of the file path in the breadcrumbs view."
      ],
      "defaultDefaultValue": "on",
      "scope": 3,
      "restricted": false
    },
    "breadcrumbs.symbolPath": {
      "description": "Controls whether and how symbols are shown in the breadcrumbs view.",
      "type": "string",
      "default": "on",
      "enum": [
        "on",
        "off",
        "last"
      ],
      "enumDescriptions": [
        "Show all symbols in the breadcrumbs view.",
        "Do not show symbols in the breadcrumbs view.",
        "Only show the current symbol in the breadcrumbs view."
      ],
      "defaultDefaultValue": "on",
      "scope": 3,
      "restricted": false
    },
    "breadcrumbs.icons": {
      "description": "Render breadcrumb items with icons.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "workbench.editorAssociations": {
      "type": "object",
      "markdownDescription": "Configure glob patterns to editors (for example `\"*.hex\": \"hexEditor.hexedit\"`). These have precedence over the default behavior.",
      "patternProperties": {
        ".*": {
          "type": "string",
          "enum": [
            "default",
            "workbench.editorinputs.searchEditorInput",
            "vscode.markdown.preview.editor",
            "imagePreview.previewEditor",
            "vscode.audioPreview",
            "vscode.videoPreview",
            "jsProfileVisualizer.cpuprofile.table",
            "jsProfileVisualizer.heapprofile.table",
            "hediet.vscode-drawio",
            "hediet.vscode-drawio-text",
            "jupyter-notebook"
          ]
        }
      },
      "default": {},
      "scope": 3,
      "restricted": false
    },
    "notebook.navigation.allowNavigateToSurroundingCells": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled cursor can navigate to the next/previous cell when the current cursor in the cell editor is at the first/last line.",
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "notebook.lineNumbers": {
      "type": "string",
      "enum": [
        "off",
        "on"
      ],
      "default": "off",
      "markdownDescription": "Controls the display of line numbers in the cell editor.",
      "defaultDefaultValue": "off",
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.titleScrollbarSizing": {
      "type": "string",
      "enum": [
        "default",
        "large"
      ],
      "enumDescriptions": [
        "The default size.",
        "Increases the size, so it can be grabbed more easily with the mouse."
      ],
      "description": "Controls the height of the scrollbars used for tabs and breadcrumbs in the editor title area.",
      "default": "default",
      "defaultDefaultValue": "default",
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.showTabs": {
      "type": "boolean",
      "description": "Controls whether opened editors should show in tabs or not.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.wrapTabs": {
      "type": "boolean",
      "markdownDescription": "Controls whether tabs should be wrapped over multiple lines when exceeding available space or whether a scrollbar should appear instead. This value is ignored when `#workbench.editor.showTabs#` is disabled.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.scrollToSwitchTabs": {
      "type": "boolean",
      "markdownDescription": "Controls whether scrolling over tabs will open them or not. By default tabs will only reveal upon scrolling, but not open. You can press and hold the Shift-key while scrolling to change this behavior for that duration. This value is ignored when `#workbench.editor.showTabs#` is disabled.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.highlightModifiedTabs": {
      "type": "boolean",
      "markdownDescription": "Controls whether a top border is drawn on tabs for editors that have unsaved changes. This value is ignored when `#workbench.editor.showTabs#` is disabled.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.decorations.badges": {
      "type": "boolean",
      "markdownDescription": "Controls whether editor file decorations should use badges.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.decorations.colors": {
      "type": "boolean",
      "markdownDescription": "Controls whether editor file decorations should use colors.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.labelFormat": {
      "type": "string",
      "enum": [
        "default",
        "short",
        "medium",
        "long"
      ],
      "enumDescriptions": [
        "Show the name of the file. When tabs are enabled and two files have the same name in one group the distinguishing sections of each file's path are added. When tabs are disabled, the path relative to the workspace folder is shown if the editor is active.",
        "Show the name of the file followed by its directory name.",
        "Show the name of the file followed by its path relative to the workspace folder.",
        "Show the name of the file followed by its absolute path."
      ],
      "default": "default",
      "description": "Controls the format of the label for an editor.",
      "defaultDefaultValue": "default",
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.untitled.labelFormat": {
      "type": "string",
      "enum": [
        "content",
        "name"
      ],
      "enumDescriptions": [
        "The name of the untitled file is derived from the contents of its first line unless it has an associated file path. It will fallback to the name in case the line is empty or contains no word characters.",
        "The name of the untitled file is not derived from the contents of the file."
      ],
      "default": "content",
      "description": "Controls the format of the label for an untitled editor.",
      "defaultDefaultValue": "content",
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.untitled.hint": {
      "type": "string",
      "enum": [
        "text",
        "hidden"
      ],
      "default": "text",
      "markdownDescription": "Controls if the untitled text hint should be visible in the editor.",
      "defaultDefaultValue": "text",
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.historyBasedLanguageDetection": {
      "type": "boolean",
      "default": true,
      "tags": [
        "experimental"
      ],
      "description": "Enables use of editor history in language detection. This causes automatic language detection to favor languages that have been recently opened and allows for automatic language detection to operate with smaller inputs.",
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.preferHistoryBasedLanguageDetection": {
      "type": "boolean",
      "default": false,
      "tags": [
        "experimental"
      ],
      "description": "When enabled, a language detection model that takes into account editor history will be given higher precedence.",
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.languageDetectionHints": {
      "type": "object",
      "default": {
        "untitledEditors": true,
        "notebookEditors": true
      },
      "tags": [
        "experimental"
      ],
      "description": "When enabled, shows a Status bar Quick Fix when the editor language doesn't match detected content language.",
      "additionalProperties": false,
      "properties": {
        "untitledEditors": {
          "type": "boolean",
          "description": "Show in untitled text editors"
        },
        "notebookEditors": {
          "type": "boolean",
          "description": "Show in notebook editors"
        }
      },
      "defaultDefaultValue": {
        "untitledEditors": true,
        "notebookEditors": true
      },
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.tabCloseButton": {
      "type": "string",
      "enum": [
        "left",
        "right",
        "off"
      ],
      "default": "right",
      "markdownDescription": "Controls the position of the editor's tabs close buttons, or disables them when set to 'off'. This value is ignored when `#workbench.editor.showTabs#` is disabled.",
      "defaultDefaultValue": "right",
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.tabSizing": {
      "type": "string",
      "enum": [
        "fit",
        "shrink"
      ],
      "default": "fit",
      "enumDescriptions": [
        "Always keep tabs large enough to show the full editor label.",
        "Allow tabs to get smaller when the available space is not enough to show all tabs at once."
      ],
      "markdownDescription": "Controls the sizing of editor tabs. This value is ignored when `#workbench.editor.showTabs#` is disabled.",
      "defaultDefaultValue": "fit",
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.pinnedTabSizing": {
      "type": "string",
      "enum": [
        "normal",
        "compact",
        "shrink"
      ],
      "default": "normal",
      "enumDescriptions": [
        "A pinned tab inherits the look of non pinned tabs.",
        "A pinned tab will show in a compact form with only icon or first letter of the editor name.",
        "A pinned tab shrinks to a compact fixed size showing parts of the editor name."
      ],
      "markdownDescription": "Controls the sizing of pinned editor tabs. Pinned tabs are sorted to the beginning of all opened tabs and typically do not close until unpinned. This value is ignored when `#workbench.editor.showTabs#` is disabled.",
      "defaultDefaultValue": "normal",
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.splitSizing": {
      "type": "string",
      "enum": [
        "distribute",
        "split"
      ],
      "default": "distribute",
      "enumDescriptions": [
        "Splits all the editor groups to equal parts.",
        "Splits the active editor group to equal parts."
      ],
      "description": "Controls the sizing of editor groups when splitting them.",
      "defaultDefaultValue": "distribute",
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.splitOnDragAndDrop": {
      "type": "boolean",
      "default": true,
      "description": "Controls if editor groups can be split from drag and drop operations by dropping an editor or file on the edges of the editor area.",
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.focusRecentEditorAfterClose": {
      "type": "boolean",
      "description": "Controls whether tabs are closed in most recently used order or from left to right.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.showIcons": {
      "type": "boolean",
      "description": "Controls whether opened editors should show with an icon or not. This requires a file icon theme to be enabled as well.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.enablePreview": {
      "type": "boolean",
      "description": "Controls whether opened editors show as preview editors. Preview editors do not stay open, are reused until explicitly set to be kept open (via double-click or editing), and show file names in italics.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.enablePreviewFromQuickOpen": {
      "type": "boolean",
      "markdownDescription": "Controls whether editors opened from Quick Open show as preview editors. Preview editors do not stay open, and are reused until explicitly set to be kept open (via double-click or editing). When enabled, hold Ctrl before selection to open an editor as a non-preview. This value is ignored when `#workbench.editor.enablePreview#` is disabled.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.enablePreviewFromCodeNavigation": {
      "type": "boolean",
      "markdownDescription": "Controls whether editors remain in preview when a code navigation is started from them. Preview editors do not stay open, and are reused until explicitly set to be kept open (via double-click or editing). This value is ignored when `#workbench.editor.enablePreview#` is disabled.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.closeOnFileDelete": {
      "type": "boolean",
      "description": "Controls whether editors showing a file that was opened during the session should close automatically when getting deleted or renamed by some other process. Disabling this will keep the editor open  on such an event. Note that deleting from within the application will always close the editor and that editors with unsaved changes will never close to preserve your data.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.openPositioning": {
      "type": "string",
      "enum": [
        "left",
        "right",
        "first",
        "last"
      ],
      "default": "right",
      "markdownDescription": "Controls where editors open. Select `left` or `right` to open editors to the left or right of the currently active one. Select `first` or `last` to open editors independently from the currently active one.",
      "defaultDefaultValue": "right",
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.openSideBySideDirection": {
      "type": "string",
      "enum": [
        "right",
        "down"
      ],
      "default": "right",
      "markdownDescription": "Controls the default direction of editors that are opened side by side (for example, from the Explorer). By default, editors will open on the right hand side of the currently active one. If changed to `down`, the editors will open below the currently active one.",
      "defaultDefaultValue": "right",
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.closeEmptyGroups": {
      "type": "boolean",
      "description": "Controls the behavior of empty editor groups when the last tab in the group is closed. When enabled, empty groups will automatically close. When disabled, empty groups will remain part of the grid.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.revealIfOpen": {
      "type": "boolean",
      "description": "Controls whether an editor is revealed in any of the visible groups if opened. If disabled, an editor will prefer to open in the currently active editor group. If enabled, an already opened editor will be revealed instead of opened again in the currently active editor group. Note that there are some cases where this setting is ignored, such as when forcing an editor to open in a specific group or to the side of the currently active group.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.mouseBackForwardToNavigate": {
      "type": "boolean",
      "description": "Enables the use of mouse buttons four and five for commands 'Go Back' and 'Go Forward'.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.navigationScope": {
      "type": "string",
      "enum": [
        "default",
        "editorGroup",
        "editor"
      ],
      "default": "default",
      "markdownDescription": "Controls the scope of history navigation in editors for commands such as 'Go Back' and 'Go Forward'.",
      "enumDescriptions": [
        "Navigate across all opened editors and editor groups.",
        "Navigate only in editors of the active editor group.",
        "Navigate only in the active editor."
      ],
      "defaultDefaultValue": "default",
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.sharedViewState": {
      "type": "boolean",
      "description": "Preserves the most recent editor view state (such as scroll position) across all editor groups and restores that if no specific editor view state is found for the editor group.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.splitInGroupLayout": {
      "type": "string",
      "enum": [
        "vertical",
        "horizontal"
      ],
      "default": "horizontal",
      "markdownDescription": "Controls the layout for when an editor is split in an editor group to be either vertical or horizontal.",
      "enumDescriptions": [
        "Editors are positioned from top to bottom.",
        "Editors are positioned from left to right."
      ],
      "defaultDefaultValue": "horizontal",
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.centeredLayoutAutoResize": {
      "type": "boolean",
      "default": true,
      "description": "Controls if the centered layout should automatically resize to maximum width when more than one group is open. Once only one group is open it will resize back to the original centered width.",
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.centeredLayoutFixedWidth": {
      "type": "boolean",
      "default": false,
      "description": "Controls whether the centered layout tries to maintain constant width when the window is resized.",
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.limit.enabled": {
      "type": "boolean",
      "default": false,
      "description": "Controls if the number of opened editors should be limited or not. When enabled, less recently used editors will close to make space for newly opening editors.",
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.limit.value": {
      "type": "number",
      "default": 10,
      "exclusiveMinimum": 0,
      "markdownDescription": "Controls the maximum number of opened editors. Use the `#workbench.editor.limit.perEditorGroup#` setting to control this limit per editor group or across all groups.",
      "defaultDefaultValue": 10,
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.limit.excludeDirty": {
      "type": "boolean",
      "default": false,
      "description": "Controls if the maximum number of opened editors should exclude dirty editors for counting towards the configured limit.",
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.limit.perEditorGroup": {
      "type": "boolean",
      "default": false,
      "description": "Controls if the limit of maximum opened editors should apply per editor group or across all editor groups.",
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "workbench.commandPalette.history": {
      "type": "number",
      "description": "Controls the number of recently used commands to keep in history for the command palette. Set to 0 to disable command history.",
      "default": 50,
      "minimum": 0,
      "defaultDefaultValue": 50,
      "scope": 3,
      "restricted": false
    },
    "workbench.commandPalette.preserveInput": {
      "type": "boolean",
      "description": "Controls whether the last typed input to the command palette should be restored when opening it the next time.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "workbench.commandPalette.experimental.suggestCommands": {
      "type": "boolean",
      "description": "Controls whether the command palette should have a list of commonly used commands.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "workbench.quickOpen.closeOnFocusLost": {
      "type": "boolean",
      "description": "Controls whether Quick Open should close automatically once it loses focus.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "workbench.quickOpen.preserveInput": {
      "type": "boolean",
      "description": "Controls whether the last typed input to Quick Open should be restored when opening it the next time.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "workbench.settings.openDefaultSettings": {
      "type": "boolean",
      "description": "Controls whether opening settings also opens an editor showing all default settings.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "workbench.settings.useSplitJSON": {
      "type": "boolean",
      "markdownDescription": "Controls whether to use the split JSON editor when editing settings as JSON.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "workbench.settings.openDefaultKeybindings": {
      "type": "boolean",
      "description": "Controls whether opening keybinding settings also opens an editor showing all default keybindings.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "workbench.sideBar.location": {
      "type": "string",
      "enum": [
        "left",
        "right"
      ],
      "default": "left",
      "description": "Controls the location of the primary side bar and activity bar. They can either show on the left or right of the workbench. The secondary side bar will show on the opposite side of the workbench.",
      "defaultDefaultValue": "left",
      "scope": 3,
      "restricted": false
    },
    "workbench.panel.defaultLocation": {
      "type": "string",
      "enum": [
        "left",
        "bottom",
        "right"
      ],
      "default": "bottom",
      "description": "Controls the default location of the panel (Terminal, Debug Console, Output, Problems) in a new workspace. It can either show at the bottom, right, or left of the editor area.",
      "defaultDefaultValue": "bottom",
      "scope": 3,
      "restricted": false
    },
    "workbench.panel.opensMaximized": {
      "type": "string",
      "enum": [
        "always",
        "never",
        "preserve"
      ],
      "default": "preserve",
      "description": "Controls whether the panel opens maximized. It can either always open maximized, never open maximized, or open to the last state it was in before being closed.",
      "enumDescriptions": [
        "Always maximize the panel when opening it.",
        "Never maximize the panel when opening it. The panel will open un-maximized.",
        "Open the panel to the state that it was in, before it was closed."
      ],
      "defaultDefaultValue": "preserve",
      "scope": 3,
      "restricted": false
    },
    "workbench.statusBar.visible": {
      "type": "boolean",
      "default": true,
      "description": "Controls the visibility of the status bar at the bottom of the workbench.",
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "workbench.activityBar.visible": {
      "type": "boolean",
      "default": true,
      "description": "Controls the visibility of the activity bar in the workbench.",
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "workbench.activityBar.iconClickBehavior": {
      "type": "string",
      "enum": [
        "toggle",
        "focus"
      ],
      "default": "toggle",
      "description": "Controls the behavior of clicking an activity bar icon in the workbench.",
      "enumDescriptions": [
        "Hide the side bar if the clicked item is already visible.",
        "Focus side bar if the clicked item is already visible."
      ],
      "defaultDefaultValue": "toggle",
      "scope": 3,
      "restricted": false
    },
    "workbench.view.alwaysShowHeaderActions": {
      "type": "boolean",
      "default": false,
      "description": "Controls the visibility of view header actions. View header actions may either be always visible, or only visible when that view is focused or hovered over.",
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "workbench.fontAliasing": {
      "type": "string",
      "enum": [
        "default",
        "antialiased",
        "none",
        "auto"
      ],
      "default": "default",
      "description": "Controls font aliasing method in the workbench.",
      "enumDescriptions": [
        "Sub-pixel font smoothing. On most non-retina displays this will give the sharpest text.",
        "Smooth the font on the level of the pixel, as opposed to the subpixel. Can make the font appear lighter overall.",
        "Disables font smoothing. Text will show with jagged sharp edges.",
        "Applies `default` or `antialiased` automatically based on the DPI of displays."
      ],
      "included": true,
      "defaultDefaultValue": "default",
      "scope": 3,
      "restricted": false
    },
    "workbench.settings.editor": {
      "type": "string",
      "enum": [
        "ui",
        "json"
      ],
      "enumDescriptions": [
        "Use the settings UI editor.",
        "Use the JSON file editor."
      ],
      "description": "Determines which settings editor to use by default.",
      "default": "ui",
      "scope": 3,
      "defaultDefaultValue": "ui",
      "restricted": false
    },
    "workbench.hover.delay": {
      "type": "number",
      "description": "Controls the delay in milliseconds after which the hover is shown for workbench items (ex. some extension provided tree view items). Already visible items may require a refresh before reflecting this setting change.",
      "default": 1500,
      "minimum": 0,
      "defaultDefaultValue": 1500,
      "scope": 3,
      "restricted": false
    },
    "workbench.reduceMotion": {
      "type": "string",
      "description": "Controls whether the workbench should render with fewer animations.",
      "enumDescriptions": [
        "Always render with reduced motion.",
        "Do not render with reduced motion",
        "Render with reduced motion based on OS configuration."
      ],
      "default": "auto",
      "tags": [
        "accessibility"
      ],
      "enum": [
        "on",
        "off",
        "auto"
      ],
      "defaultDefaultValue": "auto",
      "scope": 3,
      "restricted": false
    },
    "workbench.layoutControl.enabled": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Controls whether the layout control is shown in the custom title bar. This setting only has an effect when `#window.titleBarStyle#` is set to `custom`.",
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "workbench.layoutControl.type": {
      "type": "string",
      "enum": [
        "menu",
        "toggles",
        "both"
      ],
      "enumDescriptions": [
        "Shows a single button with a dropdown of layout options.",
        "Shows several buttons for toggling the visibility of the panels and side bar.",
        "Shows both the dropdown and toggle buttons."
      ],
      "default": "both",
      "description": "Controls whether the layout control in the custom title bar is displayed as a single menu button or with multiple UI toggles.",
      "defaultDefaultValue": "both",
      "scope": 3,
      "restricted": false
    },
    "workbench.tips.enabled": {
      "type": "boolean",
      "default": true,
      "description": "When enabled, will show the watermark tips when no editor is open.",
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "window.title": {
      "type": "string",
      "default": "${activeEditorShort}${separator}${rootName}${separator}${profileName}",
      "markdownDescription": "Controls the window title based on the active editor. Variables are substituted based on the context:\n- `${activeEditorShort}`: the file name (e.g. myFile.txt).\n- `${activeEditorMedium}`: the path of the file relative to the workspace folder (e.g. myFolder/myFileFolder/myFile.txt).\n- `${activeEditorLong}`: the full path of the file (e.g. /Users/Development/myFolder/myFileFolder/myFile.txt).\n- `${activeFolderShort}`: the name of the folder the file is contained in (e.g. myFileFolder).\n- `${activeFolderMedium}`: the path of the folder the file is contained in, relative to the workspace folder (e.g. myFolder/myFileFolder).\n- `${activeFolderLong}`: the full path of the folder the file is contained in (e.g. /Users/Development/myFolder/myFileFolder).\n- `${folderName}`: name of the workspace folder the file is contained in (e.g. myFolder).\n- `${folderPath}`: file path of the workspace folder the file is contained in (e.g. /Users/Development/myFolder).\n- `${rootName}`: name of the workspace with optional remote name and workspace indicator if applicable (e.g. myFolder, myRemoteFolder [SSH] or myWorkspace (Workspace)).\n- `${rootNameShort}`: shortened name of the workspace without suffixes (e.g. myFolder, myRemoteFolder or myWorkspace).\n- `${rootPath}`: file path of the opened workspace or folder (e.g. /Users/Development/myWorkspace).\n- `${profileName}`: name of the profile in which the workspace is opened (e.g. Data Science (Profile)). Ignored if default profile is used.\n- `${appName}`: e.g. VS Code.\n- `${remoteName}`: e.g. SSH\n- `${dirty}`: an indicator for when the active editor has unsaved changes.\n- `${separator}`: a conditional separator (\" - \") that only shows when surrounded by variables with values or static text.",
      "defaultDefaultValue": "${activeEditorShort}${separator}${rootName}${separator}${profileName}",
      "scope": 3,
      "restricted": false
    },
    "window.titleSeparator": {
      "type": "string",
      "default": " — ",
      "markdownDescription": "Separator used by `#window.title#`.",
      "defaultDefaultValue": " — ",
      "scope": 3,
      "restricted": false
    },
    "window.commandCenter": {
      "type": "boolean",
      "default": false,
      "tags": [
        "experimental"
      ],
      "markdownDescription": "Show command launcher together with the window title. This setting only has an effect when `#window.titleBarStyle#` is set to `custom`.",
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "zenMode.fullScreen": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether turning on Zen Mode also puts the workbench into full screen mode.",
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "zenMode.centerLayout": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether turning on Zen Mode also centers the layout.",
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "zenMode.hideTabs": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether turning on Zen Mode also hides workbench tabs.",
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "zenMode.hideStatusBar": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether turning on Zen Mode also hides the status bar at the bottom of the workbench.",
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "zenMode.hideActivityBar": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether turning on Zen Mode also hides the activity bar either at the left or right of the workbench.",
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "zenMode.hideLineNumbers": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether turning on Zen Mode also hides the editor line numbers.",
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "zenMode.restore": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether a window should restore to Zen Mode if it was exited in Zen Mode.",
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "zenMode.silentNotifications": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether notifications do not disturb mode should be enabled while in Zen Mode. If true, only error notifications will pop out.",
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "problems.decorations.enabled": {
      "description": "Show Errors & Warnings on files and folder.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "workbench.sash.size": {
      "type": "number",
      "default": 4,
      "minimum": 1,
      "maximum": 20,
      "description": "Controls the feedback area size in pixels of the dragging area in between views/editors. Set it to a larger value if you feel it's hard to resize views using the mouse.",
      "defaultDefaultValue": 4,
      "scope": 3,
      "restricted": false
    },
    "workbench.sash.hoverDelay": {
      "type": "number",
      "default": 300,
      "minimum": 0,
      "maximum": 2000,
      "description": "Controls the hover feedback delay in milliseconds of the dragging area in between views/editors.",
      "defaultDefaultValue": 300,
      "scope": 3,
      "restricted": false
    },
    "notebook.outline.showCodeCells": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "When enabled notebook outline shows code cells.",
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "notebook.breadcrumbs.showCodeCells": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled notebook breadcrumbs contain code cells.",
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "audioCues.enabled": {
      "markdownDeprecationMessage": "Deprecated. Use the specific setting for each audio cue instead (`audioCues.*`).",
      "tags": [
        "accessibility"
      ],
      "default": null,
      "scope": 3,
      "restricted": false,
      "deprecationMessage": "Deprecated. Use the specific setting for each audio cue instead (`audioCues.*`)."
    },
    "audioCues.volume": {
      "description": "The volume of the audio cues in percent (0-100).",
      "type": "number",
      "minimum": 0,
      "maximum": 100,
      "default": 70,
      "tags": [
        "accessibility"
      ],
      "defaultDefaultValue": 70,
      "scope": 3,
      "restricted": false
    },
    "audioCues.debouncePositionChanges": {
      "description": "Whether or not position changes should be debounced",
      "type": "boolean",
      "default": false,
      "tags": [
        "accessibility"
      ],
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "audioCues.lineHasBreakpoint": {
      "description": "Plays a sound when the active line has a breakpoint.",
      "type": "string",
      "enum": [
        "auto",
        "on",
        "off"
      ],
      "default": "auto",
      "enumDescriptions": [
        "Enable audio cue when a screen reader is attached.",
        "Enable audio cue.",
        "Disable audio cue."
      ],
      "tags": [
        "accessibility"
      ],
      "defaultDefaultValue": "auto",
      "scope": 3,
      "restricted": false
    },
    "audioCues.lineHasInlineSuggestion": {
      "description": "Plays a sound when the active line has an inline suggestion.",
      "type": "string",
      "enum": [
        "auto",
        "on",
        "off"
      ],
      "default": "auto",
      "enumDescriptions": [
        "Enable audio cue when a screen reader is attached.",
        "Enable audio cue.",
        "Disable audio cue."
      ],
      "tags": [
        "accessibility"
      ],
      "defaultDefaultValue": "auto",
      "scope": 3,
      "restricted": false
    },
    "audioCues.lineHasError": {
      "description": "Plays a sound when the active line has an error.",
      "type": "string",
      "enum": [
        "auto",
        "on",
        "off"
      ],
      "default": "auto",
      "enumDescriptions": [
        "Enable audio cue when a screen reader is attached.",
        "Enable audio cue.",
        "Disable audio cue."
      ],
      "tags": [
        "accessibility"
      ],
      "defaultDefaultValue": "auto",
      "scope": 3,
      "restricted": false
    },
    "audioCues.lineHasFoldedArea": {
      "description": "Plays a sound when the active line has a folded area that can be unfolded.",
      "type": "string",
      "enum": [
        "auto",
        "on",
        "off"
      ],
      "default": "auto",
      "enumDescriptions": [
        "Enable audio cue when a screen reader is attached.",
        "Enable audio cue.",
        "Disable audio cue."
      ],
      "tags": [
        "accessibility"
      ],
      "defaultDefaultValue": "auto",
      "scope": 3,
      "restricted": false
    },
    "audioCues.lineHasWarning": {
      "description": "Plays a sound when the active line has a warning.",
      "type": "string",
      "enum": [
        "auto",
        "on",
        "off"
      ],
      "default": "off",
      "enumDescriptions": [
        "Enable audio cue when a screen reader is attached.",
        "Enable audio cue.",
        "Disable audio cue."
      ],
      "tags": [
        "accessibility"
      ],
      "defaultDefaultValue": "off",
      "scope": 3,
      "restricted": false
    },
    "audioCues.onDebugBreak": {
      "description": "Plays a sound when the debugger stopped on a breakpoint.",
      "type": "string",
      "enum": [
        "auto",
        "on",
        "off"
      ],
      "default": "auto",
      "enumDescriptions": [
        "Enable audio cue when a screen reader is attached.",
        "Enable audio cue.",
        "Disable audio cue."
      ],
      "tags": [
        "accessibility"
      ],
      "defaultDefaultValue": "auto",
      "scope": 3,
      "restricted": false
    },
    "audioCues.noInlayHints": {
      "description": "Plays a sound when trying to read a line with inlay hints that has no inlay hints.",
      "type": "string",
      "enum": [
        "auto",
        "on",
        "off"
      ],
      "default": "auto",
      "enumDescriptions": [
        "Enable audio cue when a screen reader is attached.",
        "Enable audio cue.",
        "Disable audio cue."
      ],
      "tags": [
        "accessibility"
      ],
      "defaultDefaultValue": "auto",
      "scope": 3,
      "restricted": false
    },
    "audioCues.taskCompleted": {
      "description": "Plays a sound when a task is completed.",
      "type": "string",
      "enum": [
        "auto",
        "on",
        "off"
      ],
      "default": "auto",
      "enumDescriptions": [
        "Enable audio cue when a screen reader is attached.",
        "Enable audio cue.",
        "Disable audio cue."
      ],
      "tags": [
        "accessibility"
      ],
      "defaultDefaultValue": "auto",
      "scope": 3,
      "restricted": false
    },
    "audioCues.taskFailed": {
      "description": "Plays a sound when a task fails (non-zero exit code).",
      "type": "string",
      "enum": [
        "auto",
        "on",
        "off"
      ],
      "default": "auto",
      "enumDescriptions": [
        "Enable audio cue when a screen reader is attached.",
        "Enable audio cue.",
        "Disable audio cue."
      ],
      "tags": [
        "accessibility"
      ],
      "defaultDefaultValue": "auto",
      "scope": 3,
      "restricted": false
    },
    "audioCues.terminalCommandFailed": {
      "description": "Plays a sound when a terminal command fails (non-zero exit code).",
      "type": "string",
      "enum": [
        "auto",
        "on",
        "off"
      ],
      "default": "auto",
      "enumDescriptions": [
        "Enable audio cue when a screen reader is attached.",
        "Enable audio cue.",
        "Disable audio cue."
      ],
      "tags": [
        "accessibility"
      ],
      "defaultDefaultValue": "auto",
      "scope": 3,
      "restricted": false
    },
    "audioCues.terminalQuickFix": {
      "description": "Plays a sound when terminal Quick Fixes are available.",
      "type": "string",
      "enum": [
        "auto",
        "on",
        "off"
      ],
      "default": "auto",
      "enumDescriptions": [
        "Enable audio cue when a screen reader is attached.",
        "Enable audio cue.",
        "Disable audio cue."
      ],
      "tags": [
        "accessibility"
      ],
      "defaultDefaultValue": "auto",
      "scope": 3,
      "restricted": false
    },
    "audioCues.diffLineInserted": {
      "description": "Plays a sound when the focus moves to an inserted line in diff review mode or to the next/previous change",
      "type": "string",
      "enum": [
        "auto",
        "on",
        "off"
      ],
      "default": "auto",
      "enumDescriptions": [
        "Enable audio cue when a screen reader is attached.",
        "Enable audio cue.",
        "Disable audio cue."
      ],
      "tags": [
        "accessibility"
      ],
      "defaultDefaultValue": "auto",
      "scope": 3,
      "restricted": false
    },
    "audioCues.diffLineDeleted": {
      "description": "Plays a sound when the focus moves to a deleted line in diff review mode or to the next/previous change",
      "type": "string",
      "enum": [
        "auto",
        "on",
        "off"
      ],
      "default": "auto",
      "enumDescriptions": [
        "Enable audio cue when a screen reader is attached.",
        "Enable audio cue.",
        "Disable audio cue."
      ],
      "tags": [
        "accessibility"
      ],
      "defaultDefaultValue": "auto",
      "scope": 3,
      "restricted": false
    },
    "audioCues.diffLineModified": {
      "description": "Plays a sound when the focus moves to a modified line in diff review mode or to the next/previous change",
      "type": "string",
      "enum": [
        "auto",
        "on",
        "off"
      ],
      "default": "auto",
      "enumDescriptions": [
        "Enable audio cue when a screen reader is attached.",
        "Enable audio cue.",
        "Disable audio cue."
      ],
      "tags": [
        "accessibility"
      ],
      "defaultDefaultValue": "auto",
      "scope": 3,
      "restricted": false
    },
    "audioCues.notebookCellCompleted": {
      "description": "Plays a sound when a notebook cell execution is successfully completed.",
      "type": "string",
      "enum": [
        "auto",
        "on",
        "off"
      ],
      "default": "auto",
      "enumDescriptions": [
        "Enable audio cue when a screen reader is attached.",
        "Enable audio cue.",
        "Disable audio cue."
      ],
      "tags": [
        "accessibility"
      ],
      "defaultDefaultValue": "auto",
      "scope": 3,
      "restricted": false
    },
    "audioCues.notebookCellFailed": {
      "description": "Plays a sound when a notebook cell execution fails.",
      "type": "string",
      "enum": [
        "auto",
        "on",
        "off"
      ],
      "default": "auto",
      "enumDescriptions": [
        "Enable audio cue when a screen reader is attached.",
        "Enable audio cue.",
        "Disable audio cue."
      ],
      "tags": [
        "accessibility"
      ],
      "defaultDefaultValue": "auto",
      "scope": 3,
      "restricted": false
    },
    "workbench.externalUriOpeners": {
      "type": "object",
      "markdownDescription": "Configure the opener to use for external URIs (http, https).",
      "defaultSnippets": [
        {
          "body": {
            "example.com": "$1"
          }
        }
      ],
      "additionalProperties": {
        "anyOf": [
          {
            "type": "string",
            "markdownDescription": "Map URI pattern to an opener id.\nExample patterns: \n\n- `https://microsoft.com`: Matches this specific domain using https\n- `https://microsoft.com:8080`: Matches this specific domain on this port using https\n- `https://microsoft.com:*`: Matches this specific domain on any port using https\n- `https://microsoft.com/foo`: Matches `https://microsoft.com/foo` and `https://microsoft.com/foo/bar`, but not `https://microsoft.com/foobar` or `https://microsoft.com/bar`\n- `https://*.microsoft.com`: Match all domains ending in `microsoft.com` using https\n- `microsoft.com`: Match this specific domain using either http or https\n- `*.microsoft.com`: Match all domains ending in `microsoft.com` using either http or https\n- `http://192.168.0.1`: Matches this specific IP using http\n- `http://192.168.0.*`: Matches all IP's with this prefix using http\n- `*`: Match all domains using either http or https"
          },
          {
            "type": "string",
            "markdownDescription": "Map URI pattern to an opener id.\nExample patterns: \n\n- `https://microsoft.com`: Matches this specific domain using https\n- `https://microsoft.com:8080`: Matches this specific domain on this port using https\n- `https://microsoft.com:*`: Matches this specific domain on any port using https\n- `https://microsoft.com/foo`: Matches `https://microsoft.com/foo` and `https://microsoft.com/foo/bar`, but not `https://microsoft.com/foobar` or `https://microsoft.com/bar`\n- `https://*.microsoft.com`: Match all domains ending in `microsoft.com` using https\n- `microsoft.com`: Match this specific domain using either http or https\n- `*.microsoft.com`: Match all domains ending in `microsoft.com` using either http or https\n- `http://192.168.0.1`: Matches this specific IP using http\n- `http://192.168.0.*`: Matches all IP's with this prefix using http\n- `*`: Match all domains using either http or https",
            "enum": [
              "default"
            ],
            "enumDescriptions": [
              "Open using VS Code's standard opener."
            ]
          },
          {
            "type": "string",
            "enum": []
          }
        ]
      },
      "default": {},
      "scope": 3,
      "restricted": false
    },
    "remote.extensionKind": {
      "type": "object",
      "markdownDescription": "Override the kind of an extension. `ui` extensions are installed and run on the local machine while `workspace` extensions are run on the remote. By overriding an extension's default kind using this setting, you specify if that extension should be installed and enabled locally or remotely.",
      "patternProperties": {
        "([a-z0-9A-Z][a-z0-9-A-Z]*)\\.([a-z0-9A-Z][a-z0-9-A-Z]*)$": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ui",
                  "workspace"
                ],
                "enumDescriptions": [
                  "UI extension kind. In a remote window, such extensions are enabled only when available on the local machine.",
                  "Workspace extension kind. In a remote window, such extensions are enabled only when available on the remote."
                ]
              }
            },
            {
              "type": "string",
              "enum": [
                "ui",
                "workspace"
              ],
              "enumDescriptions": [
                "UI extension kind. In a remote window, such extensions are enabled only when available on the local machine.",
                "Workspace extension kind. In a remote window, such extensions are enabled only when available on the remote."
              ]
            }
          ],
          "default": [
            "ui"
          ]
        }
      },
      "default": {
        "pub.name": [
          "ui"
        ]
      },
      "defaultDefaultValue": {
        "pub.name": [
          "ui"
        ]
      },
      "scope": 3,
      "restricted": false
    },
    "remote.restoreForwardedPorts": {
      "type": "boolean",
      "markdownDescription": "Restores the ports you forwarded in a workspace.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "remote.autoForwardPorts": {
      "type": "boolean",
      "markdownDescription": "When enabled, new running processes are detected and ports that they listen on are automatically forwarded. Disabling this setting will not prevent all ports from being forwarded. Even when disabled, extensions will still be able to cause ports to be forwarded, and opening some URLs will still cause ports to forwarded.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "remote.autoForwardPortsSource": {
      "type": "string",
      "markdownDescription": "Sets the source from which ports are automatically forwarded when `#remote.autoForwardPorts#` is true. On Windows and Mac remotes, the `process` option has no effect and `output` will be used. Requires a reload to take effect.",
      "enum": [
        "process",
        "output"
      ],
      "enumDescriptions": [
        "Ports will be automatically forwarded when discovered by watching for processes that are started and include a port.",
        "Ports will be automatically forwarded when discovered by reading terminal and debug output. Not all processes that use ports will print to the integrated terminal or debug console, so some ports will be missed. Ports forwarded based on output will not be \"un-forwarded\" until reload or until the port is closed by the user in the Ports view."
      ],
      "default": "output",
      "defaultDefaultValue": "process",
      "scope": 3,
      "restricted": false
    },
    "remote.forwardOnOpen": {
      "type": "boolean",
      "description": "Controls whether local URLs with a port will be forwarded when opened from the terminal and the debug console.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "remote.portsAttributes": {
      "type": "object",
      "patternProperties": {
        "(^\\d+(-\\d+)?$)|(.+)": {
          "type": "object",
          "description": "A port, range of ports (ex. \"40000-55000\"), host and port (ex. \"db:1234\"), or regular expression (ex. \".+\\\\/server.js\").  For a port number or range, the attributes will apply to that port number or range of port numbers. Attributes which use a regular expression will apply to ports whose associated process command line matches the expression.",
          "properties": {
            "onAutoForward": {
              "type": "string",
              "enum": [
                "notify",
                "openBrowser",
                "openBrowserOnce",
                "openPreview",
                "silent",
                "ignore"
              ],
              "enumDescriptions": [
                "Shows a notification when a port is automatically forwarded.",
                "Opens the browser when the port is automatically forwarded. Depending on your settings, this could open an embedded browser.",
                "Opens the browser when the port is automatically forwarded, but only the first time the port is forward during a session. Depending on your settings, this could open an embedded browser.",
                "Opens a preview in the same window when the port is automatically forwarded.",
                "Shows no notification and takes no action when this port is automatically forwarded.",
                "This port will not be automatically forwarded."
              ],
              "description": "Defines the action that occurs when the port is discovered for automatic forwarding",
              "default": "notify"
            },
            "elevateIfNeeded": {
              "type": "boolean",
              "description": "Automatically prompt for elevation (if needed) when this port is forwarded. Elevate is required if the local port is a privileged port.",
              "default": false
            },
            "label": {
              "type": "string",
              "description": "Label that will be shown in the UI for this port.",
              "default": "Application"
            },
            "requireLocalPort": {
              "type": "boolean",
              "markdownDescription": "When true, a modal dialog will show if the chosen local port isn't used for forwarding.",
              "default": false
            },
            "protocol": {
              "type": "string",
              "enum": [
                "http",
                "https"
              ],
              "description": "The protocol to use when forwarding this port."
            }
          },
          "default": {
            "label": "Application",
            "onAutoForward": "notify"
          }
        }
      },
      "markdownDescription": "Set properties that are applied when a specific port number is forwarded. For example:\n\n```\n\"3000\": {\n  \"label\": \"Application\"\n},\n\"40000-55000\": {\n  \"onAutoForward\": \"ignore\"\n},\n\".+\\\\/server.js\": {\n \"onAutoForward\": \"openPreview\"\n}\n```",
      "defaultSnippets": [
        {
          "body": {
            "${1:3000}": {
              "label": "${2:Application}",
              "onAutoForward": "openPreview"
            }
          }
        }
      ],
      "errorMessage": "Must be a port number, range of port numbers, or regular expression.",
      "additionalProperties": false,
      "default": {
        "443": {
          "protocol": "https"
        },
        "8443": {
          "protocol": "https"
        }
      },
      "defaultDefaultValue": {
        "443": {
          "protocol": "https"
        },
        "8443": {
          "protocol": "https"
        }
      },
      "scope": 3,
      "restricted": false
    },
    "remote.otherPortsAttributes": {
      "type": "object",
      "properties": {
        "onAutoForward": {
          "type": "string",
          "enum": [
            "notify",
            "openBrowser",
            "openPreview",
            "silent",
            "ignore"
          ],
          "enumDescriptions": [
            "Shows a notification when a port is automatically forwarded.",
            "Opens the browser when the port is automatically forwarded. Depending on your settings, this could open an embedded browser.",
            "Opens a preview in the same window when the port is automatically forwarded.",
            "Shows no notification and takes no action when this port is automatically forwarded.",
            "This port will not be automatically forwarded."
          ],
          "description": "Defines the action that occurs when the port is discovered for automatic forwarding",
          "default": "notify"
        },
        "elevateIfNeeded": {
          "type": "boolean",
          "description": "Automatically prompt for elevation (if needed) when this port is forwarded. Elevate is required if the local port is a privileged port.",
          "default": false
        },
        "label": {
          "type": "string",
          "description": "Label that will be shown in the UI for this port.",
          "default": "Application"
        },
        "requireLocalPort": {
          "type": "boolean",
          "markdownDescription": "When true, a modal dialog will show if the chosen local port isn't used for forwarding.",
          "default": false
        },
        "protocol": {
          "type": "string",
          "enum": [
            "http",
            "https"
          ],
          "description": "The protocol to use when forwarding this port."
        }
      },
      "defaultSnippets": [
        {
          "body": {
            "onAutoForward": "ignore"
          }
        }
      ],
      "markdownDescription": "Set default properties that are applied to all ports that don't get properties from the setting `#remote.portsAttributes#`. For example:\n\n```\n{\n  \"onAutoForward\": \"ignore\"\n}\n```",
      "additionalProperties": false,
      "default": {},
      "scope": 3,
      "restricted": false
    },
    "remote.localPortHost": {
      "type": "string",
      "enum": [
        "localhost",
        "allInterfaces"
      ],
      "default": "localhost",
      "description": "Specifies the local host name that will be used for port forwarding.",
      "defaultDefaultValue": "localhost",
      "scope": 3,
      "restricted": false
    },
    "remote.downloadExtensionsLocally": {
      "type": "boolean",
      "markdownDescription": "When enabled extensions are downloaded locally and installed on remote.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "task.problemMatchers.neverPrompt": {
      "markdownDescription": "Configures whether to show the problem matcher prompt when running a task. Set to `true` to never prompt, or use a dictionary of task types to turn off prompting only for specific task types.",
      "oneOf": [
        {
          "type": "boolean",
          "markdownDescription": "Sets problem matcher prompting behavior for all tasks."
        },
        {
          "type": "object",
          "patternProperties": {
            ".*": {
              "type": "boolean"
            }
          },
          "markdownDescription": "An object containing task type-boolean pairs to never prompt for problem matchers on.",
          "default": {
            "shell": true
          }
        }
      ],
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "task.autoDetect": {
      "markdownDescription": "Controls enablement of `provideTasks` for all task provider extension. If the Tasks: Run Task command is slow, disabling auto detect for task providers may help. Individual extensions may also provide settings that disable auto detection.",
      "type": "string",
      "enum": [
        "on",
        "off"
      ],
      "default": "on",
      "defaultDefaultValue": "on",
      "scope": 3,
      "restricted": false
    },
    "task.slowProviderWarning": {
      "markdownDescription": "Configures whether a warning is shown when a provider is slow",
      "oneOf": [
        {
          "type": "boolean",
          "markdownDescription": "Sets the slow provider warning for all tasks."
        },
        {
          "type": "array",
          "items": {
            "type": "string",
            "markdownDescription": "An array of task types to never show the slow provider warning."
          }
        }
      ],
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "task.quickOpen.history": {
      "markdownDescription": "Controls the number of recent items tracked in task quick open dialog.",
      "type": "number",
      "default": 30,
      "minimum": 0,
      "maximum": 30,
      "defaultDefaultValue": 30,
      "scope": 3,
      "restricted": false
    },
    "task.quickOpen.detail": {
      "markdownDescription": "Controls whether to show the task detail for tasks that have a detail in task quick picks, such as Run Task.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "task.quickOpen.skip": {
      "type": "boolean",
      "description": "Controls whether the task quick pick is skipped when there is only one task to pick from.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "task.quickOpen.showAll": {
      "type": "boolean",
      "description": "Causes the Tasks: Run Task command to use the slower \"show all\" behavior instead of the faster two level picker where tasks are grouped by provider.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "task.allowAutomaticTasks": {
      "type": "string",
      "enum": [
        "on",
        "off"
      ],
      "enumDescriptions": [
        "Always",
        "Never"
      ],
      "description": "Enable automatic tasks - note that tasks won't run in an untrusted workspace.",
      "default": "on",
      "restricted": true,
      "defaultDefaultValue": "on",
      "scope": 3
    },
    "task.reconnection": {
      "type": "boolean",
      "description": "On window reload, reconnect to tasks that have problem matchers.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "task.saveBeforeRun": {
      "markdownDescription": "Save all dirty editors before running a task.",
      "type": "string",
      "enum": [
        "always",
        "never",
        "prompt"
      ],
      "enumDescriptions": [
        "Always saves all editors before running.",
        "Never saves editors before running.",
        "Prompts whether to save editors before running."
      ],
      "default": "always",
      "defaultDefaultValue": "always",
      "scope": 3,
      "restricted": false
    },
    "workbench.colorTheme": {
      "type": "string",
      "description": "Specifies the color theme used in the workbench.",
      "default": "Default Dark+",
      "enum": [
        "Abyss",
        "Ayu Dark",
        "Ayu Dark Bordered",
        "Ayu Light",
        "Ayu Light Bordered",
        "Ayu Mirage",
        "Ayu Mirage Bordered",
        "CodeSandbox-Black",
        "Visual Studio Dark",
        "Default High Contrast",
        "Default Dark+",
        "Default Dark+ Experimental",
        "Field Lights",
        "Kimbie Dark",
        "Visual Studio Light",
        "Default High Contrast Light",
        "Default Light+",
        "Default Light+ Experimental",
        "Monokai",
        "Monokai Dimmed",
        "Quiet Light",
        "Red",
        "Solarized Dark",
        "Solarized Light",
        "Tomorrow Night Blue"
      ],
      "enumDescriptions": [
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
      ],
      "enumItemLabels": [
        "Abyss",
        "Ayu Dark",
        "Ayu Dark Bordered",
        "Ayu Light",
        "Ayu Light Bordered",
        "Ayu Mirage",
        "Ayu Mirage Bordered",
        "CodeSandbox-Black",
        "Dark (Visual Studio)",
        "Dark High Contrast",
        "Dark+ (default dark)",
        "Dark+ V2 (Experimental)",
        "Field Lights",
        "Kimbie Dark",
        "Light (Visual Studio)",
        "Light High Contrast",
        "Light+ (default light)",
        "Light+ V2 (Experimental)",
        "Monokai",
        "Monokai Dimmed",
        "Quiet Light",
        "Red",
        "Solarized Dark",
        "Solarized Light",
        "Tomorrow Night Blue"
      ],
      "errorMessage": "Theme is unknown or not installed.",
      "defaultDefaultValue": "Default Dark+",
      "scope": 3,
      "restricted": false
    },
    "workbench.preferredDarkColorTheme": {
      "type": "string",
      "markdownDescription": "Specifies the preferred color theme for dark OS appearance when `#window.autoDetectColorScheme#` is enabled.",
      "default": "Default Dark+",
      "enum": [
        "Abyss",
        "Ayu Dark",
        "Ayu Dark Bordered",
        "Ayu Light",
        "Ayu Light Bordered",
        "Ayu Mirage",
        "Ayu Mirage Bordered",
        "CodeSandbox-Black",
        "Visual Studio Dark",
        "Default High Contrast",
        "Default Dark+",
        "Default Dark+ Experimental",
        "Field Lights",
        "Kimbie Dark",
        "Visual Studio Light",
        "Default High Contrast Light",
        "Default Light+",
        "Default Light+ Experimental",
        "Monokai",
        "Monokai Dimmed",
        "Quiet Light",
        "Red",
        "Solarized Dark",
        "Solarized Light",
        "Tomorrow Night Blue"
      ],
      "enumDescriptions": [
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
      ],
      "enumItemLabels": [
        "Abyss",
        "Ayu Dark",
        "Ayu Dark Bordered",
        "Ayu Light",
        "Ayu Light Bordered",
        "Ayu Mirage",
        "Ayu Mirage Bordered",
        "CodeSandbox-Black",
        "Dark (Visual Studio)",
        "Dark High Contrast",
        "Dark+ (default dark)",
        "Dark+ V2 (Experimental)",
        "Field Lights",
        "Kimbie Dark",
        "Light (Visual Studio)",
        "Light High Contrast",
        "Light+ (default light)",
        "Light+ V2 (Experimental)",
        "Monokai",
        "Monokai Dimmed",
        "Quiet Light",
        "Red",
        "Solarized Dark",
        "Solarized Light",
        "Tomorrow Night Blue"
      ],
      "errorMessage": "Theme is unknown or not installed.",
      "defaultDefaultValue": "Default Dark+",
      "scope": 3,
      "restricted": false
    },
    "workbench.preferredLightColorTheme": {
      "type": "string",
      "markdownDescription": "Specifies the preferred color theme for light OS appearance when `#window.autoDetectColorScheme#` is enabled.",
      "default": "Default Light+",
      "enum": [
        "Abyss",
        "Ayu Dark",
        "Ayu Dark Bordered",
        "Ayu Light",
        "Ayu Light Bordered",
        "Ayu Mirage",
        "Ayu Mirage Bordered",
        "CodeSandbox-Black",
        "Visual Studio Dark",
        "Default High Contrast",
        "Default Dark+",
        "Default Dark+ Experimental",
        "Field Lights",
        "Kimbie Dark",
        "Visual Studio Light",
        "Default High Contrast Light",
        "Default Light+",
        "Default Light+ Experimental",
        "Monokai",
        "Monokai Dimmed",
        "Quiet Light",
        "Red",
        "Solarized Dark",
        "Solarized Light",
        "Tomorrow Night Blue"
      ],
      "enumDescriptions": [
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
      ],
      "enumItemLabels": [
        "Abyss",
        "Ayu Dark",
        "Ayu Dark Bordered",
        "Ayu Light",
        "Ayu Light Bordered",
        "Ayu Mirage",
        "Ayu Mirage Bordered",
        "CodeSandbox-Black",
        "Dark (Visual Studio)",
        "Dark High Contrast",
        "Dark+ (default dark)",
        "Dark+ V2 (Experimental)",
        "Field Lights",
        "Kimbie Dark",
        "Light (Visual Studio)",
        "Light High Contrast",
        "Light+ (default light)",
        "Light+ V2 (Experimental)",
        "Monokai",
        "Monokai Dimmed",
        "Quiet Light",
        "Red",
        "Solarized Dark",
        "Solarized Light",
        "Tomorrow Night Blue"
      ],
      "errorMessage": "Theme is unknown or not installed.",
      "defaultDefaultValue": "Default Light+",
      "scope": 3,
      "restricted": false
    },
    "workbench.preferredHighContrastColorTheme": {
      "type": "string",
      "markdownDescription": "Specifies the preferred color theme used in high contrast dark mode when `#window.autoDetectHighContrast#` is enabled.",
      "default": "Default High Contrast",
      "enum": [
        "Abyss",
        "Ayu Dark",
        "Ayu Dark Bordered",
        "Ayu Light",
        "Ayu Light Bordered",
        "Ayu Mirage",
        "Ayu Mirage Bordered",
        "CodeSandbox-Black",
        "Visual Studio Dark",
        "Default High Contrast",
        "Default Dark+",
        "Default Dark+ Experimental",
        "Field Lights",
        "Kimbie Dark",
        "Visual Studio Light",
        "Default High Contrast Light",
        "Default Light+",
        "Default Light+ Experimental",
        "Monokai",
        "Monokai Dimmed",
        "Quiet Light",
        "Red",
        "Solarized Dark",
        "Solarized Light",
        "Tomorrow Night Blue"
      ],
      "enumDescriptions": [
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
      ],
      "enumItemLabels": [
        "Abyss",
        "Ayu Dark",
        "Ayu Dark Bordered",
        "Ayu Light",
        "Ayu Light Bordered",
        "Ayu Mirage",
        "Ayu Mirage Bordered",
        "CodeSandbox-Black",
        "Dark (Visual Studio)",
        "Dark High Contrast",
        "Dark+ (default dark)",
        "Dark+ V2 (Experimental)",
        "Field Lights",
        "Kimbie Dark",
        "Light (Visual Studio)",
        "Light High Contrast",
        "Light+ (default light)",
        "Light+ V2 (Experimental)",
        "Monokai",
        "Monokai Dimmed",
        "Quiet Light",
        "Red",
        "Solarized Dark",
        "Solarized Light",
        "Tomorrow Night Blue"
      ],
      "errorMessage": "Theme is unknown or not installed.",
      "defaultDefaultValue": "Default High Contrast",
      "scope": 3,
      "restricted": false
    },
    "workbench.preferredHighContrastLightColorTheme": {
      "type": "string",
      "markdownDescription": "Specifies the preferred color theme used in high contrast light mode when `#window.autoDetectHighContrast#` is enabled.",
      "default": "Default High Contrast Light",
      "enum": [
        "Abyss",
        "Ayu Dark",
        "Ayu Dark Bordered",
        "Ayu Light",
        "Ayu Light Bordered",
        "Ayu Mirage",
        "Ayu Mirage Bordered",
        "CodeSandbox-Black",
        "Visual Studio Dark",
        "Default High Contrast",
        "Default Dark+",
        "Default Dark+ Experimental",
        "Field Lights",
        "Kimbie Dark",
        "Visual Studio Light",
        "Default High Contrast Light",
        "Default Light+",
        "Default Light+ Experimental",
        "Monokai",
        "Monokai Dimmed",
        "Quiet Light",
        "Red",
        "Solarized Dark",
        "Solarized Light",
        "Tomorrow Night Blue"
      ],
      "enumDescriptions": [
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
      ],
      "enumItemLabels": [
        "Abyss",
        "Ayu Dark",
        "Ayu Dark Bordered",
        "Ayu Light",
        "Ayu Light Bordered",
        "Ayu Mirage",
        "Ayu Mirage Bordered",
        "CodeSandbox-Black",
        "Dark (Visual Studio)",
        "Dark High Contrast",
        "Dark+ (default dark)",
        "Dark+ V2 (Experimental)",
        "Field Lights",
        "Kimbie Dark",
        "Light (Visual Studio)",
        "Light High Contrast",
        "Light+ (default light)",
        "Light+ V2 (Experimental)",
        "Monokai",
        "Monokai Dimmed",
        "Quiet Light",
        "Red",
        "Solarized Dark",
        "Solarized Light",
        "Tomorrow Night Blue"
      ],
      "errorMessage": "Theme is unknown or not installed.",
      "defaultDefaultValue": "Default High Contrast Light",
      "scope": 3,
      "restricted": false
    },
    "workbench.iconTheme": {
      "type": [
        "string",
        "null"
      ],
      "default": "vs-seti",
      "description": "Specifies the file icon theme used in the workbench or 'null' to not show any file icons.",
      "enum": [
        null,
        "vs-minimal",
        "vs-seti",
        "field-lights",
        "field-lights-monochrome",
        "field-lights-minimalistic",
        "field-lights-monochrome-minimalistic",
        "ayu"
      ],
      "enumItemLabels": [
        "None",
        "Minimal (Visual Studio Code)",
        "Seti (Visual Studio Code)",
        "Field Lights",
        "Field Lights Monochromatic",
        "Field Lights (Minimalistic)",
        "Field Lights Monochromatic (Minimalistic)",
        "Ayu"
      ],
      "enumDescriptions": [
        "No file icons",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
      ],
      "errorMessage": "File icon theme is unknown or not installed.",
      "defaultDefaultValue": "vs-seti",
      "scope": 3,
      "restricted": false
    },
    "workbench.colorCustomizations": {
      "type": "object",
      "description": "Overrides colors from the currently selected color theme.",
      "allOf": [
        {
          "$ref": "vscode://schemas/workbench-colors"
        },
        {
          "properties": {
            "[Abyss]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Ayu Dark]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Ayu Dark Bordered]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Ayu Light]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Ayu Light Bordered]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Ayu Mirage]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Ayu Mirage Bordered]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[CodeSandbox-Black]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Visual Studio Dark]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Default High Contrast]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Default Dark+]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Default Dark+ Experimental]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Field Lights]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Kimbie Dark]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Visual Studio Light]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Default High Contrast Light]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Default Light+]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Default Light+ Experimental]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Monokai]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Monokai Dimmed]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Quiet Light]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Red]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Solarized Dark]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Solarized Light]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Tomorrow Night Blue]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            }
          },
          "patternProperties": {
            "^\\[[^\\]]*(\\]\\s*\\[[^\\]]*)*\\]$": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            }
          }
        }
      ],
      "default": {},
      "defaultSnippets": [
        {
          "body": {}
        }
      ],
      "defaultDefaultValue": {},
      "scope": 3,
      "restricted": false
    },
    "workbench.productIconTheme": {
      "type": [
        "string",
        "null"
      ],
      "default": "Default",
      "description": "Specifies the product icon theme used.",
      "enum": [
        "Default"
      ],
      "enumItemLabels": [
        "Default"
      ],
      "enumDescriptions": [
        "Default"
      ],
      "errorMessage": "Product icon theme is unknown or not installed.",
      "defaultDefaultValue": "Default",
      "scope": 3,
      "restricted": false
    },
    "window.autoDetectColorScheme": {
      "type": "boolean",
      "markdownDescription": "If set, automatically switch to the preferred color theme based on the OS appearance. If the OS appearance is dark, the theme specified at `#workbench.preferredDarkColorTheme#` is used, for light `#workbench.preferredLightColorTheme#`.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "editor.tokenColorCustomizations": {
      "description": "Overrides editor syntax colors and font style from the currently selected color theme.",
      "default": {},
      "allOf": [
        {
          "type": "object",
          "properties": {
            "comments": {
              "description": "Sets the colors and styles for comments",
              "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
            },
            "strings": {
              "description": "Sets the colors and styles for strings literals.",
              "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
            },
            "keywords": {
              "description": "Sets the colors and styles for keywords.",
              "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
            },
            "numbers": {
              "description": "Sets the colors and styles for number literals.",
              "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
            },
            "types": {
              "description": "Sets the colors and styles for type declarations and references.",
              "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
            },
            "functions": {
              "description": "Sets the colors and styles for functions declarations and references.",
              "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
            },
            "variables": {
              "description": "Sets the colors and styles for variables declarations and references.",
              "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
            },
            "textMateRules": {
              "description": "Sets colors and styles using textmate theming rules (advanced).",
              "$ref": "vscode://schemas/textmate-colors"
            },
            "semanticHighlighting": {
              "description": "Whether semantic highlighting should be enabled for this theme.",
              "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
              "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
              "type": "boolean"
            }
          },
          "additionalProperties": false,
          "patternProperties": {
            "^\\[": {}
          }
        },
        {
          "properties": {
            "[Abyss]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Ayu Dark]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Ayu Dark Bordered]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Ayu Light]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Ayu Light Bordered]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Ayu Mirage]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Ayu Mirage Bordered]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[CodeSandbox-Black]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Visual Studio Dark]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Default High Contrast]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Default Dark+]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Default Dark+ Experimental]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Field Lights]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Kimbie Dark]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Visual Studio Light]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Default High Contrast Light]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Default Light+]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Default Light+ Experimental]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Monokai]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Monokai Dimmed]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Quiet Light]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Red]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Solarized Dark]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Solarized Light]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Tomorrow Night Blue]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            }
          },
          "patternProperties": {
            "^\\[[^\\]]*(\\]\\s*\\[[^\\]]*)*\\]$": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            }
          }
        }
      ],
      "defaultDefaultValue": {},
      "scope": 3,
      "restricted": false
    },
    "editor.semanticTokenColorCustomizations": {
      "description": "Overrides editor semantic token color and styles from the currently selected color theme.",
      "default": {},
      "allOf": [
        {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "description": "Whether semantic highlighting is enabled or disabled for this theme",
              "suggestSortText": "0_enabled"
            },
            "rules": {
              "$ref": "vscode://schemas/token-styling",
              "description": "Semantic token styling rules for this theme.",
              "suggestSortText": "0_rules"
            }
          },
          "additionalProperties": false,
          "patternProperties": {
            "^\\[": {}
          }
        },
        {
          "properties": {
            "[Abyss]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Ayu Dark]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Ayu Dark Bordered]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Ayu Light]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Ayu Light Bordered]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Ayu Mirage]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Ayu Mirage Bordered]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[CodeSandbox-Black]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Visual Studio Dark]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Default High Contrast]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Default Dark+]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Default Dark+ Experimental]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Field Lights]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Kimbie Dark]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Visual Studio Light]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Default High Contrast Light]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Default Light+]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Default Light+ Experimental]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Monokai]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Monokai Dimmed]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Quiet Light]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Red]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Solarized Dark]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Solarized Light]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Tomorrow Night Blue]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            }
          },
          "patternProperties": {
            "^\\[[^\\]]*(\\]\\s*\\[[^\\]]*)*\\]$": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            }
          }
        }
      ],
      "defaultDefaultValue": {},
      "scope": 3,
      "restricted": false
    },
    "application.experimental.rendererProfiling": {
      "type": "boolean",
      "default": false,
      "tags": [
        "experimental"
      ],
      "markdownDescription": "When enabled slow renderers are automatically profiled",
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "comments.openPanel": {
      "enum": [
        "neverOpen",
        "openOnSessionStart",
        "openOnSessionStartWithComments"
      ],
      "default": "openOnSessionStartWithComments",
      "description": "Controls when the comments panel should open.",
      "restricted": false,
      "markdownDeprecationMessage": "This setting is deprecated in favor of `comments.openView`.",
      "defaultDefaultValue": "openOnSessionStartWithComments",
      "scope": 3,
      "deprecationMessage": "This setting is deprecated in favor of `comments.openView`."
    },
    "comments.openView": {
      "enum": [
        "never",
        "file",
        "firstFile"
      ],
      "enumDescriptions": [
        "The comments view will never be opened.",
        "The comments view will open when a file with comments is active.",
        "If the comments view has not been opened yet during this session it will open the first time during a session that a file with comments is active."
      ],
      "default": "firstFile",
      "description": "Controls when the comments view should open.",
      "restricted": false,
      "defaultDefaultValue": "firstFile",
      "scope": 3
    },
    "comments.useRelativeTime": {
      "type": "boolean",
      "default": true,
      "description": "Determines if relative time will be used in comment timestamps (ex. '1 day ago').",
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "comments.visible": {
      "type": "boolean",
      "default": true,
      "description": "Controls the visibility of the comments bar and comment threads in editors that have commenting ranges and comments. Comments are still accessible via the Comments view and will cause commenting to be toggled on in the same way running the command \"Comments: Toggle Editor Commenting\" toggles comments.",
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "notebook.diff.ignoreMetadata": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Hide Metadata Differences",
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "notebook.diff.ignoreOutputs": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Hide Outputs Differences",
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "screencastMode.verticalOffset": {
      "type": "number",
      "default": 20,
      "minimum": 0,
      "maximum": 90,
      "description": "Controls the vertical offset of the screencast mode overlay from the bottom as a percentage of the workbench height.",
      "defaultDefaultValue": 20,
      "scope": 3,
      "restricted": false
    },
    "screencastMode.fontSize": {
      "type": "number",
      "default": 56,
      "minimum": 20,
      "maximum": 100,
      "description": "Controls the font size (in pixels) of the screencast mode keyboard.",
      "defaultDefaultValue": 56,
      "scope": 3,
      "restricted": false
    },
    "screencastMode.keyboardShortcutsFormat": {
      "enum": [
        "keys",
        "command",
        "commandWithGroup",
        "commandAndKeys",
        "commandWithGroupAndKeys"
      ],
      "enumDescriptions": [
        "Keys.",
        "Command title.",
        "Command title prefixed by its group.",
        "Command title and keys.",
        "Command title and keys, with the command prefixed by its group."
      ],
      "description": "Controls what is displayed in the keyboard overlay when showing shortcuts.",
      "default": "commandAndKeys",
      "defaultDefaultValue": "commandAndKeys",
      "scope": 3,
      "restricted": false
    },
    "screencastMode.onlyKeyboardShortcuts": {
      "type": "boolean",
      "description": "Show only keyboard shortcuts in screencast mode (do not include action names).",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "screencastMode.keyboardOverlayTimeout": {
      "type": "number",
      "default": 800,
      "minimum": 500,
      "maximum": 5000,
      "description": "Controls how long (in milliseconds) the keyboard overlay is shown in screencast mode.",
      "defaultDefaultValue": 800,
      "scope": 3,
      "restricted": false
    },
    "screencastMode.mouseIndicatorColor": {
      "type": "string",
      "format": "color-hex",
      "default": "#FF0000",
      "description": "Controls the color in hex (#RGB, #RGBA, #RRGGBB or #RRGGBBAA) of the mouse indicator in screencast mode.",
      "defaultDefaultValue": "#FF0000",
      "scope": 3,
      "restricted": false
    },
    "screencastMode.mouseIndicatorSize": {
      "type": "number",
      "default": 20,
      "minimum": 20,
      "maximum": 100,
      "description": "Controls the size (in pixels) of the mouse indicator in screencast mode.",
      "defaultDefaultValue": 20,
      "scope": 3,
      "restricted": false
    },
    "interactiveWindow.alwaysScrollOnNewCell": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Automatically scroll the interactive window to show the output of the last statement executed. If this value is false, the window will only scroll if the last cell was already the one scrolled to.",
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "interactiveWindow.restore": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Controls whether the Interactive Window sessions/history should be restored across window reloads. Whether the state of controllers used in Interactive Windows is persisted across window reloads are controlled by extensions contributing controllers.",
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "mergeEditor.diffAlgorithm": {
      "type": "string",
      "enum": [
        "smart",
        "experimental"
      ],
      "default": "experimental",
      "markdownEnumDescriptions": [
        "Uses the default diffing algorithm.",
        "Uses an experimental diffing algorithm."
      ],
      "defaultDefaultValue": "experimental",
      "scope": 3,
      "restricted": false
    },
    "mergeEditor.showDeletionMarkers": {
      "type": "boolean",
      "default": true,
      "description": "Controls if deletions in base or one of the inputs should be indicated by a vertical bar.",
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "workbench.settings.enableNaturalLanguageSearch": {
      "type": "boolean",
      "description": "Controls whether to enable the natural language search mode for settings. The natural language search is provided by a Microsoft online service.",
      "default": true,
      "scope": 3,
      "tags": [
        "usesOnlineServices"
      ],
      "defaultDefaultValue": true,
      "restricted": false
    },
    "workbench.settings.settingsSearchTocBehavior": {
      "type": "string",
      "enum": [
        "hide",
        "filter"
      ],
      "enumDescriptions": [
        "Hide the Table of Contents while searching.",
        "Filter the Table of Contents to just categories that have matching settings. Clicking a category will filter the results to that category."
      ],
      "description": "Controls the behavior of the settings editor Table of Contents while searching.",
      "default": "filter",
      "scope": 3,
      "defaultDefaultValue": "filter",
      "restricted": false
    },
    "files.refactoring.autoSave": {
      "description": "Controls if files that were part of a refactoring are saved automatically",
      "default": true,
      "type": "boolean",
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "notebook.displayOrder": {
      "description": "Priority list for output mime types",
      "type": "array",
      "items": {
        "type": "string"
      },
      "default": [],
      "defaultDefaultValue": [],
      "scope": 3,
      "restricted": false
    },
    "notebook.cellToolbarLocation": {
      "description": "Where the cell toolbar should be shown, or whether it should be hidden.",
      "type": "object",
      "additionalProperties": {
        "markdownDescription": "Configure the cell toolbar position for for specific file types",
        "type": "string",
        "enum": [
          "left",
          "right",
          "hidden"
        ]
      },
      "default": {
        "default": "right"
      },
      "tags": [
        "notebookLayout"
      ],
      "defaultDefaultValue": {
        "default": "right"
      },
      "scope": 3,
      "restricted": false
    },
    "notebook.showCellStatusBar": {
      "description": "Whether the cell status bar should be shown.",
      "type": "string",
      "enum": [
        "hidden",
        "visible",
        "visibleAfterExecute"
      ],
      "enumDescriptions": [
        "The cell Status bar is always hidden.",
        "The cell Status bar is always visible.",
        "The cell Status bar is hidden until the cell has executed. Then it becomes visible to show the execution status."
      ],
      "default": "visible",
      "tags": [
        "notebookLayout"
      ],
      "defaultDefaultValue": "visible",
      "scope": 3,
      "restricted": false
    },
    "notebook.diff.enablePreview": {
      "description": "Whether to use the enhanced text diff editor for notebook.",
      "type": "boolean",
      "default": true,
      "tags": [
        "notebookLayout"
      ],
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "notebook.cellToolbarVisibility": {
      "markdownDescription": "Whether the cell toolbar should appear on hover or click.",
      "type": "string",
      "enum": [
        "hover",
        "click"
      ],
      "default": "click",
      "tags": [
        "notebookLayout"
      ],
      "defaultDefaultValue": "click",
      "scope": 3,
      "restricted": false
    },
    "notebook.undoRedoPerCell": {
      "description": "Whether to use separate undo/redo stack for each cell.",
      "type": "boolean",
      "default": true,
      "tags": [
        "notebookLayout"
      ],
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "notebook.compactView": {
      "description": "Control whether the notebook editor should be rendered in a compact form. For example, when turned on, it will decrease the left margin width.",
      "type": "boolean",
      "default": true,
      "tags": [
        "notebookLayout"
      ],
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "notebook.cellFocusIndicator": {
      "description": "Controls where the focus indicator is rendered, either along the cell borders or on the left gutter.",
      "type": "string",
      "enum": [
        "border",
        "gutter"
      ],
      "default": "gutter",
      "tags": [
        "notebookLayout"
      ],
      "defaultDefaultValue": "gutter",
      "scope": 3,
      "restricted": false
    },
    "notebook.insertToolbarLocation": {
      "description": "Control where the insert cell actions should appear.",
      "type": "string",
      "enum": [
        "betweenCells",
        "notebookToolbar",
        "both",
        "hidden"
      ],
      "enumDescriptions": [
        "A toolbar that appears on hover between cells.",
        "The toolbar at the top of the notebook editor.",
        "Both toolbars.",
        "The insert actions don't appear anywhere."
      ],
      "default": "both",
      "tags": [
        "notebookLayout"
      ],
      "defaultDefaultValue": "both",
      "scope": 3,
      "restricted": false
    },
    "notebook.globalToolbar": {
      "description": "Control whether to render a global toolbar inside the notebook editor.",
      "type": "boolean",
      "default": true,
      "tags": [
        "notebookLayout"
      ],
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "notebook.consolidatedOutputButton": {
      "description": "Control whether outputs action should be rendered in the output toolbar.",
      "type": "boolean",
      "default": true,
      "tags": [
        "notebookLayout"
      ],
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "notebook.showFoldingControls": {
      "description": "Controls when the Markdown header folding arrow is shown.",
      "type": "string",
      "enum": [
        "always",
        "never",
        "mouseover"
      ],
      "enumDescriptions": [
        "The folding controls are always visible.",
        "Never show the folding controls and reduce the gutter size.",
        "The folding controls are visible only on mouseover."
      ],
      "default": "mouseover",
      "tags": [
        "notebookLayout"
      ],
      "defaultDefaultValue": "mouseover",
      "scope": 3,
      "restricted": false
    },
    "notebook.dragAndDropEnabled": {
      "description": "Control whether the notebook editor should allow moving cells through drag and drop.",
      "type": "boolean",
      "default": true,
      "tags": [
        "notebookLayout"
      ],
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "notebook.consolidatedRunButton": {
      "description": "Control whether extra actions are shown in a dropdown next to the run button.",
      "type": "boolean",
      "default": false,
      "tags": [
        "notebookLayout"
      ],
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "notebook.globalToolbarShowLabel": {
      "description": "Control whether the actions on the notebook toolbar should render label or not.",
      "type": "string",
      "enum": [
        "always",
        "never",
        "dynamic"
      ],
      "default": "always",
      "tags": [
        "notebookLayout"
      ],
      "defaultDefaultValue": "always",
      "scope": 3,
      "restricted": false
    },
    "notebook.output.textLineLimit": {
      "description": "Control how many lines of text in a text output is rendered.",
      "type": "number",
      "default": 30,
      "tags": [
        "notebookLayout"
      ],
      "defaultDefaultValue": 30,
      "scope": 3,
      "restricted": false
    },
    "notebook.markup.fontSize": {
      "markdownDescription": "Controls the font size in pixels of rendered markup in notebooks. When set to `0`, 120% of `#editor.fontSize#` is used.",
      "type": "number",
      "default": 0,
      "tags": [
        "notebookLayout"
      ],
      "defaultDefaultValue": 0,
      "scope": 3,
      "restricted": false
    },
    "notebook.editorOptionsCustomizations": {
      "description": "Settings for code editors used in notebooks. This can be used to customize most editor.* settings.",
      "default": {},
      "allOf": [
        {
          "properties": {
            "editor.acceptSuggestionOnCommitCharacter": {
              "markdownDescription": "Controls whether suggestions should be accepted on commit characters. For example, in JavaScript, the semi-colon (`;`) can be a commit character that accepts a suggestion and types that character.",
              "type": "boolean",
              "default": true,
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.acceptSuggestionOnEnter": {
              "markdownEnumDescriptions": [
                "",
                "Only accept a suggestion with `Enter` when it makes a textual change.",
                ""
              ],
              "markdownDescription": "Controls whether suggestions should be accepted on `Enter`, in addition to `Tab`. Helps to avoid ambiguity between inserting new lines or accepting suggestions.",
              "type": "string",
              "enum": [
                "on",
                "smart",
                "off"
              ],
              "default": "on",
              "defaultDefaultValue": "on",
              "scope": 5,
              "restricted": false
            },
            "editor.accessibilitySupport": {
              "type": "string",
              "enum": [
                "auto",
                "on",
                "off"
              ],
              "enumDescriptions": [
                "Use platform APIs to detect when a Screen Reader is attached",
                "Optimize for usage with a Screen Reader",
                "Assume a screen reader is not attached"
              ],
              "default": "auto",
              "tags": [
                "accessibility"
              ],
              "description": "Controls if the UI should run in a mode where it is optimized for screen readers.",
              "defaultDefaultValue": "auto",
              "scope": 5,
              "restricted": false
            },
            "editor.accessibilityPageSize": {
              "description": "Controls the number of lines in the editor that can be read out by a screen reader at once. When we detect a screen reader we automatically set the default to be 500. Warning: this has a performance implication for numbers larger than the default.",
              "tags": [
                "accessibility"
              ],
              "type": "integer",
              "default": 10,
              "minimum": 1,
              "maximum": 1073741824,
              "defaultDefaultValue": 10,
              "scope": 5,
              "restricted": false
            },
            "editor.autoClosingBrackets": {
              "enumDescriptions": [
                "",
                "Use language configurations to determine when to autoclose brackets.",
                "Autoclose brackets only when the cursor is to the left of whitespace.",
                ""
              ],
              "description": "Controls whether the editor should automatically close brackets after the user adds an opening bracket.",
              "type": "string",
              "enum": [
                "always",
                "languageDefined",
                "beforeWhitespace",
                "never"
              ],
              "default": "languageDefined",
              "defaultDefaultValue": "languageDefined",
              "scope": 5,
              "restricted": false
            },
            "editor.autoClosingDelete": {
              "enumDescriptions": [
                "",
                "Remove adjacent closing quotes or brackets only if they were automatically inserted.",
                ""
              ],
              "description": "Controls whether the editor should remove adjacent closing quotes or brackets when deleting.",
              "type": "string",
              "enum": [
                "always",
                "auto",
                "never"
              ],
              "default": "auto",
              "defaultDefaultValue": "auto",
              "scope": 5,
              "restricted": false
            },
            "editor.autoClosingOvertype": {
              "enumDescriptions": [
                "",
                "Type over closing quotes or brackets only if they were automatically inserted.",
                ""
              ],
              "description": "Controls whether the editor should type over closing quotes or brackets.",
              "type": "string",
              "enum": [
                "always",
                "auto",
                "never"
              ],
              "default": "auto",
              "defaultDefaultValue": "auto",
              "scope": 5,
              "restricted": false
            },
            "editor.autoClosingQuotes": {
              "enumDescriptions": [
                "",
                "Use language configurations to determine when to autoclose quotes.",
                "Autoclose quotes only when the cursor is to the left of whitespace.",
                ""
              ],
              "description": "Controls whether the editor should automatically close quotes after the user adds an opening quote.",
              "type": "string",
              "enum": [
                "always",
                "languageDefined",
                "beforeWhitespace",
                "never"
              ],
              "default": "languageDefined",
              "defaultDefaultValue": "languageDefined",
              "scope": 5,
              "restricted": false
            },
            "editor.autoIndent": {
              "enumDescriptions": [
                "The editor will not insert indentation automatically.",
                "The editor will keep the current line's indentation.",
                "The editor will keep the current line's indentation and honor language defined brackets.",
                "The editor will keep the current line's indentation, honor language defined brackets and invoke special onEnterRules defined by languages.",
                "The editor will keep the current line's indentation, honor language defined brackets, invoke special onEnterRules defined by languages, and honor indentationRules defined by languages."
              ],
              "description": "Controls whether the editor should automatically adjust the indentation when users type, paste, move or indent lines.",
              "type": "string",
              "enum": [
                "none",
                "keep",
                "brackets",
                "advanced",
                "full"
              ],
              "default": "full",
              "defaultDefaultValue": "full",
              "scope": 5,
              "restricted": false
            },
            "editor.autoSurround": {
              "enumDescriptions": [
                "Use language configurations to determine when to automatically surround selections.",
                "Surround with quotes but not brackets.",
                "Surround with brackets but not quotes.",
                ""
              ],
              "description": "Controls whether the editor should automatically surround selections when typing quotes or brackets.",
              "type": "string",
              "enum": [
                "languageDefined",
                "quotes",
                "brackets",
                "never"
              ],
              "default": "languageDefined",
              "defaultDefaultValue": "languageDefined",
              "scope": 5,
              "restricted": false
            },
            "editor.bracketPairColorization.enabled": {
              "type": "boolean",
              "default": true,
              "markdownDescription": "Controls whether bracket pair colorization is enabled or not. Use `#workbench.colorCustomizations#` to override the bracket highlight colors.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.bracketPairColorization.independentColorPoolPerBracketType": {
              "type": "boolean",
              "default": false,
              "description": "Controls whether each bracket type has its own independent color pool.",
              "defaultDefaultValue": false,
              "scope": 5,
              "restricted": false
            },
            "editor.guides.bracketPairs": {
              "type": [
                "boolean",
                "string"
              ],
              "enum": [
                true,
                "active",
                false
              ],
              "enumDescriptions": [
                "Enables bracket pair guides.",
                "Enables bracket pair guides only for the active bracket pair.",
                "Disables bracket pair guides."
              ],
              "default": false,
              "description": "Controls whether bracket pair guides are enabled or not.",
              "defaultDefaultValue": false,
              "scope": 5,
              "restricted": false
            },
            "editor.guides.bracketPairsHorizontal": {
              "type": [
                "boolean",
                "string"
              ],
              "enum": [
                true,
                "active",
                false
              ],
              "enumDescriptions": [
                "Enables horizontal guides as addition to vertical bracket pair guides.",
                "Enables horizontal guides only for the active bracket pair.",
                "Disables horizontal bracket pair guides."
              ],
              "default": "active",
              "description": "Controls whether horizontal bracket pair guides are enabled or not.",
              "defaultDefaultValue": "active",
              "scope": 5,
              "restricted": false
            },
            "editor.guides.highlightActiveBracketPair": {
              "type": "boolean",
              "default": true,
              "description": "Controls whether the editor should highlight the active bracket pair.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.guides.indentation": {
              "type": "boolean",
              "default": true,
              "description": "Controls whether the editor should render indent guides.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.guides.highlightActiveIndentation": {
              "type": [
                "boolean",
                "string"
              ],
              "enum": [
                true,
                "always",
                false
              ],
              "enumDescriptions": [
                "Highlights the active indent guide.",
                "Highlights the active indent guide even if bracket guides are highlighted.",
                "Do not highlight the active indent guide."
              ],
              "default": true,
              "description": "Controls whether the editor should highlight the active indent guide.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.codeLens": {
              "description": "Controls whether the editor shows CodeLens.",
              "type": "boolean",
              "default": true,
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.codeLensFontFamily": {
              "description": "Controls the font family for CodeLens.",
              "type": "string",
              "default": "",
              "defaultDefaultValue": "",
              "scope": 5,
              "restricted": false
            },
            "editor.codeLensFontSize": {
              "type": "integer",
              "default": 0,
              "minimum": 0,
              "maximum": 100,
              "markdownDescription": "Controls the font size in pixels for CodeLens. When set to 0, 90% of `#editor.fontSize#` is used.",
              "defaultDefaultValue": 0,
              "scope": 5,
              "restricted": false
            },
            "editor.colorDecorators": {
              "description": "Controls whether the editor should render the inline color decorators and color picker.",
              "type": "boolean",
              "default": true,
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.colorDecoratorsLimit": {
              "markdownDescription": "Controls the max number of color decorators that can be rendered in an editor at once.",
              "type": "integer",
              "default": 500,
              "minimum": 1,
              "maximum": 1000000,
              "defaultDefaultValue": 500,
              "scope": 5,
              "restricted": false
            },
            "editor.columnSelection": {
              "description": "Enable that the selection with the mouse and keys is doing column selection.",
              "type": "boolean",
              "default": false,
              "defaultDefaultValue": false,
              "scope": 5,
              "restricted": false
            },
            "editor.comments.insertSpace": {
              "type": "boolean",
              "default": true,
              "description": "Controls whether a space character is inserted when commenting.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.comments.ignoreEmptyLines": {
              "type": "boolean",
              "default": true,
              "description": "Controls if empty lines should be ignored with toggle, add or remove actions for line comments.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.copyWithSyntaxHighlighting": {
              "description": "Controls whether syntax highlighting should be copied into the clipboard.",
              "type": "boolean",
              "default": true,
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.cursorBlinking": {
              "description": "Control the cursor animation style.",
              "type": "string",
              "enum": [
                "blink",
                "smooth",
                "phase",
                "expand",
                "solid"
              ],
              "default": "blink",
              "defaultDefaultValue": "blink",
              "scope": 5,
              "restricted": false
            },
            "editor.cursorSmoothCaretAnimation": {
              "enumDescriptions": [
                "Smooth caret animation is disabled.",
                "Smooth caret animation is enabled only when the user moves the cursor with an explicit gesture.",
                "Smooth caret animation is always enabled."
              ],
              "description": "Controls whether the smooth caret animation should be enabled.",
              "type": "string",
              "enum": [
                "off",
                "explicit",
                "on"
              ],
              "default": "off",
              "defaultDefaultValue": "off",
              "scope": 5,
              "restricted": false
            },
            "editor.cursorStyle": {
              "description": "Controls the cursor style.",
              "type": "string",
              "enum": [
                "line",
                "block",
                "underline",
                "line-thin",
                "block-outline",
                "underline-thin"
              ],
              "default": "line",
              "defaultDefaultValue": "line",
              "scope": 5,
              "restricted": false
            },
            "editor.cursorSurroundingLines": {
              "description": "Controls the minimal number of visible leading lines (minimum 0) and trailing lines (minimum 1) surrounding the cursor. Known as 'scrollOff' or 'scrollOffset' in some other editors.",
              "type": "integer",
              "default": 0,
              "minimum": 0,
              "maximum": 1073741824,
              "defaultDefaultValue": 0,
              "scope": 5,
              "restricted": false
            },
            "editor.cursorSurroundingLinesStyle": {
              "enumDescriptions": [
                "`cursorSurroundingLines` is enforced only when triggered via the keyboard or API.",
                "`cursorSurroundingLines` is enforced always."
              ],
              "description": "Controls when `cursorSurroundingLines` should be enforced.",
              "type": "string",
              "enum": [
                "default",
                "all"
              ],
              "default": "default",
              "defaultDefaultValue": "default",
              "scope": 5,
              "restricted": false
            },
            "editor.cursorWidth": {
              "markdownDescription": "Controls the width of the cursor when `#editor.cursorStyle#` is set to `line`.",
              "type": "integer",
              "default": 0,
              "minimum": 0,
              "maximum": 1073741824,
              "defaultDefaultValue": 0,
              "scope": 5,
              "restricted": false
            },
            "editor.dragAndDrop": {
              "description": "Controls whether the editor should allow moving selections via drag and drop.",
              "type": "boolean",
              "default": true,
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.dropIntoEditor.enabled": {
              "type": "boolean",
              "default": true,
              "markdownDescription": "Controls whether you can drag and drop a file into a text editor by holding down `shift` (instead of opening the file in an editor).",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.emptySelectionClipboard": {
              "description": "Controls whether copying without a selection copies the current line.",
              "type": "boolean",
              "default": true,
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.experimentalWhitespaceRendering": {
              "enumDescriptions": [
                "Use a new rendering method with svgs.",
                "Use a new rendering method with font characters.",
                "Use the stable rendering method."
              ],
              "description": "Controls whether whitespace is rendered with a new, experimental method.",
              "type": "string",
              "enum": [
                "svg",
                "font",
                "off"
              ],
              "default": "svg",
              "defaultDefaultValue": "svg",
              "scope": 5,
              "restricted": false
            },
            "editor.fastScrollSensitivity": {
              "markdownDescription": "Scrolling speed multiplier when pressing `Alt`.",
              "type": "number",
              "default": 5,
              "defaultDefaultValue": 5,
              "scope": 5,
              "restricted": false
            },
            "editor.find.cursorMoveOnType": {
              "type": "boolean",
              "default": true,
              "description": "Controls whether the cursor should jump to find matches while typing.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.find.seedSearchStringFromSelection": {
              "type": "string",
              "enum": [
                "never",
                "always",
                "selection"
              ],
              "default": "always",
              "enumDescriptions": [
                "Never seed search string from the editor selection.",
                "Always seed search string from the editor selection, including word at cursor position.",
                "Only seed search string from the editor selection."
              ],
              "description": "Controls whether the search string in the Find Widget is seeded from the editor selection.",
              "defaultDefaultValue": "always",
              "scope": 5,
              "restricted": false
            },
            "editor.find.autoFindInSelection": {
              "type": "string",
              "enum": [
                "never",
                "always",
                "multiline"
              ],
              "default": "never",
              "enumDescriptions": [
                "Never turn on Find in Selection automatically (default).",
                "Always turn on Find in Selection automatically.",
                "Turn on Find in Selection automatically when multiple lines of content are selected."
              ],
              "description": "Controls the condition for turning on Find in Selection automatically.",
              "defaultDefaultValue": "never",
              "scope": 5,
              "restricted": false
            },
            "editor.find.globalFindClipboard": {
              "type": "boolean",
              "default": false,
              "description": "Controls whether the Find Widget should read or modify the shared find clipboard on macOS.",
              "included": true,
              "defaultDefaultValue": false,
              "scope": 5,
              "restricted": false
            },
            "editor.find.addExtraSpaceOnTop": {
              "type": "boolean",
              "default": true,
              "description": "Controls whether the Find Widget should add extra lines on top of the editor. When true, you can scroll beyond the first line when the Find Widget is visible.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.find.loop": {
              "type": "boolean",
              "default": true,
              "description": "Controls whether the search automatically restarts from the beginning (or the end) when no further matches can be found.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.folding": {
              "description": "Controls whether the editor has code folding enabled.",
              "type": "boolean",
              "default": true,
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.foldingStrategy": {
              "enumDescriptions": [
                "Use a language-specific folding strategy if available, else the indentation-based one.",
                "Use the indentation-based folding strategy."
              ],
              "description": "Controls the strategy for computing folding ranges.",
              "type": "string",
              "enum": [
                "auto",
                "indentation"
              ],
              "default": "auto",
              "defaultDefaultValue": "auto",
              "scope": 5,
              "restricted": false
            },
            "editor.foldingHighlight": {
              "description": "Controls whether the editor should highlight folded ranges.",
              "type": "boolean",
              "default": true,
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.foldingImportsByDefault": {
              "description": "Controls whether the editor automatically collapses import ranges.",
              "type": "boolean",
              "default": false,
              "defaultDefaultValue": false,
              "scope": 5,
              "restricted": false
            },
            "editor.foldingMaximumRegions": {
              "description": "The maximum number of foldable regions. Increasing this value may result in the editor becoming less responsive when the current source has a large number of foldable regions.",
              "type": "integer",
              "default": 5000,
              "minimum": 10,
              "maximum": 65000,
              "defaultDefaultValue": 5000,
              "scope": 5,
              "restricted": false
            },
            "editor.unfoldOnClickAfterEndOfLine": {
              "description": "Controls whether clicking on the empty content after a folded line will unfold the line.",
              "type": "boolean",
              "default": false,
              "defaultDefaultValue": false,
              "scope": 5,
              "restricted": false
            },
            "editor.fontFamily": {
              "description": "Controls the font family.",
              "type": "string",
              "default": "Menlo, Monaco, 'Courier New', monospace",
              "defaultDefaultValue": "Menlo, Monaco, 'Courier New', monospace",
              "scope": 5,
              "restricted": false
            },
            "editor.fontLigatures": {
              "anyOf": [
                {
                  "type": "boolean",
                  "description": "Enables/Disables font ligatures ('calt' and 'liga' font features). Change this to a string for fine-grained control of the 'font-feature-settings' CSS property."
                },
                {
                  "type": "string",
                  "description": "Explicit 'font-feature-settings' CSS property. A boolean can be passed instead if one only needs to turn on/off ligatures."
                }
              ],
              "description": "Configures font ligatures or font features. Can be either a boolean to enable/disable ligatures or a string for the value of the CSS 'font-feature-settings' property.",
              "default": false,
              "defaultDefaultValue": false,
              "scope": 5,
              "restricted": false
            },
            "editor.fontSize": {
              "type": "number",
              "minimum": 6,
              "maximum": 100,
              "default": 12,
              "description": "Controls the font size in pixels.",
              "defaultDefaultValue": 12,
              "scope": 5,
              "restricted": false
            },
            "editor.fontWeight": {
              "anyOf": [
                {
                  "type": "number",
                  "minimum": 1,
                  "maximum": 1000,
                  "errorMessage": "Only \"normal\" and \"bold\" keywords or numbers between 1 and 1000 are allowed."
                },
                {
                  "type": "string",
                  "pattern": "^(normal|bold|1000|[1-9][0-9]{0,2})$"
                },
                {
                  "enum": [
                    "normal",
                    "bold",
                    "100",
                    "200",
                    "300",
                    "400",
                    "500",
                    "600",
                    "700",
                    "800",
                    "900"
                  ]
                }
              ],
              "default": "normal",
              "description": "Controls the font weight. Accepts \"normal\" and \"bold\" keywords or numbers between 1 and 1000.",
              "defaultDefaultValue": "normal",
              "scope": 5,
              "restricted": false
            },
            "editor.fontVariations": {
              "anyOf": [
                {
                  "type": "boolean",
                  "description": "Enables/Disables the translation from font-weight to font-variation-settings. Change this to a string for fine-grained control of the 'font-variation-settings' CSS property."
                },
                {
                  "type": "string",
                  "description": "Explicit 'font-variation-settings' CSS property. A boolean can be passed instead if one only needs to translate font-weight to font-variation-settings."
                }
              ],
              "description": "Configures font variations. Can be either a boolean to enable/disable the translation from font-weight to font-variation-settings or a string for the value of the CSS 'font-variation-settings' property.",
              "default": false,
              "defaultDefaultValue": false,
              "scope": 5,
              "restricted": false
            },
            "editor.formatOnPaste": {
              "description": "Controls whether the editor should automatically format the pasted content. A formatter must be available and the formatter should be able to format a range in a document.",
              "type": "boolean",
              "default": false,
              "defaultDefaultValue": false,
              "scope": 5,
              "restricted": false
            },
            "editor.formatOnType": {
              "description": "Controls whether the editor should automatically format the line after typing.",
              "type": "boolean",
              "default": false,
              "defaultDefaultValue": false,
              "scope": 5,
              "restricted": false
            },
            "editor.glyphMargin": {
              "description": "Controls whether the editor should render the vertical glyph margin. Glyph margin is mostly used for debugging.",
              "type": "boolean",
              "default": true,
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.gotoLocation.multiple": {
              "deprecationMessage": "This setting is deprecated, please use separate settings like 'editor.editor.gotoLocation.multipleDefinitions' or 'editor.editor.gotoLocation.multipleImplementations' instead.",
              "default": null,
              "scope": 5,
              "restricted": false
            },
            "editor.gotoLocation.multipleDefinitions": {
              "description": "Controls the behavior the 'Go to Definition'-command when multiple target locations exist.",
              "type": "string",
              "enum": [
                "peek",
                "gotoAndPeek",
                "goto"
              ],
              "default": "peek",
              "enumDescriptions": [
                "Show Peek view of the results (default)",
                "Go to the primary result and show a Peek view",
                "Go to the primary result and enable Peek-less navigation to others"
              ],
              "defaultDefaultValue": "peek",
              "scope": 5,
              "restricted": false
            },
            "editor.gotoLocation.multipleTypeDefinitions": {
              "description": "Controls the behavior the 'Go to Type Definition'-command when multiple target locations exist.",
              "type": "string",
              "enum": [
                "peek",
                "gotoAndPeek",
                "goto"
              ],
              "default": "peek",
              "enumDescriptions": [
                "Show Peek view of the results (default)",
                "Go to the primary result and show a Peek view",
                "Go to the primary result and enable Peek-less navigation to others"
              ],
              "defaultDefaultValue": "peek",
              "scope": 5,
              "restricted": false
            },
            "editor.gotoLocation.multipleDeclarations": {
              "description": "Controls the behavior the 'Go to Declaration'-command when multiple target locations exist.",
              "type": "string",
              "enum": [
                "peek",
                "gotoAndPeek",
                "goto"
              ],
              "default": "peek",
              "enumDescriptions": [
                "Show Peek view of the results (default)",
                "Go to the primary result and show a Peek view",
                "Go to the primary result and enable Peek-less navigation to others"
              ],
              "defaultDefaultValue": "peek",
              "scope": 5,
              "restricted": false
            },
            "editor.gotoLocation.multipleImplementations": {
              "description": "Controls the behavior the 'Go to Implementations'-command when multiple target locations exist.",
              "type": "string",
              "enum": [
                "peek",
                "gotoAndPeek",
                "goto"
              ],
              "default": "peek",
              "enumDescriptions": [
                "Show Peek view of the results (default)",
                "Go to the primary result and show a Peek view",
                "Go to the primary result and enable Peek-less navigation to others"
              ],
              "defaultDefaultValue": "peek",
              "scope": 5,
              "restricted": false
            },
            "editor.gotoLocation.multipleReferences": {
              "description": "Controls the behavior the 'Go to References'-command when multiple target locations exist.",
              "type": "string",
              "enum": [
                "peek",
                "gotoAndPeek",
                "goto"
              ],
              "default": "peek",
              "enumDescriptions": [
                "Show Peek view of the results (default)",
                "Go to the primary result and show a Peek view",
                "Go to the primary result and enable Peek-less navigation to others"
              ],
              "defaultDefaultValue": "peek",
              "scope": 5,
              "restricted": false
            },
            "editor.gotoLocation.alternativeDefinitionCommand": {
              "type": "string",
              "default": "editor.action.goToReferences",
              "enum": [
                "",
                "editor.action.referenceSearch.trigger",
                "editor.action.goToReferences",
                "editor.action.peekImplementation",
                "editor.action.goToImplementation",
                "editor.action.peekTypeDefinition",
                "editor.action.goToTypeDefinition",
                "editor.action.peekDeclaration",
                "editor.action.revealDeclaration",
                "editor.action.peekDefinition",
                "editor.action.revealDefinitionAside",
                "editor.action.revealDefinition"
              ],
              "description": "Alternative command id that is being executed when the result of 'Go to Definition' is the current location.",
              "defaultDefaultValue": "editor.action.goToReferences",
              "scope": 5,
              "restricted": false
            },
            "editor.gotoLocation.alternativeTypeDefinitionCommand": {
              "type": "string",
              "default": "editor.action.goToReferences",
              "enum": [
                "",
                "editor.action.referenceSearch.trigger",
                "editor.action.goToReferences",
                "editor.action.peekImplementation",
                "editor.action.goToImplementation",
                "editor.action.peekTypeDefinition",
                "editor.action.goToTypeDefinition",
                "editor.action.peekDeclaration",
                "editor.action.revealDeclaration",
                "editor.action.peekDefinition",
                "editor.action.revealDefinitionAside",
                "editor.action.revealDefinition"
              ],
              "description": "Alternative command id that is being executed when the result of 'Go to Type Definition' is the current location.",
              "defaultDefaultValue": "editor.action.goToReferences",
              "scope": 5,
              "restricted": false
            },
            "editor.gotoLocation.alternativeDeclarationCommand": {
              "type": "string",
              "default": "editor.action.goToReferences",
              "enum": [
                "",
                "editor.action.referenceSearch.trigger",
                "editor.action.goToReferences",
                "editor.action.peekImplementation",
                "editor.action.goToImplementation",
                "editor.action.peekTypeDefinition",
                "editor.action.goToTypeDefinition",
                "editor.action.peekDeclaration",
                "editor.action.revealDeclaration",
                "editor.action.peekDefinition",
                "editor.action.revealDefinitionAside",
                "editor.action.revealDefinition"
              ],
              "description": "Alternative command id that is being executed when the result of 'Go to Declaration' is the current location.",
              "defaultDefaultValue": "editor.action.goToReferences",
              "scope": 5,
              "restricted": false
            },
            "editor.gotoLocation.alternativeImplementationCommand": {
              "type": "string",
              "default": "",
              "enum": [
                "",
                "editor.action.referenceSearch.trigger",
                "editor.action.goToReferences",
                "editor.action.peekImplementation",
                "editor.action.goToImplementation",
                "editor.action.peekTypeDefinition",
                "editor.action.goToTypeDefinition",
                "editor.action.peekDeclaration",
                "editor.action.revealDeclaration",
                "editor.action.peekDefinition",
                "editor.action.revealDefinitionAside",
                "editor.action.revealDefinition"
              ],
              "description": "Alternative command id that is being executed when the result of 'Go to Implementation' is the current location.",
              "defaultDefaultValue": "",
              "scope": 5,
              "restricted": false
            },
            "editor.gotoLocation.alternativeReferenceCommand": {
              "type": "string",
              "default": "",
              "enum": [
                "",
                "editor.action.referenceSearch.trigger",
                "editor.action.goToReferences",
                "editor.action.peekImplementation",
                "editor.action.goToImplementation",
                "editor.action.peekTypeDefinition",
                "editor.action.goToTypeDefinition",
                "editor.action.peekDeclaration",
                "editor.action.revealDeclaration",
                "editor.action.peekDefinition",
                "editor.action.revealDefinitionAside",
                "editor.action.revealDefinition"
              ],
              "description": "Alternative command id that is being executed when the result of 'Go to Reference' is the current location.",
              "defaultDefaultValue": "",
              "scope": 5,
              "restricted": false
            },
            "editor.hideCursorInOverviewRuler": {
              "description": "Controls whether the cursor should be hidden in the overview ruler.",
              "type": "boolean",
              "default": false,
              "defaultDefaultValue": false,
              "scope": 5,
              "restricted": false
            },
            "editor.hover.enabled": {
              "type": "boolean",
              "default": true,
              "description": "Controls whether the hover is shown.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.hover.delay": {
              "type": "number",
              "default": 300,
              "minimum": 0,
              "maximum": 10000,
              "description": "Controls the delay in milliseconds after which the hover is shown.",
              "defaultDefaultValue": 300,
              "scope": 5,
              "restricted": false
            },
            "editor.hover.sticky": {
              "type": "boolean",
              "default": true,
              "description": "Controls whether the hover should remain visible when mouse is moved over it.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.hover.above": {
              "type": "boolean",
              "default": true,
              "description": "Prefer showing hovers above the line, if there's space.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.inlineSuggest.enabled": {
              "type": "boolean",
              "default": true,
              "description": "Controls whether to automatically show inline suggestions in the editor.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.inlineSuggest.showToolbar": {
              "type": "string",
              "default": "onHover",
              "enum": [
                "always",
                "onHover"
              ],
              "enumDescriptions": [
                "Show the inline suggestion toolbar whenever an inline suggestion is shown.",
                "Show the inline suggestion toolbar when hovering over an inline suggestion."
              ],
              "description": "Controls when to show the inline suggestion toolbar.",
              "defaultDefaultValue": "onHover",
              "scope": 5,
              "restricted": false
            },
            "editor.letterSpacing": {
              "description": "Controls the letter spacing in pixels.",
              "type": "number",
              "default": 0,
              "defaultDefaultValue": 0,
              "scope": 5,
              "restricted": false
            },
            "editor.lightbulb.enabled": {
              "type": "boolean",
              "default": true,
              "description": "Enables the Code Action lightbulb in the editor.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.lineHeight": {
              "markdownDescription": "Controls the line height. \n - Use 0 to automatically compute the line height from the font size.\n - Values between 0 and 8 will be used as a multiplier with the font size.\n - Values greater than or equal to 8 will be used as effective values.",
              "type": "number",
              "default": 0,
              "defaultDefaultValue": 0,
              "scope": 5,
              "restricted": false
            },
            "editor.lineNumbers": {
              "type": "string",
              "enum": [
                "off",
                "on",
                "relative",
                "interval"
              ],
              "enumDescriptions": [
                "Line numbers are not rendered.",
                "Line numbers are rendered as absolute number.",
                "Line numbers are rendered as distance in lines to cursor position.",
                "Line numbers are rendered every 10 lines."
              ],
              "default": "on",
              "description": "Controls the display of line numbers.",
              "defaultDefaultValue": "on",
              "scope": 5,
              "restricted": false
            },
            "editor.linkedEditing": {
              "description": "Controls whether the editor has linked editing enabled. Depending on the language, related symbols such as HTML tags, are updated while editing.",
              "type": "boolean",
              "default": false,
              "defaultDefaultValue": false,
              "scope": 5,
              "restricted": false
            },
            "editor.links": {
              "description": "Controls whether the editor should detect links and make them clickable.",
              "type": "boolean",
              "default": true,
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.matchBrackets": {
              "description": "Highlight matching brackets.",
              "type": "string",
              "enum": [
                "always",
                "near",
                "never"
              ],
              "default": "always",
              "defaultDefaultValue": "always",
              "scope": 5,
              "restricted": false
            },
            "editor.minimap.enabled": {
              "type": "boolean",
              "default": true,
              "description": "Controls whether the minimap is shown.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.minimap.autohide": {
              "type": "boolean",
              "default": false,
              "description": "Controls whether the minimap is hidden automatically.",
              "defaultDefaultValue": false,
              "scope": 5,
              "restricted": false
            },
            "editor.minimap.size": {
              "type": "string",
              "enum": [
                "proportional",
                "fill",
                "fit"
              ],
              "enumDescriptions": [
                "The minimap has the same size as the editor contents (and might scroll).",
                "The minimap will stretch or shrink as necessary to fill the height of the editor (no scrolling).",
                "The minimap will shrink as necessary to never be larger than the editor (no scrolling)."
              ],
              "default": "proportional",
              "description": "Controls the size of the minimap.",
              "defaultDefaultValue": "proportional",
              "scope": 5,
              "restricted": false
            },
            "editor.minimap.side": {
              "type": "string",
              "enum": [
                "left",
                "right"
              ],
              "default": "right",
              "description": "Controls the side where to render the minimap.",
              "defaultDefaultValue": "right",
              "scope": 5,
              "restricted": false
            },
            "editor.minimap.showSlider": {
              "type": "string",
              "enum": [
                "always",
                "mouseover"
              ],
              "default": "mouseover",
              "description": "Controls when the minimap slider is shown.",
              "defaultDefaultValue": "mouseover",
              "scope": 5,
              "restricted": false
            },
            "editor.minimap.scale": {
              "type": "number",
              "default": 1,
              "minimum": 1,
              "maximum": 3,
              "enum": [
                1,
                2,
                3
              ],
              "description": "Scale of content drawn in the minimap: 1, 2 or 3.",
              "defaultDefaultValue": 1,
              "scope": 5,
              "restricted": false
            },
            "editor.minimap.renderCharacters": {
              "type": "boolean",
              "default": true,
              "description": "Render the actual characters on a line as opposed to color blocks.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.minimap.maxColumn": {
              "type": "number",
              "default": 120,
              "description": "Limit the width of the minimap to render at most a certain number of columns.",
              "defaultDefaultValue": 120,
              "scope": 5,
              "restricted": false
            },
            "editor.mouseWheelScrollSensitivity": {
              "markdownDescription": "A multiplier to be used on the `deltaX` and `deltaY` of mouse wheel scroll events.",
              "type": "number",
              "default": 1,
              "defaultDefaultValue": 1,
              "scope": 5,
              "restricted": false
            },
            "editor.mouseWheelZoom": {
              "markdownDescription": "Zoom the font of the editor when using mouse wheel and holding `Ctrl`.",
              "type": "boolean",
              "default": false,
              "defaultDefaultValue": false,
              "scope": 5,
              "restricted": false
            },
            "editor.multiCursorMergeOverlapping": {
              "description": "Merge multiple cursors when they are overlapping.",
              "type": "boolean",
              "default": true,
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.multiCursorModifier": {
              "markdownEnumDescriptions": [
                "Maps to `Control` on Windows and Linux and to `Command` on macOS.",
                "Maps to `Alt` on Windows and Linux and to `Option` on macOS."
              ],
              "markdownDescription": "The modifier to be used to add multiple cursors with the mouse. The Go to Definition and Open Link mouse gestures will adapt such that they do not conflict with the [multicursor modifier](https://code.visualstudio.com/docs/editor/codebasics#_multicursor-modifier).",
              "type": "string",
              "enum": [
                "ctrlCmd",
                "alt"
              ],
              "default": "alt",
              "defaultDefaultValue": "alt",
              "scope": 5,
              "restricted": false
            },
            "editor.multiCursorPaste": {
              "markdownEnumDescriptions": [
                "Each cursor pastes a single line of the text.",
                "Each cursor pastes the full text."
              ],
              "markdownDescription": "Controls pasting when the line count of the pasted text matches the cursor count.",
              "type": "string",
              "enum": [
                "spread",
                "full"
              ],
              "default": "spread",
              "defaultDefaultValue": "spread",
              "scope": 5,
              "restricted": false
            },
            "editor.multiCursorLimit": {
              "markdownDescription": "Controls the max number of cursors that can be in an active editor at once.",
              "type": "integer",
              "default": 10000,
              "minimum": 1,
              "maximum": 100000,
              "defaultDefaultValue": 10000,
              "scope": 5,
              "restricted": false
            },
            "editor.occurrencesHighlight": {
              "description": "Controls whether the editor should highlight semantic symbol occurrences.",
              "type": "boolean",
              "default": true,
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.overviewRulerBorder": {
              "description": "Controls whether a border should be drawn around the overview ruler.",
              "type": "boolean",
              "default": true,
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.padding.top": {
              "type": "number",
              "default": 0,
              "minimum": 0,
              "maximum": 1000,
              "description": "Controls the amount of space between the top edge of the editor and the first line.",
              "defaultDefaultValue": 0,
              "scope": 5,
              "restricted": false
            },
            "editor.padding.bottom": {
              "type": "number",
              "default": 0,
              "minimum": 0,
              "maximum": 1000,
              "description": "Controls the amount of space between the bottom edge of the editor and the last line.",
              "defaultDefaultValue": 0,
              "scope": 5,
              "restricted": false
            },
            "editor.parameterHints.enabled": {
              "type": "boolean",
              "default": true,
              "description": "Enables a pop-up that shows parameter documentation and type information as you type.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.parameterHints.cycle": {
              "type": "boolean",
              "default": true,
              "description": "Controls whether the parameter hints menu cycles or closes when reaching the end of the list.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.peekWidgetDefaultFocus": {
              "enumDescriptions": [
                "Focus the tree when opening peek",
                "Focus the editor when opening peek"
              ],
              "description": "Controls whether to focus the inline editor or the tree in the peek widget.",
              "type": "string",
              "enum": [
                "tree",
                "editor"
              ],
              "default": "tree",
              "defaultDefaultValue": "tree",
              "scope": 5,
              "restricted": false
            },
            "editor.definitionLinkOpensInPeek": {
              "description": "Controls whether the Go to Definition mouse gesture always opens the peek widget.",
              "type": "boolean",
              "default": false,
              "defaultDefaultValue": false,
              "scope": 5,
              "restricted": false
            },
            "editor.quickSuggestions": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "strings": {
                  "anyOf": [
                    {
                      "type": "boolean"
                    },
                    {
                      "type": "string",
                      "enum": [
                        "on",
                        "inline",
                        "off"
                      ],
                      "enumDescriptions": [
                        "Quick suggestions show inside the suggest widget",
                        "Quick suggestions show as ghost text",
                        "Quick suggestions are disabled"
                      ]
                    }
                  ],
                  "default": "off",
                  "description": "Enable quick suggestions inside strings."
                },
                "comments": {
                  "anyOf": [
                    {
                      "type": "boolean"
                    },
                    {
                      "type": "string",
                      "enum": [
                        "on",
                        "inline",
                        "off"
                      ],
                      "enumDescriptions": [
                        "Quick suggestions show inside the suggest widget",
                        "Quick suggestions show as ghost text",
                        "Quick suggestions are disabled"
                      ]
                    }
                  ],
                  "default": "off",
                  "description": "Enable quick suggestions inside comments."
                },
                "other": {
                  "anyOf": [
                    {
                      "type": "boolean"
                    },
                    {
                      "type": "string",
                      "enum": [
                        "on",
                        "inline",
                        "off"
                      ],
                      "enumDescriptions": [
                        "Quick suggestions show inside the suggest widget",
                        "Quick suggestions show as ghost text",
                        "Quick suggestions are disabled"
                      ]
                    }
                  ],
                  "default": "on",
                  "description": "Enable quick suggestions outside of strings and comments."
                }
              },
              "default": {
                "other": "on",
                "comments": "off",
                "strings": "off"
              },
              "markdownDescription": "Controls whether suggestions should automatically show up while typing. This can be controlled for typing in comments, strings, and other code. Quick suggestion can be configured to show as ghost text or with the suggest widget. Also be aware of the '#editor.suggestOnTriggerCharacters#'-setting which controls if suggestions are triggered by special characters.",
              "defaultDefaultValue": {
                "other": "on",
                "comments": "off",
                "strings": "off"
              },
              "scope": 5,
              "restricted": false
            },
            "editor.quickSuggestionsDelay": {
              "description": "Controls the delay in milliseconds after which quick suggestions will show up.",
              "type": "integer",
              "default": 10,
              "minimum": 0,
              "maximum": 1073741824,
              "defaultDefaultValue": 10,
              "scope": 5,
              "restricted": false
            },
            "editor.renameOnType": {
              "description": "Controls whether the editor auto renames on type.",
              "markdownDeprecationMessage": "Deprecated, use `editor.linkedEditing` instead.",
              "type": "boolean",
              "default": false,
              "defaultDefaultValue": false,
              "scope": 5,
              "restricted": false,
              "deprecationMessage": "Deprecated, use `editor.linkedEditing` instead."
            },
            "editor.renderControlCharacters": {
              "description": "Controls whether the editor should render control characters.",
              "restricted": true,
              "type": "boolean",
              "default": true,
              "defaultDefaultValue": true,
              "scope": 5
            },
            "editor.renderFinalNewline": {
              "description": "Render last line number when the file ends with a newline.",
              "type": "string",
              "enum": [
                "off",
                "on",
                "dimmed"
              ],
              "default": "on",
              "defaultDefaultValue": "on",
              "scope": 5,
              "restricted": false
            },
            "editor.renderLineHighlight": {
              "enumDescriptions": [
                "",
                "",
                "",
                "Highlights both the gutter and the current line."
              ],
              "description": "Controls how the editor should render the current line highlight.",
              "type": "string",
              "enum": [
                "none",
                "gutter",
                "line",
                "all"
              ],
              "default": "line",
              "defaultDefaultValue": "line",
              "scope": 5,
              "restricted": false
            },
            "editor.renderLineHighlightOnlyWhenFocus": {
              "description": "Controls if the editor should render the current line highlight only when the editor is focused.",
              "type": "boolean",
              "default": false,
              "defaultDefaultValue": false,
              "scope": 5,
              "restricted": false
            },
            "editor.renderWhitespace": {
              "enumDescriptions": [
                "",
                "Render whitespace characters except for single spaces between words.",
                "Render whitespace characters only on selected text.",
                "Render only trailing whitespace characters.",
                ""
              ],
              "description": "Controls how the editor should render whitespace characters.",
              "type": "string",
              "enum": [
                "none",
                "boundary",
                "selection",
                "trailing",
                "all"
              ],
              "default": "selection",
              "defaultDefaultValue": "selection",
              "scope": 5,
              "restricted": false
            },
            "editor.roundedSelection": {
              "description": "Controls whether selections should have rounded corners.",
              "type": "boolean",
              "default": true,
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.rulers": {
              "type": "array",
              "items": {
                "anyOf": [
                  {
                    "type": "number",
                    "description": "Number of monospace characters at which this editor ruler will render."
                  },
                  {
                    "type": [
                      "object"
                    ],
                    "properties": {
                      "column": {
                        "type": "number",
                        "description": "Number of monospace characters at which this editor ruler will render."
                      },
                      "color": {
                        "type": "string",
                        "description": "Color of this editor ruler.",
                        "format": "color-hex"
                      }
                    }
                  }
                ]
              },
              "default": [],
              "description": "Render vertical rulers after a certain number of monospace characters. Use multiple values for multiple rulers. No rulers are drawn if array is empty.",
              "defaultDefaultValue": [],
              "scope": 5,
              "restricted": false
            },
            "editor.scrollbar.vertical": {
              "type": "string",
              "enum": [
                "auto",
                "visible",
                "hidden"
              ],
              "enumDescriptions": [
                "The vertical scrollbar will be visible only when necessary.",
                "The vertical scrollbar will always be visible.",
                "The vertical scrollbar will always be hidden."
              ],
              "default": "auto",
              "description": "Controls the visibility of the vertical scrollbar.",
              "defaultDefaultValue": "auto",
              "scope": 5,
              "restricted": false
            },
            "editor.scrollbar.horizontal": {
              "type": "string",
              "enum": [
                "auto",
                "visible",
                "hidden"
              ],
              "enumDescriptions": [
                "The horizontal scrollbar will be visible only when necessary.",
                "The horizontal scrollbar will always be visible.",
                "The horizontal scrollbar will always be hidden."
              ],
              "default": "auto",
              "description": "Controls the visibility of the horizontal scrollbar.",
              "defaultDefaultValue": "auto",
              "scope": 5,
              "restricted": false
            },
            "editor.scrollbar.verticalScrollbarSize": {
              "type": "number",
              "default": 14,
              "description": "The width of the vertical scrollbar.",
              "defaultDefaultValue": 14,
              "scope": 5,
              "restricted": false
            },
            "editor.scrollbar.horizontalScrollbarSize": {
              "type": "number",
              "default": 12,
              "description": "The height of the horizontal scrollbar.",
              "defaultDefaultValue": 12,
              "scope": 5,
              "restricted": false
            },
            "editor.scrollbar.scrollByPage": {
              "type": "boolean",
              "default": false,
              "description": "Controls whether clicks scroll by page or jump to click position.",
              "defaultDefaultValue": false,
              "scope": 5,
              "restricted": false
            },
            "editor.scrollBeyondLastColumn": {
              "description": "Controls the number of extra characters beyond which the editor will scroll horizontally.",
              "type": "integer",
              "default": 4,
              "minimum": 0,
              "maximum": 1073741824,
              "defaultDefaultValue": 4,
              "scope": 5,
              "restricted": false
            },
            "editor.scrollBeyondLastLine": {
              "description": "Controls whether the editor will scroll beyond the last line.",
              "type": "boolean",
              "default": true,
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.scrollPredominantAxis": {
              "description": "Scroll only along the predominant axis when scrolling both vertically and horizontally at the same time. Prevents horizontal drift when scrolling vertically on a trackpad.",
              "type": "boolean",
              "default": true,
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.selectionClipboard": {
              "description": "Controls whether the Linux primary clipboard should be supported.",
              "included": false,
              "type": "boolean",
              "default": true,
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.selectionHighlight": {
              "description": "Controls whether the editor should highlight matches similar to the selection.",
              "type": "boolean",
              "default": true,
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.showFoldingControls": {
              "enumDescriptions": [
                "Always show the folding controls.",
                "Never show the folding controls and reduce the gutter size.",
                "Only show the folding controls when the mouse is over the gutter."
              ],
              "description": "Controls when the folding controls on the gutter are shown.",
              "type": "string",
              "enum": [
                "always",
                "never",
                "mouseover"
              ],
              "default": "mouseover",
              "defaultDefaultValue": "mouseover",
              "scope": 5,
              "restricted": false
            },
            "editor.showUnused": {
              "description": "Controls fading out of unused code.",
              "type": "boolean",
              "default": true,
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.snippetSuggestions": {
              "enumDescriptions": [
                "Show snippet suggestions on top of other suggestions.",
                "Show snippet suggestions below other suggestions.",
                "Show snippets suggestions with other suggestions.",
                "Do not show snippet suggestions."
              ],
              "description": "Controls whether snippets are shown with other suggestions and how they are sorted.",
              "type": "string",
              "enum": [
                "top",
                "bottom",
                "inline",
                "none"
              ],
              "default": "inline",
              "defaultDefaultValue": "inline",
              "scope": 5,
              "restricted": false
            },
            "editor.smartSelect.selectLeadingAndTrailingWhitespace": {
              "description": "Whether leading and trailing whitespace should always be selected.",
              "default": true,
              "type": "boolean",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.smoothScrolling": {
              "description": "Controls whether the editor will scroll using an animation.",
              "type": "boolean",
              "default": false,
              "defaultDefaultValue": false,
              "scope": 5,
              "restricted": false
            },
            "editor.stickyScroll.enabled": {
              "type": "boolean",
              "default": false,
              "description": "Shows the nested current scopes during the scroll at the top of the editor.",
              "defaultDefaultValue": false,
              "scope": 5,
              "restricted": false
            },
            "editor.stickyScroll.maxLineCount": {
              "type": "number",
              "default": 5,
              "minimum": 1,
              "maximum": 10,
              "description": "Defines the maximum number of sticky lines to show.",
              "defaultDefaultValue": 5,
              "scope": 5,
              "restricted": false
            },
            "editor.stickyTabStops": {
              "description": "Emulate selection behavior of tab characters when using spaces for indentation. Selection will stick to tab stops.",
              "type": "boolean",
              "default": false,
              "defaultDefaultValue": false,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.insertMode": {
              "type": "string",
              "enum": [
                "insert",
                "replace"
              ],
              "enumDescriptions": [
                "Insert suggestion without overwriting text right of the cursor.",
                "Insert suggestion and overwrite text right of the cursor."
              ],
              "default": "insert",
              "description": "Controls whether words are overwritten when accepting completions. Note that this depends on extensions opting into this feature.",
              "defaultDefaultValue": "insert",
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.filterGraceful": {
              "type": "boolean",
              "default": true,
              "description": "Controls whether filtering and sorting suggestions accounts for small typos.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.localityBonus": {
              "type": "boolean",
              "default": false,
              "description": "Controls whether sorting favors words that appear close to the cursor.",
              "defaultDefaultValue": false,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.shareSuggestSelections": {
              "type": "boolean",
              "default": false,
              "markdownDescription": "Controls whether remembered suggestion selections are shared between multiple workspaces and windows (needs `#editor.suggestSelection#`).",
              "defaultDefaultValue": false,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.selectionMode": {
              "type": "string",
              "enum": [
                "always",
                "never",
                "whenTriggerCharacter",
                "whenQuickSuggestion"
              ],
              "enumDescriptions": [
                "Always select a suggestion when automatically triggering IntelliSense.",
                "Never select a suggestion when automatically triggering IntelliSense.",
                "Select a suggestion only when triggering IntelliSense from a trigger character.",
                "Select a suggestion only when triggering IntelliSense as you type."
              ],
              "default": "always",
              "markdownDescription": "Controls whether a suggestion is selected when the widget shows. Note that this only applies to automatically triggered suggestions (`#editor.quickSuggestions#` and `#editor.suggestOnTriggerCharacters#`) and that a suggestion is always selected when explicitly invoked, e.g via `Ctrl+Space`.",
              "defaultDefaultValue": "always",
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.snippetsPreventQuickSuggestions": {
              "type": "boolean",
              "default": true,
              "description": "Controls whether an active snippet prevents quick suggestions.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.showIcons": {
              "type": "boolean",
              "default": true,
              "description": "Controls whether to show or hide icons in suggestions.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.showStatusBar": {
              "type": "boolean",
              "default": false,
              "description": "Controls the visibility of the status bar at the bottom of the suggest widget.",
              "defaultDefaultValue": false,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.preview": {
              "type": "boolean",
              "default": false,
              "description": "Controls whether to preview the suggestion outcome in the editor.",
              "defaultDefaultValue": false,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.showInlineDetails": {
              "type": "boolean",
              "default": true,
              "description": "Controls whether suggest details show inline with the label or only in the details widget.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.maxVisibleSuggestions": {
              "type": "number",
              "deprecationMessage": "This setting is deprecated. The suggest widget can now be resized.",
              "default": 0,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.filteredTypes": {
              "type": "object",
              "deprecationMessage": "This setting is deprecated, please use separate settings like 'editor.suggest.showKeywords' or 'editor.suggest.showSnippets' instead.",
              "default": {},
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.showMethods": {
              "type": "boolean",
              "default": true,
              "markdownDescription": "When enabled IntelliSense shows `method`-suggestions.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.showFunctions": {
              "type": "boolean",
              "default": true,
              "markdownDescription": "When enabled IntelliSense shows `function`-suggestions.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.showConstructors": {
              "type": "boolean",
              "default": true,
              "markdownDescription": "When enabled IntelliSense shows `constructor`-suggestions.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.showDeprecated": {
              "type": "boolean",
              "default": true,
              "markdownDescription": "When enabled IntelliSense shows `deprecated`-suggestions.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.matchOnWordStartOnly": {
              "type": "boolean",
              "default": true,
              "markdownDescription": "When enabled IntelliSense filtering requires that the first character matches on a word start. For example, `c` on `Console` or `WebContext` but _not_ on `description`. When disabled IntelliSense will show more results but still sorts them by match quality.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.showFields": {
              "type": "boolean",
              "default": true,
              "markdownDescription": "When enabled IntelliSense shows `field`-suggestions.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.showVariables": {
              "type": "boolean",
              "default": true,
              "markdownDescription": "When enabled IntelliSense shows `variable`-suggestions.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.showClasses": {
              "type": "boolean",
              "default": true,
              "markdownDescription": "When enabled IntelliSense shows `class`-suggestions.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.showStructs": {
              "type": "boolean",
              "default": true,
              "markdownDescription": "When enabled IntelliSense shows `struct`-suggestions.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.showInterfaces": {
              "type": "boolean",
              "default": true,
              "markdownDescription": "When enabled IntelliSense shows `interface`-suggestions.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.showModules": {
              "type": "boolean",
              "default": true,
              "markdownDescription": "When enabled IntelliSense shows `module`-suggestions.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.showProperties": {
              "type": "boolean",
              "default": true,
              "markdownDescription": "When enabled IntelliSense shows `property`-suggestions.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.showEvents": {
              "type": "boolean",
              "default": true,
              "markdownDescription": "When enabled IntelliSense shows `event`-suggestions.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.showOperators": {
              "type": "boolean",
              "default": true,
              "markdownDescription": "When enabled IntelliSense shows `operator`-suggestions.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.showUnits": {
              "type": "boolean",
              "default": true,
              "markdownDescription": "When enabled IntelliSense shows `unit`-suggestions.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.showValues": {
              "type": "boolean",
              "default": true,
              "markdownDescription": "When enabled IntelliSense shows `value`-suggestions.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.showConstants": {
              "type": "boolean",
              "default": true,
              "markdownDescription": "When enabled IntelliSense shows `constant`-suggestions.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.showEnums": {
              "type": "boolean",
              "default": true,
              "markdownDescription": "When enabled IntelliSense shows `enum`-suggestions.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.showEnumMembers": {
              "type": "boolean",
              "default": true,
              "markdownDescription": "When enabled IntelliSense shows `enumMember`-suggestions.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.showKeywords": {
              "type": "boolean",
              "default": true,
              "markdownDescription": "When enabled IntelliSense shows `keyword`-suggestions.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.showWords": {
              "type": "boolean",
              "default": true,
              "markdownDescription": "When enabled IntelliSense shows `text`-suggestions.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.showColors": {
              "type": "boolean",
              "default": true,
              "markdownDescription": "When enabled IntelliSense shows `color`-suggestions.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.showFiles": {
              "type": "boolean",
              "default": true,
              "markdownDescription": "When enabled IntelliSense shows `file`-suggestions.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.showReferences": {
              "type": "boolean",
              "default": true,
              "markdownDescription": "When enabled IntelliSense shows `reference`-suggestions.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.showCustomcolors": {
              "type": "boolean",
              "default": true,
              "markdownDescription": "When enabled IntelliSense shows `customcolor`-suggestions.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.showFolders": {
              "type": "boolean",
              "default": true,
              "markdownDescription": "When enabled IntelliSense shows `folder`-suggestions.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.showTypeParameters": {
              "type": "boolean",
              "default": true,
              "markdownDescription": "When enabled IntelliSense shows `typeParameter`-suggestions.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.showSnippets": {
              "type": "boolean",
              "default": true,
              "markdownDescription": "When enabled IntelliSense shows `snippet`-suggestions.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.showUsers": {
              "type": "boolean",
              "default": true,
              "markdownDescription": "When enabled IntelliSense shows `user`-suggestions.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.showIssues": {
              "type": "boolean",
              "default": true,
              "markdownDescription": "When enabled IntelliSense shows `issues`-suggestions.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggestFontSize": {
              "markdownDescription": "Font size for the suggest widget. When set to `0`, the value of `#editor.fontSize#` is used.",
              "type": "integer",
              "default": 0,
              "minimum": 0,
              "maximum": 1000,
              "defaultDefaultValue": 0,
              "scope": 5,
              "restricted": false
            },
            "editor.suggestLineHeight": {
              "markdownDescription": "Line height for the suggest widget. When set to `0`, the value of `#editor.lineHeight#` is used. The minimum value is 8.",
              "type": "integer",
              "default": 0,
              "minimum": 0,
              "maximum": 1000,
              "defaultDefaultValue": 0,
              "scope": 5,
              "restricted": false
            },
            "editor.suggestOnTriggerCharacters": {
              "description": "Controls whether suggestions should automatically show up when typing trigger characters.",
              "type": "boolean",
              "default": true,
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggestSelection": {
              "markdownEnumDescriptions": [
                "Always select the first suggestion.",
                "Select recent suggestions unless further typing selects one, e.g. `console.| -> console.log` because `log` has been completed recently.",
                "Select suggestions based on previous prefixes that have completed those suggestions, e.g. `co -> console` and `con -> const`."
              ],
              "description": "Controls how suggestions are pre-selected when showing the suggest list.",
              "type": "string",
              "enum": [
                "first",
                "recentlyUsed",
                "recentlyUsedByPrefix"
              ],
              "default": "first",
              "defaultDefaultValue": "first",
              "scope": 5,
              "restricted": false
            },
            "editor.tabCompletion": {
              "enumDescriptions": [
                "Tab complete will insert the best matching suggestion when pressing tab.",
                "Disable tab completions.",
                "Tab complete snippets when their prefix match. Works best when 'quickSuggestions' aren't enabled."
              ],
              "description": "Enables tab completions.",
              "type": "string",
              "enum": [
                "on",
                "off",
                "onlySnippets"
              ],
              "default": "off",
              "defaultDefaultValue": "off",
              "scope": 5,
              "restricted": false
            },
            "editor.unicodeHighlight.nonBasicASCII": {
              "restricted": true,
              "type": [
                "boolean",
                "string"
              ],
              "enum": [
                true,
                false,
                "inUntrustedWorkspace"
              ],
              "default": "inUntrustedWorkspace",
              "description": "Controls whether all non-basic ASCII characters are highlighted. Only characters between U+0020 and U+007E, tab, line-feed and carriage-return are considered basic ASCII.",
              "defaultDefaultValue": "inUntrustedWorkspace",
              "scope": 5
            },
            "editor.unicodeHighlight.invisibleCharacters": {
              "restricted": true,
              "type": "boolean",
              "default": true,
              "description": "Controls whether characters that just reserve space or have no width at all are highlighted.",
              "defaultDefaultValue": true,
              "scope": 5
            },
            "editor.unicodeHighlight.ambiguousCharacters": {
              "restricted": true,
              "type": "boolean",
              "default": true,
              "description": "Controls whether characters are highlighted that can be confused with basic ASCII characters, except those that are common in the current user locale.",
              "defaultDefaultValue": true,
              "scope": 5
            },
            "editor.unicodeHighlight.includeComments": {
              "restricted": true,
              "type": [
                "boolean",
                "string"
              ],
              "enum": [
                true,
                false,
                "inUntrustedWorkspace"
              ],
              "default": "inUntrustedWorkspace",
              "description": "Controls whether characters in comments should also be subject to Unicode highlighting.",
              "defaultDefaultValue": "inUntrustedWorkspace",
              "scope": 5
            },
            "editor.unicodeHighlight.includeStrings": {
              "restricted": true,
              "type": [
                "boolean",
                "string"
              ],
              "enum": [
                true,
                false,
                "inUntrustedWorkspace"
              ],
              "default": true,
              "description": "Controls whether characters in strings should also be subject to Unicode highlighting.",
              "defaultDefaultValue": true,
              "scope": 5
            },
            "editor.unicodeHighlight.allowedCharacters": {
              "restricted": true,
              "type": "object",
              "default": {},
              "description": "Defines allowed characters that are not being highlighted.",
              "additionalProperties": {
                "type": "boolean"
              },
              "defaultDefaultValue": {},
              "scope": 5
            },
            "editor.unicodeHighlight.allowedLocales": {
              "restricted": true,
              "type": "object",
              "additionalProperties": {
                "type": "boolean"
              },
              "default": {
                "_os": true,
                "_vscode": true
              },
              "description": "Unicode characters that are common in allowed locales are not being highlighted.",
              "defaultDefaultValue": {
                "_os": true,
                "_vscode": true
              },
              "scope": 5
            },
            "editor.unusualLineTerminators": {
              "enumDescriptions": [
                "Unusual line terminators are automatically removed.",
                "Unusual line terminators are ignored.",
                "Unusual line terminators prompt to be removed."
              ],
              "description": "Remove unusual line terminators that might cause problems.",
              "type": "string",
              "enum": [
                "auto",
                "off",
                "prompt"
              ],
              "default": "prompt",
              "defaultDefaultValue": "prompt",
              "scope": 5,
              "restricted": false
            },
            "editor.useTabStops": {
              "description": "Inserting and deleting whitespace follows tab stops.",
              "type": "boolean",
              "default": true,
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.wordBreak": {
              "markdownEnumDescriptions": [
                "Use the default line break rule.",
                "Word breaks should not be used for Chinese/Japanese/Korean (CJK) text. Non-CJK text behavior is the same as for normal."
              ],
              "description": "Controls the word break rules used for Chinese/Japanese/Korean (CJK) text.",
              "type": "string",
              "enum": [
                "normal",
                "keepAll"
              ],
              "default": "normal",
              "defaultDefaultValue": "normal",
              "scope": 5,
              "restricted": false
            },
            "editor.wordSeparators": {
              "description": "Characters that will be used as word separators when doing word related navigations or operations.",
              "type": "string",
              "default": "`~!@#$%^&*()-=+[{]}\\|;:'\",.<>/?",
              "defaultDefaultValue": "`~!@#$%^&*()-=+[{]}\\|;:'\",.<>/?",
              "scope": 5,
              "restricted": false
            },
            "editor.wordWrap": {
              "markdownEnumDescriptions": [
                "Lines will never wrap.",
                "Lines will wrap at the viewport width.",
                "Lines will wrap at `#editor.wordWrapColumn#`.",
                "Lines will wrap at the minimum of viewport and `#editor.wordWrapColumn#`."
              ],
              "description": "Controls how lines should wrap.",
              "type": "string",
              "enum": [
                "off",
                "on",
                "wordWrapColumn",
                "bounded"
              ],
              "default": "off",
              "defaultDefaultValue": "off",
              "scope": 5,
              "restricted": false
            },
            "editor.wordWrapColumn": {
              "markdownDescription": "Controls the wrapping column of the editor when `#editor.wordWrap#` is `wordWrapColumn` or `bounded`.",
              "type": "integer",
              "default": 80,
              "minimum": 1,
              "maximum": 1073741824,
              "defaultDefaultValue": 80,
              "scope": 5,
              "restricted": false
            },
            "editor.wrappingIndent": {
              "type": "string",
              "enum": [
                "none",
                "same",
                "indent",
                "deepIndent"
              ],
              "enumDescriptions": [
                "No indentation. Wrapped lines begin at column 1.",
                "Wrapped lines get the same indentation as the parent.",
                "Wrapped lines get +1 indentation toward the parent.",
                "Wrapped lines get +2 indentation toward the parent."
              ],
              "description": "Controls the indentation of wrapped lines.",
              "default": "same",
              "defaultDefaultValue": "same",
              "scope": 5,
              "restricted": false
            },
            "editor.wrappingStrategy": {
              "enumDescriptions": [
                "Assumes that all characters are of the same width. This is a fast algorithm that works correctly for monospace fonts and certain scripts (like Latin characters) where glyphs are of equal width.",
                "Delegates wrapping points computation to the browser. This is a slow algorithm, that might cause freezes for large files, but it works correctly in all cases."
              ],
              "type": "string",
              "enum": [
                "simple",
                "advanced"
              ],
              "default": "simple",
              "description": "Controls the algorithm that computes wrapping points. Note that when in accessibility mode, advanced will be used for the best experience.",
              "defaultDefaultValue": "simple",
              "scope": 5,
              "restricted": false
            },
            "editor.showDeprecated": {
              "description": "Controls strikethrough deprecated variables.",
              "type": "boolean",
              "default": true,
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.inlayHints.enabled": {
              "type": "string",
              "default": "on",
              "description": "Enables the inlay hints in the editor.",
              "enum": [
                "on",
                "onUnlessPressed",
                "offUnlessPressed",
                "off"
              ],
              "markdownEnumDescriptions": [
                "Inlay hints are enabled",
                "Inlay hints are showing by default and hide when holding Ctrl+Option",
                "Inlay hints are hidden by default and show when holding Ctrl+Option",
                "Inlay hints are disabled"
              ],
              "defaultDefaultValue": "on",
              "scope": 5,
              "restricted": false
            },
            "editor.inlayHints.fontSize": {
              "type": "number",
              "default": 0,
              "markdownDescription": "Controls font size of inlay hints in the editor. As default the `#editor.fontSize#` is used when the configured value is less than `5` or greater than the editor font size.",
              "defaultDefaultValue": 0,
              "scope": 5,
              "restricted": false
            },
            "editor.inlayHints.fontFamily": {
              "type": "string",
              "default": "",
              "markdownDescription": "Controls font family of inlay hints in the editor. When set to empty, the `#editor.fontFamily#` is used.",
              "defaultDefaultValue": "",
              "scope": 5,
              "restricted": false
            },
            "editor.inlayHints.padding": {
              "type": "boolean",
              "default": false,
              "description": "Enables the padding around the inlay hints in the editor.",
              "defaultDefaultValue": false,
              "scope": 5,
              "restricted": false
            },
            "editor.tabFocusMode": {
              "markdownDescription": "Controls whether the editor receives tabs or defers them to the workbench for navigation.",
              "type": "boolean",
              "default": false,
              "defaultDefaultValue": false,
              "scope": 5,
              "restricted": false
            }
          }
        }
      ],
      "tags": [
        "notebookLayout"
      ],
      "defaultDefaultValue": {},
      "scope": 3,
      "restricted": false
    },
    "interactiveWindow.collapseCellInputCode": {
      "markdownDescription": "Controls whether code cells in the interactive window are collapsed by default.",
      "type": "string",
      "enum": [
        "always",
        "never",
        "fromEditor"
      ],
      "default": "fromEditor",
      "defaultDefaultValue": "fromEditor",
      "scope": 3,
      "restricted": false
    },
    "notebook.outputLineHeight": {
      "markdownDescription": "Line height of the output text for notebook cells.\n - When set to 0, editor line height is used.\n - Values between 0 and 8 will be used as a multiplier with the font size.\n - Values greater than or equal to 8 will be used as effective values.",
      "type": "number",
      "default": 0,
      "tags": [
        "notebookLayout"
      ],
      "defaultDefaultValue": 0,
      "scope": 3,
      "restricted": false
    },
    "notebook.outputFontSize": {
      "markdownDescription": "Font size for the output text for notebook cells. When set to 0, `#editor.fontSize#` is used.",
      "type": "number",
      "default": 0,
      "tags": [
        "notebookLayout"
      ],
      "defaultDefaultValue": 0,
      "scope": 3,
      "restricted": false
    },
    "notebook.outputFontFamily": {
      "markdownDescription": "The font family for the output text for notebook cells. When set to empty, the `#editor.fontFamily#` is used.",
      "type": "string",
      "tags": [
        "notebookLayout"
      ],
      "default": "",
      "scope": 3,
      "restricted": false
    },
    "notebook.kernelPicker.type": {
      "markdownDescription": "Controls the type of kernel picker to use.",
      "type": "string",
      "enum": [
        "all",
        "mru"
      ],
      "enumDescriptions": [
        "Show all kernels.",
        "Experiment: show recently used kernels."
      ],
      "tags": [
        "notebookLayout"
      ],
      "default": "mru",
      "defaultDefaultValue": "mru",
      "scope": 3,
      "restricted": false
    },
    "notebook.experimental.outputScrolling": {
      "markdownDescription": "Use a scrollable region for notebook output when longer than the limit",
      "type": "boolean",
      "tags": [
        "notebookLayout"
      ],
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "notebook.output.wordWrap": {
      "markdownDescription": "Controls whether the lines in output should wrap.",
      "type": "boolean",
      "tags": [
        "notebookLayout"
      ],
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "debug.allowBreakpointsEverywhere": {
      "type": "boolean",
      "description": "Allow setting breakpoints in any file.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "debug.openExplorerOnEnd": {
      "type": "boolean",
      "description": "Automatically open the explorer view at the end of a debug session.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "debug.inlineValues": {
      "type": "string",
      "enum": [
        "on",
        "off",
        "auto"
      ],
      "description": "Show variable values inline in editor while debugging.",
      "enumDescriptions": [
        "Always show variable values inline in editor while debugging.",
        "Never show variable values inline in editor while debugging.",
        "Show variable values inline in editor while debugging when the language supports inline value locations."
      ],
      "default": "auto",
      "defaultDefaultValue": "auto",
      "scope": 3,
      "restricted": false
    },
    "debug.toolBarLocation": {
      "enum": [
        "floating",
        "docked",
        "hidden"
      ],
      "markdownDescription": "Controls the location of the debug toolbar. Either `floating` in all views, `docked` in the debug view, or `hidden`.",
      "default": "floating",
      "defaultDefaultValue": "floating",
      "scope": 3,
      "restricted": false
    },
    "debug.showInStatusBar": {
      "enum": [
        "never",
        "always",
        "onFirstSessionStart"
      ],
      "enumDescriptions": [
        "Never show debug in Status bar",
        "Always show debug in Status bar",
        "Show debug in Status bar only after debug was started for the first time"
      ],
      "description": "Controls when the debug Status bar should be visible.",
      "default": "onFirstSessionStart",
      "defaultDefaultValue": "onFirstSessionStart",
      "scope": 3,
      "restricted": false
    },
    "debug.internalConsoleOptions": {
      "enum": [
        "neverOpen",
        "openOnSessionStart",
        "openOnFirstSessionStart"
      ],
      "default": "openOnFirstSessionStart",
      "description": "Controls when the internal Debug Console should open.",
      "defaultDefaultValue": "openOnFirstSessionStart",
      "scope": 3,
      "restricted": false
    },
    "debug.console.closeOnEnd": {
      "type": "boolean",
      "description": "Controls if the Debug Console should be automatically closed when the debug session ends.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "debug.terminal.clearBeforeReusing": {
      "type": "boolean",
      "description": "Before starting a new debug session in an integrated or external terminal, clear the terminal.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "debug.openDebug": {
      "enum": [
        "neverOpen",
        "openOnSessionStart",
        "openOnFirstSessionStart",
        "openOnDebugBreak"
      ],
      "default": "openOnDebugBreak",
      "description": "Controls when the debug view should open.",
      "defaultDefaultValue": "openOnDebugBreak",
      "scope": 3,
      "restricted": false
    },
    "debug.showSubSessionsInToolBar": {
      "type": "boolean",
      "description": "Controls whether the debug sub-sessions are shown in the debug tool bar. When this setting is false the stop command on a sub-session will also stop the parent session.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "debug.console.fontSize": {
      "type": "number",
      "description": "Controls the font size in pixels in the Debug Console.",
      "default": 12,
      "defaultDefaultValue": 12,
      "scope": 3,
      "restricted": false
    },
    "debug.console.fontFamily": {
      "type": "string",
      "description": "Controls the font family in the Debug Console.",
      "default": "default",
      "defaultDefaultValue": "default",
      "scope": 3,
      "restricted": false
    },
    "debug.console.lineHeight": {
      "type": "number",
      "description": "Controls the line height in pixels in the Debug Console. Use 0 to compute the line height from the font size.",
      "default": 0,
      "defaultDefaultValue": 0,
      "scope": 3,
      "restricted": false
    },
    "debug.console.wordWrap": {
      "type": "boolean",
      "description": "Controls if the lines should wrap in the Debug Console.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "debug.console.historySuggestions": {
      "type": "boolean",
      "description": "Controls if the Debug Console should suggest previously typed input.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "debug.console.collapseIdenticalLines": {
      "type": "boolean",
      "description": "Controls if the Debug Console should collapse identical lines and show a number of occurrences with a badge.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "debug.console.acceptSuggestionOnEnter": {
      "enum": [
        "off",
        "on"
      ],
      "description": "Controls whether suggestions should be accepted on Enter in the Debug Console. Enter is also used to evaluate whatever is typed in the Debug Console.",
      "default": "off",
      "defaultDefaultValue": "off",
      "scope": 3,
      "restricted": false
    },
    "launch": {
      "type": "object",
      "description": "Global debug launch configuration. Should be used as an alternative to 'launch.json' that is shared across workspaces.",
      "default": {
        "configurations": [],
        "compounds": []
      },
      "$ref": "vscode://schemas/launch",
      "defaultDefaultValue": {
        "configurations": [],
        "compounds": []
      },
      "scope": 3,
      "restricted": false
    },
    "debug.focusWindowOnBreak": {
      "type": "boolean",
      "description": "Controls whether the workbench window should be focused when the debugger breaks.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "debug.focusEditorOnBreak": {
      "type": "boolean",
      "description": "Controls whether the editor should be focused when the debugger breaks.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "debug.onTaskErrors": {
      "enum": [
        "debugAnyway",
        "showErrors",
        "prompt",
        "abort"
      ],
      "enumDescriptions": [
        "Ignore task errors and start debugging.",
        "Show the Problems view and do not start debugging.",
        "Prompt user.",
        "Cancel debugging."
      ],
      "description": "Controls what to do when errors are encountered after running a preLaunchTask.",
      "default": "prompt",
      "defaultDefaultValue": "prompt",
      "scope": 3,
      "restricted": false
    },
    "debug.showBreakpointsInOverviewRuler": {
      "type": "boolean",
      "description": "Controls whether breakpoints should be shown in the overview ruler.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "debug.showInlineBreakpointCandidates": {
      "type": "boolean",
      "description": "Controls whether inline breakpoints candidate decorations should be shown in the editor while debugging.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "debug.confirmOnExit": {
      "description": "Controls whether to confirm when the window closes if there are active debug sessions.",
      "type": "string",
      "enum": [
        "never",
        "always"
      ],
      "enumDescriptions": [
        "Never confirm.",
        "Always confirm if there are debug sessions."
      ],
      "default": "never",
      "defaultDefaultValue": "never",
      "scope": 3,
      "restricted": false
    },
    "debug.disassemblyView.showSourceCode": {
      "type": "boolean",
      "default": true,
      "description": "Show Source Code in Disassembly View.",
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "debug.autoExpandLazyVariables": {
      "type": "boolean",
      "default": false,
      "description": "Automatically show values for variables that are lazily resolved by the debugger, such as getters.",
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "debug.enableStatusBarColor": {
      "type": "boolean",
      "description": "Color status bar when debugger is active",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "workbench.experimental.cloudChanges.autoStore": {
      "enum": [
        "onShutdown",
        "off"
      ],
      "enumDescriptions": [
        "Automatically store current working changes in the cloud on window close.",
        "Never attempt to automatically store working changes in the cloud."
      ],
      "type": "string",
      "tags": [
        "experimental",
        "usesOnlineServices"
      ],
      "default": "off",
      "markdownDescription": "Controls whether to automatically store available working changes in the cloud for the current workspace. This setting has no effect in the web.",
      "defaultDefaultValue": "off",
      "scope": 3,
      "restricted": false
    },
    "workbench.cloudChanges.autoResume": {
      "enum": [
        "onReload",
        "off"
      ],
      "enumDescriptions": [
        "Automatically resume available working changes from the cloud on window reload.",
        "Never attempt to resume working changes from the cloud."
      ],
      "type": "string",
      "tags": [
        "usesOnlineServices"
      ],
      "default": "onReload",
      "markdownDescription": "Controls whether to automatically resume available working changes stored in the cloud for the current workspace.",
      "defaultDefaultValue": "onReload",
      "scope": 3,
      "restricted": false
    },
    "workbench.cloudChanges.continueOn": {
      "enum": [
        "prompt",
        "off"
      ],
      "enumDescriptions": [
        "Prompt the user to sign in to store working changes in the cloud with Continue Working On.",
        "Do not store working changes in the cloud with Continue Working On unless the user has already turned on Cloud Changes."
      ],
      "type": "string",
      "tags": [
        "usesOnlineServices"
      ],
      "default": "prompt",
      "markdownDescription": "Controls whether to prompt the user to store working changes in the cloud when using Continue Working On.",
      "defaultDefaultValue": "prompt",
      "scope": 3,
      "restricted": false
    },
    "workbench.experimental.editSessions.autoStore": {
      "markdownDeprecationMessage": "This setting is deprecated in favor of `#workbench.experimental.cloudChanges.autoStore#`.",
      "default": null,
      "scope": 3,
      "restricted": false,
      "deprecationMessage": "This setting is deprecated in favor of `#workbench.experimental.cloudChanges.autoStore#`."
    },
    "workbench.editSessions.autoResume": {
      "markdownDeprecationMessage": "This setting is deprecated in favor of `#workbench.cloudChanges.autoResume#`.",
      "default": null,
      "scope": 3,
      "restricted": false,
      "deprecationMessage": "This setting is deprecated in favor of `#workbench.cloudChanges.autoResume#`."
    },
    "workbench.editSessions.continueOn": {
      "markdownDeprecationMessage": "This setting is deprecated in favor of `#workbench.cloudChanges.continueOn#`.",
      "default": null,
      "scope": 3,
      "restricted": false,
      "deprecationMessage": "This setting is deprecated in favor of `#workbench.cloudChanges.continueOn#`."
    },
    "workbench.experimental.cloudChanges.partialMatches.enabled": {
      "type": "boolean",
      "tags": [
        "experimental",
        "usesOnlineServices"
      ],
      "default": false,
      "markdownDescription": "Controls whether to surface cloud changes which partially match the current session.",
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "workbench.experimental.editSessions.partialMatches.enabled": {
      "markdownDeprecationMessage": "This setting is deprecated in favor of `#workbench.experimental.cloudChanges.partialMatches.enabled#`.",
      "default": null,
      "scope": 3,
      "restricted": false,
      "deprecationMessage": "This setting is deprecated in favor of `#workbench.experimental.cloudChanges.partialMatches.enabled#`."
    },
    "files.associations": {
      "type": "object",
      "markdownDescription": "Configure file associations to languages (for example `\"*.extension\": \"html\"`). These have precedence over the default associations of the languages installed.",
      "additionalProperties": {
        "type": "string"
      },
      "default": {},
      "scope": 3,
      "restricted": false
    },
    "files.enableTrash": {
      "type": "boolean",
      "default": true,
      "description": "Moves files/folders to the OS trash (recycle bin on Windows) when deleting. Disabling this will delete files/folders permanently.",
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "files.autoSave": {
      "type": "string",
      "enum": [
        "off",
        "afterDelay",
        "onFocusChange",
        "onWindowChange"
      ],
      "markdownEnumDescriptions": [
        "An editor with changes is never automatically saved.",
        "An editor with changes is automatically saved after the configured `#files.autoSaveDelay#`.",
        "An editor with changes is automatically saved when the editor loses focus.",
        "An editor with changes is automatically saved when the window loses focus."
      ],
      "default": "off",
      "markdownDescription": "Controls [auto save](https://code.visualstudio.com/docs/editor/codebasics#_save-auto-save) of editors that have unsaved changes.",
      "defaultDefaultValue": "off",
      "scope": 3,
      "restricted": false
    },
    "files.autoSaveDelay": {
      "type": "number",
      "default": 1000,
      "minimum": 0,
      "markdownDescription": "Controls the delay in milliseconds after which an editor with unsaved changes is saved automatically. Only applies when `#files.autoSave#` is set to `afterDelay`.",
      "defaultDefaultValue": 1000,
      "scope": 3,
      "restricted": false
    },
    "files.defaultLanguage": {
      "type": "string",
      "markdownDescription": "The default language identifier that is assigned to new files. If configured to `${activeEditorLanguage}`, will use the language identifier of the currently active text editor if any.",
      "default": "",
      "scope": 3,
      "restricted": false
    },
    "files.maxMemoryForLargeFilesMB": {
      "type": "number",
      "default": 4096,
      "minimum": 0,
      "markdownDescription": "Controls the memory available to VS Code after restart when trying to open large files. Same effect as specifying `--max-memory=NEWSIZE` on the command line.",
      "included": true,
      "defaultDefaultValue": 4096,
      "scope": 3,
      "restricted": false
    },
    "files.restoreUndoStack": {
      "type": "boolean",
      "description": "Restore the undo stack when a file is reopened.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "files.simpleDialog.enable": {
      "type": "boolean",
      "description": "Enables the simple file dialog. The simple file dialog replaces the system file dialog when enabled.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "files.participants.timeout": {
      "type": "number",
      "default": 60000,
      "markdownDescription": "Timeout in milliseconds after which file participants for create, rename, and delete are cancelled. Use `0` to disable participants.",
      "defaultDefaultValue": 60000,
      "scope": 3,
      "restricted": false
    },
    "explorer.openEditors.visible": {
      "type": "number",
      "description": "The maximum number of editors shown in the Open Editors pane. Setting this to 0 hides the Open Editors pane.",
      "default": 9,
      "minimum": 0,
      "defaultDefaultValue": 9,
      "scope": 3,
      "restricted": false
    },
    "explorer.openEditors.minVisible": {
      "type": "number",
      "description": "The minimum number of editor slots shown in the Open Editors pane. If set to 0 the Open Editors pane will dynamically resize based on the number of editors.",
      "default": 0,
      "minimum": 0,
      "defaultDefaultValue": 0,
      "scope": 3,
      "restricted": false
    },
    "explorer.openEditors.sortOrder": {
      "type": "string",
      "enum": [
        "editorOrder",
        "alphabetical",
        "fullPath"
      ],
      "description": "Controls the sorting order of editors in the Open Editors pane.",
      "enumDescriptions": [
        "Editors are ordered in the same order editor tabs are shown.",
        "Editors are ordered alphabetically by tab name inside each editor group.",
        "Editors are ordered alphabetically by full path inside each editor group."
      ],
      "default": "editorOrder",
      "defaultDefaultValue": "editorOrder",
      "scope": 3,
      "restricted": false
    },
    "explorer.autoReveal": {
      "type": [
        "boolean",
        "string"
      ],
      "enum": [
        true,
        false,
        "focusNoScroll"
      ],
      "default": true,
      "enumDescriptions": [
        "Files will be revealed and selected.",
        "Files will not be revealed and selected.",
        "Files will not be scrolled into view, but will still be focused."
      ],
      "description": "Controls whether the Explorer should automatically reveal and select files when opening them.",
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "explorer.autoRevealExclude": {
      "type": "object",
      "markdownDescription": "Configure glob patterns for excluding files and folders from being revealed and selected in the Explorer when they are opened. Read more about glob patterns [here](https://code.visualstudio.com/docs/editor/codebasics#_advanced-search-options).",
      "default": {
        "**/node_modules": true,
        "**/bower_components": true
      },
      "additionalProperties": {
        "anyOf": [
          {
            "type": "boolean",
            "description": "The glob pattern to match file paths against. Set to true or false to enable or disable the pattern."
          },
          {
            "type": "object",
            "properties": {
              "when": {
                "type": "string",
                "pattern": "\\w*\\$\\(basename\\)\\w*",
                "default": "$(basename).ext",
                "description": "Additional check on the siblings of a matching file. Use $(basename) as variable for the matching file name."
              }
            }
          }
        ]
      },
      "defaultDefaultValue": {
        "**/node_modules": true,
        "**/bower_components": true
      },
      "scope": 3,
      "restricted": false
    },
    "explorer.enableDragAndDrop": {
      "type": "boolean",
      "description": "Controls whether the Explorer should allow to move files and folders via drag and drop. This setting only effects drag and drop from inside the Explorer.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "explorer.confirmDragAndDrop": {
      "type": "boolean",
      "description": "Controls whether the Explorer should ask for confirmation to move files and folders via drag and drop.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "explorer.confirmDelete": {
      "type": "boolean",
      "description": "Controls whether the Explorer should ask for confirmation when deleting a file via the trash.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "explorer.enableUndo": {
      "type": "boolean",
      "description": "Controls whether the Explorer should support undoing file and folder operations.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "explorer.confirmUndo": {
      "type": "string",
      "enum": [
        "verbose",
        "default",
        "light"
      ],
      "description": "Controls whether the Explorer should ask for confirmation when undoing.",
      "default": "default",
      "enumDescriptions": [
        "Explorer will prompt before all undo operations.",
        "Explorer will prompt before destructive undo operations.",
        "Explorer will not prompt before undo operations when focused."
      ],
      "defaultDefaultValue": "default",
      "scope": 3,
      "restricted": false
    },
    "explorer.expandSingleFolderWorkspaces": {
      "type": "boolean",
      "description": "Controls whether the Explorer should expand multi-root workspaces containing only one folder during initialization",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "explorer.sortOrder": {
      "type": "string",
      "enum": [
        "default",
        "mixed",
        "filesFirst",
        "type",
        "modified",
        "foldersNestsFiles"
      ],
      "default": "default",
      "enumDescriptions": [
        "Files and folders are sorted by their names. Folders are displayed before files.",
        "Files and folders are sorted by their names. Files are interwoven with folders.",
        "Files and folders are sorted by their names. Files are displayed before folders.",
        "Files and folders are grouped by extension type then sorted by their names. Folders are displayed before files.",
        "Files and folders are sorted by last modified date in descending order. Folders are displayed before files.",
        "Files and folders are sorted by their names. Folders are displayed before files. Files with nested children are displayed before other files."
      ],
      "markdownDescription": "Controls the property-based sorting of files and folders in the Explorer. When `#explorer.fileNesting.enabled#` is enabled, also controls sorting of nested files.",
      "defaultDefaultValue": "default",
      "scope": 3,
      "restricted": false
    },
    "explorer.sortOrderLexicographicOptions": {
      "type": "string",
      "enum": [
        "default",
        "upper",
        "lower",
        "unicode"
      ],
      "default": "default",
      "enumDescriptions": [
        "Uppercase and lowercase names are mixed together.",
        "Uppercase names are grouped together before lowercase names.",
        "Lowercase names are grouped together before uppercase names.",
        "Names are sorted in Unicode order."
      ],
      "description": "Controls the lexicographic sorting of file and folder names in the Explorer.",
      "defaultDefaultValue": "default",
      "scope": 3,
      "restricted": false
    },
    "explorer.decorations.colors": {
      "type": "boolean",
      "description": "Controls whether file decorations should use colors.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "explorer.decorations.badges": {
      "type": "boolean",
      "description": "Controls whether file decorations should use badges.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "explorer.incrementalNaming": {
      "type": "string",
      "enum": [
        "simple",
        "smart",
        "disabled"
      ],
      "enumDescriptions": [
        "Appends the word \"copy\" at the end of the duplicated name potentially followed by a number.",
        "Adds a number at the end of the duplicated name. If some number is already part of the name, tries to increase that number.",
        "Disables incremental naming. If two files with the same name exist you will be prompted to overwrite the existing file."
      ],
      "description": "Controls what naming strategy to use when a giving a new name to a duplicated Explorer item on paste.",
      "default": "simple",
      "defaultDefaultValue": "simple",
      "scope": 3,
      "restricted": false
    },
    "explorer.compactFolders": {
      "type": "boolean",
      "description": "Controls whether the Explorer should render folders in a compact form. In such a form, single child folders will be compressed in a combined tree element. Useful for Java package structures, for example.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "explorer.copyRelativePathSeparator": {
      "type": "string",
      "enum": [
        "/",
        "\\",
        "auto"
      ],
      "enumDescriptions": [
        "Use slash as path separation character.",
        "Use backslash as path separation character.",
        "Uses operating system specific path separation character."
      ],
      "description": "The path separation character used when copying relative file paths.",
      "default": "auto",
      "defaultDefaultValue": "auto",
      "scope": 3,
      "restricted": false
    },
    "explorer.fileNesting.expand": {
      "type": "boolean",
      "markdownDescription": "Controls whether file nests are automatically expanded. `#explorer.fileNesting.enabled#` must be set for this to take effect.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "problems.autoReveal": {
      "description": "Controls whether Problems view should automatically reveal files when opening them.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "problems.defaultViewMode": {
      "description": "Controls the default view mode of the Problems view.",
      "type": "string",
      "default": "tree",
      "enum": [
        "table",
        "tree"
      ],
      "defaultDefaultValue": "tree",
      "scope": 3,
      "restricted": false
    },
    "problems.showCurrentInStatus": {
      "description": "When enabled shows the current problem in the status bar.",
      "type": "boolean",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "problems.sortOrder": {
      "description": "Controls the order in which problems are navigated.",
      "type": "string",
      "default": "severity",
      "enum": [
        "severity",
        "position"
      ],
      "enumDescriptions": [
        "Navigate problems ordered by severity",
        "Navigate problems ordered by position"
      ],
      "defaultDefaultValue": "severity",
      "scope": 3,
      "restricted": false
    },
    "outline.icons": {
      "description": "Render Outline elements with icons.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "outline.problems.enabled": {
      "description": "Show errors and warnings on Outline elements.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "outline.problems.colors": {
      "description": "Use colors for errors and warnings on Outline elements.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "outline.problems.badges": {
      "description": "Use badges for errors and warnings on Outline elements.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "output.smartScroll.enabled": {
      "type": "boolean",
      "description": "Enable/disable the ability of smart scrolling in the output view. Smart scrolling allows you to lock scrolling automatically when you click in the output view and unlocks when you click in the last line.",
      "default": true,
      "scope": 3,
      "tags": [
        "output"
      ],
      "defaultDefaultValue": true,
      "restricted": false
    },
    "search.mode": {
      "type": "string",
      "enum": [
        "view",
        "reuseEditor",
        "newEditor"
      ],
      "default": "view",
      "markdownDescription": "Controls where new `Search: Find in Files` and `Find in Folder` operations occur: either in the search view, or in a search editor.",
      "enumDescriptions": [
        "Search in the search view, either in the panel or side bars.",
        "Search in an existing search editor if present, otherwise in a new search editor.",
        "Search in a new search editor."
      ],
      "defaultDefaultValue": "view",
      "scope": 3,
      "restricted": false
    },
    "search.useRipgrep": {
      "type": "boolean",
      "description": "This setting is deprecated and now falls back on \"search.usePCRE2\".",
      "deprecationMessage": "Deprecated. Consider \"search.usePCRE2\" for advanced regex feature support.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "search.maintainFileSearchCache": {
      "type": "boolean",
      "deprecationMessage": "The search cache is kept in the extension host which never shuts down, so this setting is no longer needed.",
      "description": "When enabled, the searchService process will be kept alive instead of being shut down after an hour of inactivity. This will keep the file search cache in memory.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "search.quickOpen.includeSymbols": {
      "type": "boolean",
      "description": "Whether to include results from a global symbol search in the file results for Quick Open.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "search.quickOpen.includeHistory": {
      "type": "boolean",
      "description": "Whether to include results from recently opened files in the file results for Quick Open.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "search.quickOpen.history.filterSortOrder": {
      "type": "string",
      "enum": [
        "default",
        "recency"
      ],
      "default": "default",
      "enumDescriptions": [
        "History entries are sorted by relevance based on the filter value used. More relevant entries appear first.",
        "History entries are sorted by recency. More recently opened entries appear first."
      ],
      "description": "Controls sorting order of editor history in quick open when filtering.",
      "defaultDefaultValue": "default",
      "scope": 3,
      "restricted": false
    },
    "search.followSymlinks": {
      "type": "boolean",
      "description": "Controls whether to follow symlinks while searching.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "search.smartCase": {
      "type": "boolean",
      "description": "Search case-insensitively if the pattern is all lowercase, otherwise, search case-sensitively.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "search.globalFindClipboard": {
      "type": "boolean",
      "default": false,
      "description": "Controls whether the search view should read or modify the shared find clipboard on macOS.",
      "included": true,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "search.location": {
      "type": "string",
      "enum": [
        "sidebar",
        "panel"
      ],
      "default": "sidebar",
      "description": "Controls whether the search will be shown as a view in the sidebar or as a panel in the panel area for more horizontal space.",
      "deprecationMessage": "This setting is deprecated. You can drag the search icon to a new location instead.",
      "defaultDefaultValue": "sidebar",
      "scope": 3,
      "restricted": false
    },
    "search.maxResults": {
      "type": [
        "number",
        "null"
      ],
      "default": 20000,
      "markdownDescription": "Controls the maximum number of search results, this can be set to `null` (empty) to return unlimited results.",
      "defaultDefaultValue": 20000,
      "scope": 3,
      "restricted": false
    },
    "search.collapseResults": {
      "type": "string",
      "enum": [
        "auto",
        "alwaysCollapse",
        "alwaysExpand"
      ],
      "enumDescriptions": [
        "Files with less than 10 results are expanded. Others are collapsed.",
        "",
        ""
      ],
      "default": "alwaysExpand",
      "description": "Controls whether the search results will be collapsed or expanded.",
      "defaultDefaultValue": "alwaysExpand",
      "scope": 3,
      "restricted": false
    },
    "search.useReplacePreview": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether to open Replace Preview when selecting or replacing a match.",
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "search.showLineNumbers": {
      "type": "boolean",
      "default": false,
      "description": "Controls whether to show line numbers for search results.",
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "search.usePCRE2": {
      "type": "boolean",
      "default": false,
      "description": "Whether to use the PCRE2 regex engine in text search. This enables using some advanced regex features like lookahead and backreferences. However, not all PCRE2 features are supported - only features that are also supported by JavaScript.",
      "deprecationMessage": "Deprecated. PCRE2 will be used automatically when using regex features that are only supported by PCRE2.",
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "search.actionsPosition": {
      "type": "string",
      "enum": [
        "auto",
        "right"
      ],
      "enumDescriptions": [
        "Position the actionbar to the right when the search view is narrow, and immediately after the content when the search view is wide.",
        "Always position the actionbar to the right."
      ],
      "default": "right",
      "description": "Controls the positioning of the actionbar on rows in the search view.",
      "defaultDefaultValue": "right",
      "scope": 3,
      "restricted": false
    },
    "search.searchOnType": {
      "type": "boolean",
      "default": true,
      "description": "Search all files as you type.",
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "search.seedWithNearestWord": {
      "type": "boolean",
      "default": false,
      "description": "Enable seeding search from the word nearest the cursor when the active editor has no selection.",
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "search.seedOnFocus": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Update the search query to the editor's selected text when focusing the search view. This happens either on click or when triggering the `workbench.views.search.focus` command.",
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "search.searchOnTypeDebouncePeriod": {
      "type": "number",
      "default": 300,
      "markdownDescription": "When `#search.searchOnType#` is enabled, controls the timeout in milliseconds between a character being typed and the search starting. Has no effect when `#search.searchOnType#` is disabled.",
      "defaultDefaultValue": 300,
      "scope": 3,
      "restricted": false
    },
    "search.searchEditor.doubleClickBehaviour": {
      "type": "string",
      "enum": [
        "selectWord",
        "goToLocation",
        "openLocationToSide"
      ],
      "default": "goToLocation",
      "enumDescriptions": [
        "Double-clicking selects the word under the cursor.",
        "Double-clicking opens the result in the active editor group.",
        "Double-clicking opens the result in the editor group to the side, creating one if it does not yet exist."
      ],
      "markdownDescription": "Configure effect of double-clicking a result in a search editor.",
      "defaultDefaultValue": "goToLocation",
      "scope": 3,
      "restricted": false
    },
    "search.searchEditor.reusePriorSearchConfiguration": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "When enabled, new Search Editors will reuse the includes, excludes, and flags of the previously opened Search Editor.",
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "search.searchEditor.defaultNumberOfContextLines": {
      "type": [
        "number",
        "null"
      ],
      "default": 1,
      "markdownDescription": "The default number of surrounding context lines to use when creating new Search Editors. If using `#search.searchEditor.reusePriorSearchConfiguration#`, this can be set to `null` (empty) to use the prior Search Editor's configuration.",
      "defaultDefaultValue": 1,
      "scope": 3,
      "restricted": false
    },
    "search.sortOrder": {
      "type": "string",
      "enum": [
        "default",
        "fileNames",
        "type",
        "modified",
        "countDescending",
        "countAscending"
      ],
      "default": "default",
      "enumDescriptions": [
        "Results are sorted by folder and file names, in alphabetical order.",
        "Results are sorted by file names ignoring folder order, in alphabetical order.",
        "Results are sorted by file extensions, in alphabetical order.",
        "Results are sorted by file last modified date, in descending order.",
        "Results are sorted by count per file, in descending order.",
        "Results are sorted by count per file, in ascending order."
      ],
      "description": "Controls sorting order of search results.",
      "defaultDefaultValue": "default",
      "scope": 3,
      "restricted": false
    },
    "search.decorations.colors": {
      "type": "boolean",
      "description": "Controls whether search file decorations should use colors.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "search.decorations.badges": {
      "type": "boolean",
      "description": "Controls whether search file decorations should use badges.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "search.defaultViewMode": {
      "type": "string",
      "enum": [
        "tree",
        "list"
      ],
      "default": "list",
      "enumDescriptions": [
        "Shows search results as a tree.",
        "Shows search results as a list."
      ],
      "description": "Controls the default search result view mode.",
      "defaultDefaultValue": "list",
      "scope": 3,
      "restricted": false
    },
    "search.experimental.notebookSearch": {
      "type": "boolean",
      "description": "Controls whether to use the experimental notebook search in the global search. Please refresh your search for changes to this setting to take effect.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "testing.autoRun.delay": {
      "type": "integer",
      "minimum": 0,
      "description": "How long to wait, in milliseconds, after a test is marked as outdated and starting a new run.",
      "default": 1000,
      "defaultDefaultValue": 1000,
      "scope": 3,
      "restricted": false
    },
    "testing.automaticallyOpenPeekView": {
      "description": "Configures when the error Peek view is automatically opened.",
      "enum": [
        "failureAnywhere",
        "failureInVisibleDocument",
        "never"
      ],
      "default": "failureInVisibleDocument",
      "enumDescriptions": [
        "Open automatically no matter where the failure is.",
        "Open automatically when a test fails in a visible document.",
        "Never automatically open."
      ],
      "defaultDefaultValue": "failureInVisibleDocument",
      "scope": 3,
      "restricted": false
    },
    "testing.automaticallyOpenPeekViewDuringAutoRun": {
      "description": "Controls whether to automatically open the Peek view during continuous run mode.",
      "type": "boolean",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "testing.followRunningTest": {
      "description": "Controls whether the running test should be followed in the Test Explorer view.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "testing.defaultGutterClickAction": {
      "description": "Controls the action to take when left-clicking on a test decoration in the gutter.",
      "enum": [
        "run",
        "debug",
        "contextMenu"
      ],
      "enumDescriptions": [
        "Run the test.",
        "Debug the test.",
        "Open the context menu for more options."
      ],
      "default": "run",
      "defaultDefaultValue": "run",
      "scope": 3,
      "restricted": false
    },
    "testing.gutterEnabled": {
      "description": "Controls whether test decorations are shown in the editor gutter.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "testing.saveBeforeTest": {
      "description": "Control whether save all dirty editors before running a test.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "testing.openTesting": {
      "enum": [
        "neverOpen",
        "openOnTestStart",
        "openOnTestFailure"
      ],
      "enumDescriptions": [
        "Never automatically open the testing view",
        "Open the testing view when tests start",
        "Open the testing view on any test failure"
      ],
      "default": "openOnTestStart",
      "description": "Controls when the testing view should open.",
      "defaultDefaultValue": "openOnTestStart",
      "scope": 3,
      "restricted": false
    },
    "testing.alwaysRevealTestOnStateChange": {
      "markdownDescription": "Always reveal the executed test when `#testing.followRunningTest#` is on. If this setting is turned off, only failed tests will be revealed.",
      "type": "boolean",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "timeline.pageSize": {
      "type": [
        "number",
        "null"
      ],
      "default": null,
      "markdownDescription": "The number of items to show in the Timeline view by default and when loading more items. Setting to `null` (the default) will automatically choose a page size based on the visible area of the Timeline view.",
      "defaultDefaultValue": null,
      "scope": 3,
      "restricted": false
    },
    "timeline.pageOnScroll": {
      "type": "boolean",
      "default": false,
      "description": "Experimental. Controls whether the Timeline view will load the next page of items when you scroll to the end of the list.",
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "window.zoomLevel": {
      "type": "number",
      "default": 0,
      "minimum": -5,
      "description": "Adjust the zoom level of the window. The original size is 0 and each increment above (e.g. 1) or below (e.g. -1) represents zooming 20% larger or smaller. You can also enter decimals to adjust the zoom level with a finer granularity.",
      "ignoreSync": true,
      "tags": [
        "accessibility"
      ],
      "defaultDefaultValue": 0,
      "scope": 3,
      "restricted": false
    },
    "window.closeWhenEmpty": {
      "type": "boolean",
      "default": false,
      "description": "Controls whether closing the last editor should also close the window. This setting only applies for windows that do not show folders.",
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "telemetry.enableCrashReporter": {
      "type": "boolean",
      "description": "Enable crash reports to be collected. This helps us improve stability. \nThis option requires restart to take effect.",
      "default": true,
      "tags": [
        "usesOnlineServices",
        "telemetry"
      ],
      "markdownDeprecationMessage": "If this setting is false, no telemetry will be sent regardless of the new setting's value. Deprecated due to being combined into the `#telemetry.telemetryLevel#` setting.",
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false,
      "deprecationMessage": "If this setting is false, no telemetry will be sent regardless of the new setting's value. Deprecated due to being combined into the `#telemetry.telemetryLevel#` setting."
    },
    "keyboard.touchbar.enabled": {
      "type": "boolean",
      "default": true,
      "description": "Enables the macOS touchbar buttons on the keyboard if available.",
      "included": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "keyboard.touchbar.ignored": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "default": [],
      "markdownDescription": "A set of identifiers for entries in the touchbar that should not show up (for example `workbench.action.navigateBack`).",
      "included": true,
      "defaultDefaultValue": [],
      "scope": 3,
      "restricted": false
    },
    "extensions.ignoreRecommendations": {
      "type": "boolean",
      "description": "When enabled, the notifications for extension recommendations will not be shown.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "extensions.showRecommendationsOnlyOnDemand": {
      "type": "boolean",
      "deprecationMessage": "This setting is deprecated. Use extensions.ignoreRecommendations setting to control recommendation notifications. Use Extensions view's visibility actions to hide Recommended view by default.",
      "default": false,
      "tags": [
        "usesOnlineServices"
      ],
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "extensions.closeExtensionDetailsOnViewChange": {
      "type": "boolean",
      "description": "When enabled, editors with extension details will be automatically closed upon navigating away from the Extensions View.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "extensions.webWorker": {
      "type": [
        "boolean",
        "string"
      ],
      "enum": [
        true,
        false,
        "auto"
      ],
      "enumDescriptions": [
        "The Web Worker Extension Host will always be launched.",
        "The Web Worker Extension Host will never be launched.",
        "The Web Worker Extension Host will be launched when a web extension needs it."
      ],
      "description": "Enable web worker extension host.",
      "default": "auto",
      "defaultDefaultValue": "auto",
      "scope": 3,
      "restricted": false
    },
    "extensions.supportVirtualWorkspaces": {
      "type": "object",
      "markdownDescription": "Override the virtual workspaces support of an extension.",
      "patternProperties": {
        "([a-z0-9A-Z][a-z0-9-A-Z]*)\\.([a-z0-9A-Z][a-z0-9-A-Z]*)$": {
          "type": "boolean",
          "default": false
        }
      },
      "additionalProperties": false,
      "default": {},
      "defaultSnippets": [
        {
          "body": {
            "pub.name": false
          }
        }
      ],
      "defaultDefaultValue": {},
      "scope": 3,
      "restricted": false
    },
    "extensions.experimental.affinity": {
      "type": "object",
      "markdownDescription": "Configure an extension to execute in a different extension host process.",
      "patternProperties": {
        "([a-z0-9A-Z][a-z0-9-A-Z]*)\\.([a-z0-9A-Z][a-z0-9-A-Z]*)$": {
          "type": "integer",
          "default": 1
        }
      },
      "additionalProperties": false,
      "default": {},
      "defaultSnippets": [
        {
          "body": {
            "pub.name": 1
          }
        }
      ],
      "defaultDefaultValue": {},
      "scope": 3,
      "restricted": false
    },
    "extensions.experimental.deferredStartupFinishedActivation": {
      "type": "boolean",
      "description": "When enabled, extensions which declare the `onStartupFinished` activation event will be activated after a timeout.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.automationShell.linux": {
      "restricted": true,
      "markdownDescription": "A path that when set will override `terminal.integrated.shell.linux` and ignore `shellArgs` values for automation-related terminal usage like tasks and debug.",
      "type": [
        "string",
        "null"
      ],
      "default": null,
      "markdownDeprecationMessage": "This is deprecated, the new recommended way to configure your automation shell is by creating a terminal automation profile with `#terminal.integrated.automationProfile.linux#`. This will currently take priority over the new automation profile settings but that will change in the future.",
      "defaultDefaultValue": null,
      "scope": 3,
      "deprecationMessage": "This is deprecated, the new recommended way to configure your automation shell is by creating a terminal automation profile with `#terminal.integrated.automationProfile.linux#`. This will currently take priority over the new automation profile settings but that will change in the future."
    },
    "terminal.integrated.automationShell.osx": {
      "restricted": true,
      "markdownDescription": "A path that when set will override `terminal.integrated.shell.osx` and ignore `shellArgs` values for automation-related terminal usage like tasks and debug.",
      "type": [
        "string",
        "null"
      ],
      "default": null,
      "markdownDeprecationMessage": "This is deprecated, the new recommended way to configure your automation shell is by creating a terminal automation profile with `#terminal.integrated.automationProfile.osx#`. This will currently take priority over the new automation profile settings but that will change in the future.",
      "defaultDefaultValue": null,
      "scope": 3,
      "deprecationMessage": "This is deprecated, the new recommended way to configure your automation shell is by creating a terminal automation profile with `#terminal.integrated.automationProfile.osx#`. This will currently take priority over the new automation profile settings but that will change in the future."
    },
    "terminal.integrated.automationShell.windows": {
      "restricted": true,
      "markdownDescription": "A path that when set will override `terminal.integrated.shell.windows` and ignore `shellArgs` values for automation-related terminal usage like tasks and debug.",
      "type": [
        "string",
        "null"
      ],
      "default": null,
      "markdownDeprecationMessage": "This is deprecated, the new recommended way to configure your automation shell is by creating a terminal automation profile with `#terminal.integrated.automationProfile.windows#`. This will currently take priority over the new automation profile settings but that will change in the future.",
      "defaultDefaultValue": null,
      "scope": 3,
      "deprecationMessage": "This is deprecated, the new recommended way to configure your automation shell is by creating a terminal automation profile with `#terminal.integrated.automationProfile.windows#`. This will currently take priority over the new automation profile settings but that will change in the future."
    },
    "terminal.integrated.automationProfile.linux": {
      "restricted": true,
      "markdownDescription": "The terminal profile to use on Linux for automation-related terminal usage like tasks and debug. This setting will currently be ignored if `terminal.integrated.automationShell.linux` (now deprecated) is set.",
      "type": [
        "object",
        "null"
      ],
      "default": null,
      "anyOf": [
        {
          "type": "null"
        },
        {
          "type": "object",
          "required": [
            "path"
          ],
          "properties": {
            "path": {
              "description": "A single path to a shell executable.",
              "type": [
                "string"
              ],
              "items": {
                "type": "string"
              }
            },
            "args": {
              "description": "An optional set of arguments to run the shell executable with.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "overrideName": {
              "description": "Controls whether or not the profile name overrides the auto detected one.",
              "type": "boolean"
            },
            "icon": {
              "description": "A codicon ID to associate with the terminal icon.",
              "type": "string",
              "enum": [
                "add",
                "plus",
                "gist-new",
                "repo-create",
                "lightbulb",
                "light-bulb",
                "repo",
                "repo-delete",
                "gist-fork",
                "repo-forked",
                "git-pull-request",
                "git-pull-request-abandoned",
                "record-keys",
                "keyboard",
                "tag",
                "tag-add",
                "tag-remove",
                "person",
                "person-follow",
                "person-outline",
                "person-filled",
                "git-branch",
                "git-branch-create",
                "git-branch-delete",
                "source-control",
                "mirror",
                "mirror-public",
                "star",
                "star-add",
                "star-delete",
                "star-empty",
                "comment",
                "comment-add",
                "alert",
                "warning",
                "search",
                "search-save",
                "log-out",
                "sign-out",
                "log-in",
                "sign-in",
                "eye",
                "eye-unwatch",
                "eye-watch",
                "circle-filled",
                "primitive-dot",
                "close-dirty",
                "debug-breakpoint",
                "debug-breakpoint-disabled",
                "debug-hint",
                "primitive-square",
                "edit",
                "pencil",
                "info",
                "issue-opened",
                "gist-private",
                "git-fork-private",
                "lock",
                "mirror-private",
                "close",
                "remove-close",
                "x",
                "repo-sync",
                "sync",
                "clone",
                "desktop-download",
                "beaker",
                "microscope",
                "vm",
                "device-desktop",
                "file",
                "file-text",
                "more",
                "ellipsis",
                "kebab-horizontal",
                "mail-reply",
                "reply",
                "organization",
                "organization-filled",
                "organization-outline",
                "new-file",
                "file-add",
                "new-folder",
                "file-directory-create",
                "trash",
                "trashcan",
                "history",
                "clock",
                "folder",
                "file-directory",
                "symbol-folder",
                "logo-github",
                "mark-github",
                "github",
                "terminal",
                "console",
                "repl",
                "zap",
                "symbol-event",
                "error",
                "stop",
                "variable",
                "symbol-variable",
                "array",
                "symbol-array",
                "symbol-module",
                "symbol-package",
                "symbol-namespace",
                "symbol-object",
                "symbol-method",
                "symbol-function",
                "symbol-constructor",
                "symbol-boolean",
                "symbol-null",
                "symbol-numeric",
                "symbol-number",
                "symbol-structure",
                "symbol-struct",
                "symbol-parameter",
                "symbol-type-parameter",
                "symbol-key",
                "symbol-text",
                "symbol-reference",
                "go-to-file",
                "symbol-enum",
                "symbol-value",
                "symbol-ruler",
                "symbol-unit",
                "activate-breakpoints",
                "archive",
                "arrow-both",
                "arrow-down",
                "arrow-left",
                "arrow-right",
                "arrow-small-down",
                "arrow-small-left",
                "arrow-small-right",
                "arrow-small-up",
                "arrow-up",
                "bell",
                "bold",
                "book",
                "bookmark",
                "debug-breakpoint-conditional-unverified",
                "debug-breakpoint-conditional",
                "debug-breakpoint-conditional-disabled",
                "debug-breakpoint-data-unverified",
                "debug-breakpoint-data",
                "debug-breakpoint-data-disabled",
                "debug-breakpoint-log-unverified",
                "debug-breakpoint-log",
                "debug-breakpoint-log-disabled",
                "briefcase",
                "broadcast",
                "browser",
                "bug",
                "calendar",
                "case-sensitive",
                "check",
                "checklist",
                "chevron-down",
                "drop-down-button",
                "chevron-left",
                "chevron-right",
                "chevron-up",
                "chrome-close",
                "chrome-maximize",
                "chrome-minimize",
                "chrome-restore",
                "circle",
                "circle-outline",
                "debug-breakpoint-unverified",
                "circle-slash",
                "circuit-board",
                "clear-all",
                "clippy",
                "close-all",
                "cloud-download",
                "cloud-upload",
                "code",
                "collapse-all",
                "color-mode",
                "comment-discussion",
                "compare-changes",
                "credit-card",
                "dash",
                "dashboard",
                "database",
                "debug-continue",
                "debug-disconnect",
                "debug-pause",
                "debug-restart",
                "debug-start",
                "debug-step-into",
                "debug-step-out",
                "debug-step-over",
                "debug-stop",
                "debug",
                "device-camera-video",
                "device-camera",
                "device-mobile",
                "diff-added",
                "diff-ignored",
                "diff-modified",
                "diff-removed",
                "diff-renamed",
                "diff",
                "discard",
                "editor-layout",
                "empty-window",
                "exclude",
                "extensions",
                "eye-closed",
                "file-binary",
                "file-code",
                "file-media",
                "file-pdf",
                "file-submodule",
                "file-symlink-directory",
                "file-symlink-file",
                "file-zip",
                "files",
                "filter",
                "flame",
                "fold-down",
                "fold-up",
                "fold",
                "folder-active",
                "folder-opened",
                "gear",
                "gift",
                "gist-secret",
                "gist",
                "git-commit",
                "git-compare",
                "git-merge",
                "github-action",
                "github-alt",
                "globe",
                "grabber",
                "graph",
                "gripper",
                "heart",
                "home",
                "horizontal-rule",
                "hubot",
                "inbox",
                "issue-closed",
                "issue-reopened",
                "issues",
                "italic",
                "jersey",
                "json",
                "bracket",
                "kebab-vertical",
                "key",
                "law",
                "lightbulb-autofix",
                "link-external",
                "link",
                "list-ordered",
                "list-unordered",
                "live-share",
                "loading",
                "location",
                "mail-read",
                "mail",
                "markdown",
                "megaphone",
                "mention",
                "milestone",
                "mortar-board",
                "move",
                "multiple-windows",
                "mute",
                "no-newline",
                "note",
                "octoface",
                "open-preview",
                "package",
                "paintcan",
                "pin",
                "play",
                "run",
                "plug",
                "preserve-case",
                "preview",
                "project",
                "pulse",
                "question",
                "quote",
                "radio-tower",
                "reactions",
                "references",
                "refresh",
                "regex",
                "remote-explorer",
                "remote",
                "remove",
                "replace-all",
                "replace",
                "repo-clone",
                "repo-force-push",
                "repo-pull",
                "repo-push",
                "report",
                "request-changes",
                "rocket",
                "root-folder-opened",
                "root-folder",
                "rss",
                "ruby",
                "save-all",
                "save-as",
                "save",
                "screen-full",
                "screen-normal",
                "search-stop",
                "server",
                "settings-gear",
                "settings",
                "shield",
                "smiley",
                "sort-precedence",
                "split-horizontal",
                "split-vertical",
                "squirrel",
                "star-full",
                "star-half",
                "symbol-class",
                "symbol-color",
                "symbol-customcolor",
                "symbol-constant",
                "symbol-enum-member",
                "symbol-field",
                "symbol-file",
                "symbol-interface",
                "symbol-keyword",
                "symbol-misc",
                "symbol-operator",
                "symbol-property",
                "wrench",
                "wrench-subaction",
                "symbol-snippet",
                "tasklist",
                "telescope",
                "text-size",
                "three-bars",
                "thumbsdown",
                "thumbsup",
                "tools",
                "triangle-down",
                "triangle-left",
                "triangle-right",
                "triangle-up",
                "twitter",
                "unfold",
                "unlock",
                "unmute",
                "unverified",
                "verified",
                "versions",
                "vm-active",
                "vm-outline",
                "vm-running",
                "watch",
                "whitespace",
                "whole-word",
                "window",
                "word-wrap",
                "zoom-in",
                "zoom-out",
                "list-filter",
                "list-flat",
                "list-selection",
                "selection",
                "list-tree",
                "debug-breakpoint-function-unverified",
                "debug-breakpoint-function",
                "debug-breakpoint-function-disabled",
                "debug-stackframe-active",
                "circle-small-filled",
                "debug-stackframe-dot",
                "debug-stackframe",
                "debug-stackframe-focused",
                "debug-breakpoint-unsupported",
                "symbol-string",
                "debug-reverse-continue",
                "debug-step-back",
                "debug-restart-frame",
                "call-incoming",
                "call-outgoing",
                "menu",
                "expand-all",
                "feedback",
                "group-by-ref-type",
                "ungroup-by-ref-type",
                "account",
                "bell-dot",
                "debug-console",
                "library",
                "output",
                "run-all",
                "sync-ignored",
                "pinned",
                "github-inverted",
                "debug-alt",
                "server-process",
                "server-environment",
                "pass",
                "stop-circle",
                "play-circle",
                "record",
                "debug-alt-small",
                "vm-connect",
                "cloud",
                "merge",
                "export",
                "graph-left",
                "magnet",
                "notebook",
                "redo",
                "check-all",
                "pinned-dirty",
                "pass-filled",
                "circle-large-filled",
                "circle-large",
                "circle-large-outline",
                "combine",
                "gather",
                "table",
                "variable-group",
                "type-hierarchy",
                "type-hierarchy-sub",
                "type-hierarchy-super",
                "git-pull-request-create",
                "run-above",
                "run-below",
                "notebook-template",
                "debug-rerun",
                "workspace-trusted",
                "workspace-untrusted",
                "workspace-unspecified",
                "terminal-cmd",
                "terminal-debian",
                "terminal-linux",
                "terminal-powershell",
                "terminal-tmux",
                "terminal-ubuntu",
                "terminal-bash",
                "arrow-swap",
                "copy",
                "person-add",
                "filter-filled",
                "wand",
                "debug-line-by-line",
                "inspect",
                "layers",
                "layers-dot",
                "layers-active",
                "compass",
                "compass-dot",
                "compass-active",
                "azure",
                "issue-draft",
                "git-pull-request-closed",
                "git-pull-request-draft",
                "debug-all",
                "debug-coverage",
                "run-errors",
                "folder-library",
                "debug-continue-small",
                "beaker-stop",
                "graph-line",
                "graph-scatter",
                "pie-chart",
                "bracket-dot",
                "bracket-error",
                "lock-small",
                "azure-devops",
                "verified-filled",
                "newline",
                "layout",
                "layout-activitybar-left",
                "layout-activitybar-right",
                "layout-panel-left",
                "layout-panel-center",
                "layout-panel-justify",
                "layout-panel-right",
                "layout-panel",
                "layout-sidebar-left",
                "layout-sidebar-right",
                "layout-statusbar",
                "layout-menubar",
                "layout-centered",
                "layout-sidebar-right-off",
                "layout-panel-off",
                "layout-sidebar-left-off",
                "target",
                "indent",
                "record-small",
                "error-small",
                "arrow-circle-down",
                "arrow-circle-left",
                "arrow-circle-right",
                "arrow-circle-up",
                "heart-filled",
                "map",
                "map-filled",
                "circle-small",
                "bell-slash",
                "bell-slash-dot",
                "comment-unresolved",
                "git-pull-request-go-to-changes",
                "git-pull-request-new-changes",
                "search-fuzzy",
                "comment-draft",
                "dialog-error",
                "dialog-warning",
                "dialog-info",
                "dialog-close",
                "tree-item-expanded",
                "tree-filter-on-type-on",
                "tree-filter-on-type-off",
                "tree-filter-clear",
                "tree-item-loading",
                "menu-selection",
                "menu-submenu",
                "menubar-more",
                "scrollbar-button-left",
                "scrollbar-button-right",
                "scrollbar-button-up",
                "scrollbar-button-down",
                "toolbar-more",
                "quick-input-back"
              ],
              "markdownEnumDescriptions": [
                "$(add)",
                "$(plus)",
                "$(gist-new)",
                "$(repo-create)",
                "$(lightbulb)",
                "$(light-bulb)",
                "$(repo)",
                "$(repo-delete)",
                "$(gist-fork)",
                "$(repo-forked)",
                "$(git-pull-request)",
                "$(git-pull-request-abandoned)",
                "$(record-keys)",
                "$(keyboard)",
                "$(tag)",
                "$(tag-add)",
                "$(tag-remove)",
                "$(person)",
                "$(person-follow)",
                "$(person-outline)",
                "$(person-filled)",
                "$(git-branch)",
                "$(git-branch-create)",
                "$(git-branch-delete)",
                "$(source-control)",
                "$(mirror)",
                "$(mirror-public)",
                "$(star)",
                "$(star-add)",
                "$(star-delete)",
                "$(star-empty)",
                "$(comment)",
                "$(comment-add)",
                "$(alert)",
                "$(warning)",
                "$(search)",
                "$(search-save)",
                "$(log-out)",
                "$(sign-out)",
                "$(log-in)",
                "$(sign-in)",
                "$(eye)",
                "$(eye-unwatch)",
                "$(eye-watch)",
                "$(circle-filled)",
                "$(primitive-dot)",
                "$(close-dirty)",
                "$(debug-breakpoint)",
                "$(debug-breakpoint-disabled)",
                "$(debug-hint)",
                "$(primitive-square)",
                "$(edit)",
                "$(pencil)",
                "$(info)",
                "$(issue-opened)",
                "$(gist-private)",
                "$(git-fork-private)",
                "$(lock)",
                "$(mirror-private)",
                "$(close)",
                "$(remove-close)",
                "$(x)",
                "$(repo-sync)",
                "$(sync)",
                "$(clone)",
                "$(desktop-download)",
                "$(beaker)",
                "$(microscope)",
                "$(vm)",
                "$(device-desktop)",
                "$(file)",
                "$(file-text)",
                "$(more)",
                "$(ellipsis)",
                "$(kebab-horizontal)",
                "$(mail-reply)",
                "$(reply)",
                "$(organization)",
                "$(organization-filled)",
                "$(organization-outline)",
                "$(new-file)",
                "$(file-add)",
                "$(new-folder)",
                "$(file-directory-create)",
                "$(trash)",
                "$(trashcan)",
                "$(history)",
                "$(clock)",
                "$(folder)",
                "$(file-directory)",
                "$(symbol-folder)",
                "$(logo-github)",
                "$(mark-github)",
                "$(github)",
                "$(terminal)",
                "$(console)",
                "$(repl)",
                "$(zap)",
                "$(symbol-event)",
                "$(error)",
                "$(stop)",
                "$(variable)",
                "$(symbol-variable)",
                "$(array)",
                "$(symbol-array)",
                "$(symbol-module)",
                "$(symbol-package)",
                "$(symbol-namespace)",
                "$(symbol-object)",
                "$(symbol-method)",
                "$(symbol-function)",
                "$(symbol-constructor)",
                "$(symbol-boolean)",
                "$(symbol-null)",
                "$(symbol-numeric)",
                "$(symbol-number)",
                "$(symbol-structure)",
                "$(symbol-struct)",
                "$(symbol-parameter)",
                "$(symbol-type-parameter)",
                "$(symbol-key)",
                "$(symbol-text)",
                "$(symbol-reference)",
                "$(go-to-file)",
                "$(symbol-enum)",
                "$(symbol-value)",
                "$(symbol-ruler)",
                "$(symbol-unit)",
                "$(activate-breakpoints)",
                "$(archive)",
                "$(arrow-both)",
                "$(arrow-down)",
                "$(arrow-left)",
                "$(arrow-right)",
                "$(arrow-small-down)",
                "$(arrow-small-left)",
                "$(arrow-small-right)",
                "$(arrow-small-up)",
                "$(arrow-up)",
                "$(bell)",
                "$(bold)",
                "$(book)",
                "$(bookmark)",
                "$(debug-breakpoint-conditional-unverified)",
                "$(debug-breakpoint-conditional)",
                "$(debug-breakpoint-conditional-disabled)",
                "$(debug-breakpoint-data-unverified)",
                "$(debug-breakpoint-data)",
                "$(debug-breakpoint-data-disabled)",
                "$(debug-breakpoint-log-unverified)",
                "$(debug-breakpoint-log)",
                "$(debug-breakpoint-log-disabled)",
                "$(briefcase)",
                "$(broadcast)",
                "$(browser)",
                "$(bug)",
                "$(calendar)",
                "$(case-sensitive)",
                "$(check)",
                "$(checklist)",
                "$(chevron-down)",
                "$(drop-down-button)",
                "$(chevron-left)",
                "$(chevron-right)",
                "$(chevron-up)",
                "$(chrome-close)",
                "$(chrome-maximize)",
                "$(chrome-minimize)",
                "$(chrome-restore)",
                "$(circle)",
                "$(circle-outline)",
                "$(debug-breakpoint-unverified)",
                "$(circle-slash)",
                "$(circuit-board)",
                "$(clear-all)",
                "$(clippy)",
                "$(close-all)",
                "$(cloud-download)",
                "$(cloud-upload)",
                "$(code)",
                "$(collapse-all)",
                "$(color-mode)",
                "$(comment-discussion)",
                "$(compare-changes)",
                "$(credit-card)",
                "$(dash)",
                "$(dashboard)",
                "$(database)",
                "$(debug-continue)",
                "$(debug-disconnect)",
                "$(debug-pause)",
                "$(debug-restart)",
                "$(debug-start)",
                "$(debug-step-into)",
                "$(debug-step-out)",
                "$(debug-step-over)",
                "$(debug-stop)",
                "$(debug)",
                "$(device-camera-video)",
                "$(device-camera)",
                "$(device-mobile)",
                "$(diff-added)",
                "$(diff-ignored)",
                "$(diff-modified)",
                "$(diff-removed)",
                "$(diff-renamed)",
                "$(diff)",
                "$(discard)",
                "$(editor-layout)",
                "$(empty-window)",
                "$(exclude)",
                "$(extensions)",
                "$(eye-closed)",
                "$(file-binary)",
                "$(file-code)",
                "$(file-media)",
                "$(file-pdf)",
                "$(file-submodule)",
                "$(file-symlink-directory)",
                "$(file-symlink-file)",
                "$(file-zip)",
                "$(files)",
                "$(filter)",
                "$(flame)",
                "$(fold-down)",
                "$(fold-up)",
                "$(fold)",
                "$(folder-active)",
                "$(folder-opened)",
                "$(gear)",
                "$(gift)",
                "$(gist-secret)",
                "$(gist)",
                "$(git-commit)",
                "$(git-compare)",
                "$(git-merge)",
                "$(github-action)",
                "$(github-alt)",
                "$(globe)",
                "$(grabber)",
                "$(graph)",
                "$(gripper)",
                "$(heart)",
                "$(home)",
                "$(horizontal-rule)",
                "$(hubot)",
                "$(inbox)",
                "$(issue-closed)",
                "$(issue-reopened)",
                "$(issues)",
                "$(italic)",
                "$(jersey)",
                "$(json)",
                "$(bracket)",
                "$(kebab-vertical)",
                "$(key)",
                "$(law)",
                "$(lightbulb-autofix)",
                "$(link-external)",
                "$(link)",
                "$(list-ordered)",
                "$(list-unordered)",
                "$(live-share)",
                "$(loading)",
                "$(location)",
                "$(mail-read)",
                "$(mail)",
                "$(markdown)",
                "$(megaphone)",
                "$(mention)",
                "$(milestone)",
                "$(mortar-board)",
                "$(move)",
                "$(multiple-windows)",
                "$(mute)",
                "$(no-newline)",
                "$(note)",
                "$(octoface)",
                "$(open-preview)",
                "$(package)",
                "$(paintcan)",
                "$(pin)",
                "$(play)",
                "$(run)",
                "$(plug)",
                "$(preserve-case)",
                "$(preview)",
                "$(project)",
                "$(pulse)",
                "$(question)",
                "$(quote)",
                "$(radio-tower)",
                "$(reactions)",
                "$(references)",
                "$(refresh)",
                "$(regex)",
                "$(remote-explorer)",
                "$(remote)",
                "$(remove)",
                "$(replace-all)",
                "$(replace)",
                "$(repo-clone)",
                "$(repo-force-push)",
                "$(repo-pull)",
                "$(repo-push)",
                "$(report)",
                "$(request-changes)",
                "$(rocket)",
                "$(root-folder-opened)",
                "$(root-folder)",
                "$(rss)",
                "$(ruby)",
                "$(save-all)",
                "$(save-as)",
                "$(save)",
                "$(screen-full)",
                "$(screen-normal)",
                "$(search-stop)",
                "$(server)",
                "$(settings-gear)",
                "$(settings)",
                "$(shield)",
                "$(smiley)",
                "$(sort-precedence)",
                "$(split-horizontal)",
                "$(split-vertical)",
                "$(squirrel)",
                "$(star-full)",
                "$(star-half)",
                "$(symbol-class)",
                "$(symbol-color)",
                "$(symbol-customcolor)",
                "$(symbol-constant)",
                "$(symbol-enum-member)",
                "$(symbol-field)",
                "$(symbol-file)",
                "$(symbol-interface)",
                "$(symbol-keyword)",
                "$(symbol-misc)",
                "$(symbol-operator)",
                "$(symbol-property)",
                "$(wrench)",
                "$(wrench-subaction)",
                "$(symbol-snippet)",
                "$(tasklist)",
                "$(telescope)",
                "$(text-size)",
                "$(three-bars)",
                "$(thumbsdown)",
                "$(thumbsup)",
                "$(tools)",
                "$(triangle-down)",
                "$(triangle-left)",
                "$(triangle-right)",
                "$(triangle-up)",
                "$(twitter)",
                "$(unfold)",
                "$(unlock)",
                "$(unmute)",
                "$(unverified)",
                "$(verified)",
                "$(versions)",
                "$(vm-active)",
                "$(vm-outline)",
                "$(vm-running)",
                "$(watch)",
                "$(whitespace)",
                "$(whole-word)",
                "$(window)",
                "$(word-wrap)",
                "$(zoom-in)",
                "$(zoom-out)",
                "$(list-filter)",
                "$(list-flat)",
                "$(list-selection)",
                "$(selection)",
                "$(list-tree)",
                "$(debug-breakpoint-function-unverified)",
                "$(debug-breakpoint-function)",
                "$(debug-breakpoint-function-disabled)",
                "$(debug-stackframe-active)",
                "$(circle-small-filled)",
                "$(debug-stackframe-dot)",
                "$(debug-stackframe)",
                "$(debug-stackframe-focused)",
                "$(debug-breakpoint-unsupported)",
                "$(symbol-string)",
                "$(debug-reverse-continue)",
                "$(debug-step-back)",
                "$(debug-restart-frame)",
                "$(call-incoming)",
                "$(call-outgoing)",
                "$(menu)",
                "$(expand-all)",
                "$(feedback)",
                "$(group-by-ref-type)",
                "$(ungroup-by-ref-type)",
                "$(account)",
                "$(bell-dot)",
                "$(debug-console)",
                "$(library)",
                "$(output)",
                "$(run-all)",
                "$(sync-ignored)",
                "$(pinned)",
                "$(github-inverted)",
                "$(debug-alt)",
                "$(server-process)",
                "$(server-environment)",
                "$(pass)",
                "$(stop-circle)",
                "$(play-circle)",
                "$(record)",
                "$(debug-alt-small)",
                "$(vm-connect)",
                "$(cloud)",
                "$(merge)",
                "$(export)",
                "$(graph-left)",
                "$(magnet)",
                "$(notebook)",
                "$(redo)",
                "$(check-all)",
                "$(pinned-dirty)",
                "$(pass-filled)",
                "$(circle-large-filled)",
                "$(circle-large)",
                "$(circle-large-outline)",
                "$(combine)",
                "$(gather)",
                "$(table)",
                "$(variable-group)",
                "$(type-hierarchy)",
                "$(type-hierarchy-sub)",
                "$(type-hierarchy-super)",
                "$(git-pull-request-create)",
                "$(run-above)",
                "$(run-below)",
                "$(notebook-template)",
                "$(debug-rerun)",
                "$(workspace-trusted)",
                "$(workspace-untrusted)",
                "$(workspace-unspecified)",
                "$(terminal-cmd)",
                "$(terminal-debian)",
                "$(terminal-linux)",
                "$(terminal-powershell)",
                "$(terminal-tmux)",
                "$(terminal-ubuntu)",
                "$(terminal-bash)",
                "$(arrow-swap)",
                "$(copy)",
                "$(person-add)",
                "$(filter-filled)",
                "$(wand)",
                "$(debug-line-by-line)",
                "$(inspect)",
                "$(layers)",
                "$(layers-dot)",
                "$(layers-active)",
                "$(compass)",
                "$(compass-dot)",
                "$(compass-active)",
                "$(azure)",
                "$(issue-draft)",
                "$(git-pull-request-closed)",
                "$(git-pull-request-draft)",
                "$(debug-all)",
                "$(debug-coverage)",
                "$(run-errors)",
                "$(folder-library)",
                "$(debug-continue-small)",
                "$(beaker-stop)",
                "$(graph-line)",
                "$(graph-scatter)",
                "$(pie-chart)",
                "$(bracket-dot)",
                "$(bracket-error)",
                "$(lock-small)",
                "$(azure-devops)",
                "$(verified-filled)",
                "$(newline)",
                "$(layout)",
                "$(layout-activitybar-left)",
                "$(layout-activitybar-right)",
                "$(layout-panel-left)",
                "$(layout-panel-center)",
                "$(layout-panel-justify)",
                "$(layout-panel-right)",
                "$(layout-panel)",
                "$(layout-sidebar-left)",
                "$(layout-sidebar-right)",
                "$(layout-statusbar)",
                "$(layout-menubar)",
                "$(layout-centered)",
                "$(layout-sidebar-right-off)",
                "$(layout-panel-off)",
                "$(layout-sidebar-left-off)",
                "$(target)",
                "$(indent)",
                "$(record-small)",
                "$(error-small)",
                "$(arrow-circle-down)",
                "$(arrow-circle-left)",
                "$(arrow-circle-right)",
                "$(arrow-circle-up)",
                "$(heart-filled)",
                "$(map)",
                "$(map-filled)",
                "$(circle-small)",
                "$(bell-slash)",
                "$(bell-slash-dot)",
                "$(comment-unresolved)",
                "$(git-pull-request-go-to-changes)",
                "$(git-pull-request-new-changes)",
                "$(search-fuzzy)",
                "$(comment-draft)",
                "$(dialog-error)",
                "$(dialog-warning)",
                "$(dialog-info)",
                "$(dialog-close)",
                "$(tree-item-expanded)",
                "$(tree-filter-on-type-on)",
                "$(tree-filter-on-type-off)",
                "$(tree-filter-clear)",
                "$(tree-item-loading)",
                "$(menu-selection)",
                "$(menu-submenu)",
                "$(menubar-more)",
                "$(scrollbar-button-left)",
                "$(scrollbar-button-right)",
                "$(scrollbar-button-up)",
                "$(scrollbar-button-down)",
                "$(toolbar-more)",
                "$(quick-input-back)"
              ]
            },
            "color": {
              "description": "A theme color ID to associate with the terminal icon.",
              "type": [
                "string",
                "null"
              ],
              "enum": [
                "terminal.ansiBlack",
                "terminal.ansiRed",
                "terminal.ansiGreen",
                "terminal.ansiYellow",
                "terminal.ansiBlue",
                "terminal.ansiMagenta",
                "terminal.ansiCyan",
                "terminal.ansiWhite"
              ],
              "default": null
            },
            "env": {
              "markdownDescription": "An object with environment variables that will be added to the terminal profile process. Set to `null` to delete environment variables from the base environment.",
              "type": "object",
              "additionalProperties": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "default": {}
            }
          }
        }
      ],
      "defaultSnippets": [
        {
          "body": {
            "path": "${1}",
            "icon": "${2}"
          }
        }
      ],
      "defaultDefaultValue": null,
      "scope": 3
    },
    "terminal.integrated.automationProfile.osx": {
      "restricted": true,
      "markdownDescription": "The terminal profile to use on macOS for automation-related terminal usage like tasks and debug. This setting will currently be ignored if `terminal.integrated.automationShell.osx` (now deprecated) is set.",
      "type": [
        "object",
        "null"
      ],
      "default": null,
      "anyOf": [
        {
          "type": "null"
        },
        {
          "type": "object",
          "required": [
            "path"
          ],
          "properties": {
            "path": {
              "description": "A single path to a shell executable.",
              "type": [
                "string"
              ],
              "items": {
                "type": "string"
              }
            },
            "args": {
              "description": "An optional set of arguments to run the shell executable with.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "overrideName": {
              "description": "Controls whether or not the profile name overrides the auto detected one.",
              "type": "boolean"
            },
            "icon": {
              "description": "A codicon ID to associate with the terminal icon.",
              "type": "string",
              "enum": [
                "add",
                "plus",
                "gist-new",
                "repo-create",
                "lightbulb",
                "light-bulb",
                "repo",
                "repo-delete",
                "gist-fork",
                "repo-forked",
                "git-pull-request",
                "git-pull-request-abandoned",
                "record-keys",
                "keyboard",
                "tag",
                "tag-add",
                "tag-remove",
                "person",
                "person-follow",
                "person-outline",
                "person-filled",
                "git-branch",
                "git-branch-create",
                "git-branch-delete",
                "source-control",
                "mirror",
                "mirror-public",
                "star",
                "star-add",
                "star-delete",
                "star-empty",
                "comment",
                "comment-add",
                "alert",
                "warning",
                "search",
                "search-save",
                "log-out",
                "sign-out",
                "log-in",
                "sign-in",
                "eye",
                "eye-unwatch",
                "eye-watch",
                "circle-filled",
                "primitive-dot",
                "close-dirty",
                "debug-breakpoint",
                "debug-breakpoint-disabled",
                "debug-hint",
                "primitive-square",
                "edit",
                "pencil",
                "info",
                "issue-opened",
                "gist-private",
                "git-fork-private",
                "lock",
                "mirror-private",
                "close",
                "remove-close",
                "x",
                "repo-sync",
                "sync",
                "clone",
                "desktop-download",
                "beaker",
                "microscope",
                "vm",
                "device-desktop",
                "file",
                "file-text",
                "more",
                "ellipsis",
                "kebab-horizontal",
                "mail-reply",
                "reply",
                "organization",
                "organization-filled",
                "organization-outline",
                "new-file",
                "file-add",
                "new-folder",
                "file-directory-create",
                "trash",
                "trashcan",
                "history",
                "clock",
                "folder",
                "file-directory",
                "symbol-folder",
                "logo-github",
                "mark-github",
                "github",
                "terminal",
                "console",
                "repl",
                "zap",
                "symbol-event",
                "error",
                "stop",
                "variable",
                "symbol-variable",
                "array",
                "symbol-array",
                "symbol-module",
                "symbol-package",
                "symbol-namespace",
                "symbol-object",
                "symbol-method",
                "symbol-function",
                "symbol-constructor",
                "symbol-boolean",
                "symbol-null",
                "symbol-numeric",
                "symbol-number",
                "symbol-structure",
                "symbol-struct",
                "symbol-parameter",
                "symbol-type-parameter",
                "symbol-key",
                "symbol-text",
                "symbol-reference",
                "go-to-file",
                "symbol-enum",
                "symbol-value",
                "symbol-ruler",
                "symbol-unit",
                "activate-breakpoints",
                "archive",
                "arrow-both",
                "arrow-down",
                "arrow-left",
                "arrow-right",
                "arrow-small-down",
                "arrow-small-left",
                "arrow-small-right",
                "arrow-small-up",
                "arrow-up",
                "bell",
                "bold",
                "book",
                "bookmark",
                "debug-breakpoint-conditional-unverified",
                "debug-breakpoint-conditional",
                "debug-breakpoint-conditional-disabled",
                "debug-breakpoint-data-unverified",
                "debug-breakpoint-data",
                "debug-breakpoint-data-disabled",
                "debug-breakpoint-log-unverified",
                "debug-breakpoint-log",
                "debug-breakpoint-log-disabled",
                "briefcase",
                "broadcast",
                "browser",
                "bug",
                "calendar",
                "case-sensitive",
                "check",
                "checklist",
                "chevron-down",
                "drop-down-button",
                "chevron-left",
                "chevron-right",
                "chevron-up",
                "chrome-close",
                "chrome-maximize",
                "chrome-minimize",
                "chrome-restore",
                "circle",
                "circle-outline",
                "debug-breakpoint-unverified",
                "circle-slash",
                "circuit-board",
                "clear-all",
                "clippy",
                "close-all",
                "cloud-download",
                "cloud-upload",
                "code",
                "collapse-all",
                "color-mode",
                "comment-discussion",
                "compare-changes",
                "credit-card",
                "dash",
                "dashboard",
                "database",
                "debug-continue",
                "debug-disconnect",
                "debug-pause",
                "debug-restart",
                "debug-start",
                "debug-step-into",
                "debug-step-out",
                "debug-step-over",
                "debug-stop",
                "debug",
                "device-camera-video",
                "device-camera",
                "device-mobile",
                "diff-added",
                "diff-ignored",
                "diff-modified",
                "diff-removed",
                "diff-renamed",
                "diff",
                "discard",
                "editor-layout",
                "empty-window",
                "exclude",
                "extensions",
                "eye-closed",
                "file-binary",
                "file-code",
                "file-media",
                "file-pdf",
                "file-submodule",
                "file-symlink-directory",
                "file-symlink-file",
                "file-zip",
                "files",
                "filter",
                "flame",
                "fold-down",
                "fold-up",
                "fold",
                "folder-active",
                "folder-opened",
                "gear",
                "gift",
                "gist-secret",
                "gist",
                "git-commit",
                "git-compare",
                "git-merge",
                "github-action",
                "github-alt",
                "globe",
                "grabber",
                "graph",
                "gripper",
                "heart",
                "home",
                "horizontal-rule",
                "hubot",
                "inbox",
                "issue-closed",
                "issue-reopened",
                "issues",
                "italic",
                "jersey",
                "json",
                "bracket",
                "kebab-vertical",
                "key",
                "law",
                "lightbulb-autofix",
                "link-external",
                "link",
                "list-ordered",
                "list-unordered",
                "live-share",
                "loading",
                "location",
                "mail-read",
                "mail",
                "markdown",
                "megaphone",
                "mention",
                "milestone",
                "mortar-board",
                "move",
                "multiple-windows",
                "mute",
                "no-newline",
                "note",
                "octoface",
                "open-preview",
                "package",
                "paintcan",
                "pin",
                "play",
                "run",
                "plug",
                "preserve-case",
                "preview",
                "project",
                "pulse",
                "question",
                "quote",
                "radio-tower",
                "reactions",
                "references",
                "refresh",
                "regex",
                "remote-explorer",
                "remote",
                "remove",
                "replace-all",
                "replace",
                "repo-clone",
                "repo-force-push",
                "repo-pull",
                "repo-push",
                "report",
                "request-changes",
                "rocket",
                "root-folder-opened",
                "root-folder",
                "rss",
                "ruby",
                "save-all",
                "save-as",
                "save",
                "screen-full",
                "screen-normal",
                "search-stop",
                "server",
                "settings-gear",
                "settings",
                "shield",
                "smiley",
                "sort-precedence",
                "split-horizontal",
                "split-vertical",
                "squirrel",
                "star-full",
                "star-half",
                "symbol-class",
                "symbol-color",
                "symbol-customcolor",
                "symbol-constant",
                "symbol-enum-member",
                "symbol-field",
                "symbol-file",
                "symbol-interface",
                "symbol-keyword",
                "symbol-misc",
                "symbol-operator",
                "symbol-property",
                "wrench",
                "wrench-subaction",
                "symbol-snippet",
                "tasklist",
                "telescope",
                "text-size",
                "three-bars",
                "thumbsdown",
                "thumbsup",
                "tools",
                "triangle-down",
                "triangle-left",
                "triangle-right",
                "triangle-up",
                "twitter",
                "unfold",
                "unlock",
                "unmute",
                "unverified",
                "verified",
                "versions",
                "vm-active",
                "vm-outline",
                "vm-running",
                "watch",
                "whitespace",
                "whole-word",
                "window",
                "word-wrap",
                "zoom-in",
                "zoom-out",
                "list-filter",
                "list-flat",
                "list-selection",
                "selection",
                "list-tree",
                "debug-breakpoint-function-unverified",
                "debug-breakpoint-function",
                "debug-breakpoint-function-disabled",
                "debug-stackframe-active",
                "circle-small-filled",
                "debug-stackframe-dot",
                "debug-stackframe",
                "debug-stackframe-focused",
                "debug-breakpoint-unsupported",
                "symbol-string",
                "debug-reverse-continue",
                "debug-step-back",
                "debug-restart-frame",
                "call-incoming",
                "call-outgoing",
                "menu",
                "expand-all",
                "feedback",
                "group-by-ref-type",
                "ungroup-by-ref-type",
                "account",
                "bell-dot",
                "debug-console",
                "library",
                "output",
                "run-all",
                "sync-ignored",
                "pinned",
                "github-inverted",
                "debug-alt",
                "server-process",
                "server-environment",
                "pass",
                "stop-circle",
                "play-circle",
                "record",
                "debug-alt-small",
                "vm-connect",
                "cloud",
                "merge",
                "export",
                "graph-left",
                "magnet",
                "notebook",
                "redo",
                "check-all",
                "pinned-dirty",
                "pass-filled",
                "circle-large-filled",
                "circle-large",
                "circle-large-outline",
                "combine",
                "gather",
                "table",
                "variable-group",
                "type-hierarchy",
                "type-hierarchy-sub",
                "type-hierarchy-super",
                "git-pull-request-create",
                "run-above",
                "run-below",
                "notebook-template",
                "debug-rerun",
                "workspace-trusted",
                "workspace-untrusted",
                "workspace-unspecified",
                "terminal-cmd",
                "terminal-debian",
                "terminal-linux",
                "terminal-powershell",
                "terminal-tmux",
                "terminal-ubuntu",
                "terminal-bash",
                "arrow-swap",
                "copy",
                "person-add",
                "filter-filled",
                "wand",
                "debug-line-by-line",
                "inspect",
                "layers",
                "layers-dot",
                "layers-active",
                "compass",
                "compass-dot",
                "compass-active",
                "azure",
                "issue-draft",
                "git-pull-request-closed",
                "git-pull-request-draft",
                "debug-all",
                "debug-coverage",
                "run-errors",
                "folder-library",
                "debug-continue-small",
                "beaker-stop",
                "graph-line",
                "graph-scatter",
                "pie-chart",
                "bracket-dot",
                "bracket-error",
                "lock-small",
                "azure-devops",
                "verified-filled",
                "newline",
                "layout",
                "layout-activitybar-left",
                "layout-activitybar-right",
                "layout-panel-left",
                "layout-panel-center",
                "layout-panel-justify",
                "layout-panel-right",
                "layout-panel",
                "layout-sidebar-left",
                "layout-sidebar-right",
                "layout-statusbar",
                "layout-menubar",
                "layout-centered",
                "layout-sidebar-right-off",
                "layout-panel-off",
                "layout-sidebar-left-off",
                "target",
                "indent",
                "record-small",
                "error-small",
                "arrow-circle-down",
                "arrow-circle-left",
                "arrow-circle-right",
                "arrow-circle-up",
                "heart-filled",
                "map",
                "map-filled",
                "circle-small",
                "bell-slash",
                "bell-slash-dot",
                "comment-unresolved",
                "git-pull-request-go-to-changes",
                "git-pull-request-new-changes",
                "search-fuzzy",
                "comment-draft",
                "dialog-error",
                "dialog-warning",
                "dialog-info",
                "dialog-close",
                "tree-item-expanded",
                "tree-filter-on-type-on",
                "tree-filter-on-type-off",
                "tree-filter-clear",
                "tree-item-loading",
                "menu-selection",
                "menu-submenu",
                "menubar-more",
                "scrollbar-button-left",
                "scrollbar-button-right",
                "scrollbar-button-up",
                "scrollbar-button-down",
                "toolbar-more",
                "quick-input-back"
              ],
              "markdownEnumDescriptions": [
                "$(add)",
                "$(plus)",
                "$(gist-new)",
                "$(repo-create)",
                "$(lightbulb)",
                "$(light-bulb)",
                "$(repo)",
                "$(repo-delete)",
                "$(gist-fork)",
                "$(repo-forked)",
                "$(git-pull-request)",
                "$(git-pull-request-abandoned)",
                "$(record-keys)",
                "$(keyboard)",
                "$(tag)",
                "$(tag-add)",
                "$(tag-remove)",
                "$(person)",
                "$(person-follow)",
                "$(person-outline)",
                "$(person-filled)",
                "$(git-branch)",
                "$(git-branch-create)",
                "$(git-branch-delete)",
                "$(source-control)",
                "$(mirror)",
                "$(mirror-public)",
                "$(star)",
                "$(star-add)",
                "$(star-delete)",
                "$(star-empty)",
                "$(comment)",
                "$(comment-add)",
                "$(alert)",
                "$(warning)",
                "$(search)",
                "$(search-save)",
                "$(log-out)",
                "$(sign-out)",
                "$(log-in)",
                "$(sign-in)",
                "$(eye)",
                "$(eye-unwatch)",
                "$(eye-watch)",
                "$(circle-filled)",
                "$(primitive-dot)",
                "$(close-dirty)",
                "$(debug-breakpoint)",
                "$(debug-breakpoint-disabled)",
                "$(debug-hint)",
                "$(primitive-square)",
                "$(edit)",
                "$(pencil)",
                "$(info)",
                "$(issue-opened)",
                "$(gist-private)",
                "$(git-fork-private)",
                "$(lock)",
                "$(mirror-private)",
                "$(close)",
                "$(remove-close)",
                "$(x)",
                "$(repo-sync)",
                "$(sync)",
                "$(clone)",
                "$(desktop-download)",
                "$(beaker)",
                "$(microscope)",
                "$(vm)",
                "$(device-desktop)",
                "$(file)",
                "$(file-text)",
                "$(more)",
                "$(ellipsis)",
                "$(kebab-horizontal)",
                "$(mail-reply)",
                "$(reply)",
                "$(organization)",
                "$(organization-filled)",
                "$(organization-outline)",
                "$(new-file)",
                "$(file-add)",
                "$(new-folder)",
                "$(file-directory-create)",
                "$(trash)",
                "$(trashcan)",
                "$(history)",
                "$(clock)",
                "$(folder)",
                "$(file-directory)",
                "$(symbol-folder)",
                "$(logo-github)",
                "$(mark-github)",
                "$(github)",
                "$(terminal)",
                "$(console)",
                "$(repl)",
                "$(zap)",
                "$(symbol-event)",
                "$(error)",
                "$(stop)",
                "$(variable)",
                "$(symbol-variable)",
                "$(array)",
                "$(symbol-array)",
                "$(symbol-module)",
                "$(symbol-package)",
                "$(symbol-namespace)",
                "$(symbol-object)",
                "$(symbol-method)",
                "$(symbol-function)",
                "$(symbol-constructor)",
                "$(symbol-boolean)",
                "$(symbol-null)",
                "$(symbol-numeric)",
                "$(symbol-number)",
                "$(symbol-structure)",
                "$(symbol-struct)",
                "$(symbol-parameter)",
                "$(symbol-type-parameter)",
                "$(symbol-key)",
                "$(symbol-text)",
                "$(symbol-reference)",
                "$(go-to-file)",
                "$(symbol-enum)",
                "$(symbol-value)",
                "$(symbol-ruler)",
                "$(symbol-unit)",
                "$(activate-breakpoints)",
                "$(archive)",
                "$(arrow-both)",
                "$(arrow-down)",
                "$(arrow-left)",
                "$(arrow-right)",
                "$(arrow-small-down)",
                "$(arrow-small-left)",
                "$(arrow-small-right)",
                "$(arrow-small-up)",
                "$(arrow-up)",
                "$(bell)",
                "$(bold)",
                "$(book)",
                "$(bookmark)",
                "$(debug-breakpoint-conditional-unverified)",
                "$(debug-breakpoint-conditional)",
                "$(debug-breakpoint-conditional-disabled)",
                "$(debug-breakpoint-data-unverified)",
                "$(debug-breakpoint-data)",
                "$(debug-breakpoint-data-disabled)",
                "$(debug-breakpoint-log-unverified)",
                "$(debug-breakpoint-log)",
                "$(debug-breakpoint-log-disabled)",
                "$(briefcase)",
                "$(broadcast)",
                "$(browser)",
                "$(bug)",
                "$(calendar)",
                "$(case-sensitive)",
                "$(check)",
                "$(checklist)",
                "$(chevron-down)",
                "$(drop-down-button)",
                "$(chevron-left)",
                "$(chevron-right)",
                "$(chevron-up)",
                "$(chrome-close)",
                "$(chrome-maximize)",
                "$(chrome-minimize)",
                "$(chrome-restore)",
                "$(circle)",
                "$(circle-outline)",
                "$(debug-breakpoint-unverified)",
                "$(circle-slash)",
                "$(circuit-board)",
                "$(clear-all)",
                "$(clippy)",
                "$(close-all)",
                "$(cloud-download)",
                "$(cloud-upload)",
                "$(code)",
                "$(collapse-all)",
                "$(color-mode)",
                "$(comment-discussion)",
                "$(compare-changes)",
                "$(credit-card)",
                "$(dash)",
                "$(dashboard)",
                "$(database)",
                "$(debug-continue)",
                "$(debug-disconnect)",
                "$(debug-pause)",
                "$(debug-restart)",
                "$(debug-start)",
                "$(debug-step-into)",
                "$(debug-step-out)",
                "$(debug-step-over)",
                "$(debug-stop)",
                "$(debug)",
                "$(device-camera-video)",
                "$(device-camera)",
                "$(device-mobile)",
                "$(diff-added)",
                "$(diff-ignored)",
                "$(diff-modified)",
                "$(diff-removed)",
                "$(diff-renamed)",
                "$(diff)",
                "$(discard)",
                "$(editor-layout)",
                "$(empty-window)",
                "$(exclude)",
                "$(extensions)",
                "$(eye-closed)",
                "$(file-binary)",
                "$(file-code)",
                "$(file-media)",
                "$(file-pdf)",
                "$(file-submodule)",
                "$(file-symlink-directory)",
                "$(file-symlink-file)",
                "$(file-zip)",
                "$(files)",
                "$(filter)",
                "$(flame)",
                "$(fold-down)",
                "$(fold-up)",
                "$(fold)",
                "$(folder-active)",
                "$(folder-opened)",
                "$(gear)",
                "$(gift)",
                "$(gist-secret)",
                "$(gist)",
                "$(git-commit)",
                "$(git-compare)",
                "$(git-merge)",
                "$(github-action)",
                "$(github-alt)",
                "$(globe)",
                "$(grabber)",
                "$(graph)",
                "$(gripper)",
                "$(heart)",
                "$(home)",
                "$(horizontal-rule)",
                "$(hubot)",
                "$(inbox)",
                "$(issue-closed)",
                "$(issue-reopened)",
                "$(issues)",
                "$(italic)",
                "$(jersey)",
                "$(json)",
                "$(bracket)",
                "$(kebab-vertical)",
                "$(key)",
                "$(law)",
                "$(lightbulb-autofix)",
                "$(link-external)",
                "$(link)",
                "$(list-ordered)",
                "$(list-unordered)",
                "$(live-share)",
                "$(loading)",
                "$(location)",
                "$(mail-read)",
                "$(mail)",
                "$(markdown)",
                "$(megaphone)",
                "$(mention)",
                "$(milestone)",
                "$(mortar-board)",
                "$(move)",
                "$(multiple-windows)",
                "$(mute)",
                "$(no-newline)",
                "$(note)",
                "$(octoface)",
                "$(open-preview)",
                "$(package)",
                "$(paintcan)",
                "$(pin)",
                "$(play)",
                "$(run)",
                "$(plug)",
                "$(preserve-case)",
                "$(preview)",
                "$(project)",
                "$(pulse)",
                "$(question)",
                "$(quote)",
                "$(radio-tower)",
                "$(reactions)",
                "$(references)",
                "$(refresh)",
                "$(regex)",
                "$(remote-explorer)",
                "$(remote)",
                "$(remove)",
                "$(replace-all)",
                "$(replace)",
                "$(repo-clone)",
                "$(repo-force-push)",
                "$(repo-pull)",
                "$(repo-push)",
                "$(report)",
                "$(request-changes)",
                "$(rocket)",
                "$(root-folder-opened)",
                "$(root-folder)",
                "$(rss)",
                "$(ruby)",
                "$(save-all)",
                "$(save-as)",
                "$(save)",
                "$(screen-full)",
                "$(screen-normal)",
                "$(search-stop)",
                "$(server)",
                "$(settings-gear)",
                "$(settings)",
                "$(shield)",
                "$(smiley)",
                "$(sort-precedence)",
                "$(split-horizontal)",
                "$(split-vertical)",
                "$(squirrel)",
                "$(star-full)",
                "$(star-half)",
                "$(symbol-class)",
                "$(symbol-color)",
                "$(symbol-customcolor)",
                "$(symbol-constant)",
                "$(symbol-enum-member)",
                "$(symbol-field)",
                "$(symbol-file)",
                "$(symbol-interface)",
                "$(symbol-keyword)",
                "$(symbol-misc)",
                "$(symbol-operator)",
                "$(symbol-property)",
                "$(wrench)",
                "$(wrench-subaction)",
                "$(symbol-snippet)",
                "$(tasklist)",
                "$(telescope)",
                "$(text-size)",
                "$(three-bars)",
                "$(thumbsdown)",
                "$(thumbsup)",
                "$(tools)",
                "$(triangle-down)",
                "$(triangle-left)",
                "$(triangle-right)",
                "$(triangle-up)",
                "$(twitter)",
                "$(unfold)",
                "$(unlock)",
                "$(unmute)",
                "$(unverified)",
                "$(verified)",
                "$(versions)",
                "$(vm-active)",
                "$(vm-outline)",
                "$(vm-running)",
                "$(watch)",
                "$(whitespace)",
                "$(whole-word)",
                "$(window)",
                "$(word-wrap)",
                "$(zoom-in)",
                "$(zoom-out)",
                "$(list-filter)",
                "$(list-flat)",
                "$(list-selection)",
                "$(selection)",
                "$(list-tree)",
                "$(debug-breakpoint-function-unverified)",
                "$(debug-breakpoint-function)",
                "$(debug-breakpoint-function-disabled)",
                "$(debug-stackframe-active)",
                "$(circle-small-filled)",
                "$(debug-stackframe-dot)",
                "$(debug-stackframe)",
                "$(debug-stackframe-focused)",
                "$(debug-breakpoint-unsupported)",
                "$(symbol-string)",
                "$(debug-reverse-continue)",
                "$(debug-step-back)",
                "$(debug-restart-frame)",
                "$(call-incoming)",
                "$(call-outgoing)",
                "$(menu)",
                "$(expand-all)",
                "$(feedback)",
                "$(group-by-ref-type)",
                "$(ungroup-by-ref-type)",
                "$(account)",
                "$(bell-dot)",
                "$(debug-console)",
                "$(library)",
                "$(output)",
                "$(run-all)",
                "$(sync-ignored)",
                "$(pinned)",
                "$(github-inverted)",
                "$(debug-alt)",
                "$(server-process)",
                "$(server-environment)",
                "$(pass)",
                "$(stop-circle)",
                "$(play-circle)",
                "$(record)",
                "$(debug-alt-small)",
                "$(vm-connect)",
                "$(cloud)",
                "$(merge)",
                "$(export)",
                "$(graph-left)",
                "$(magnet)",
                "$(notebook)",
                "$(redo)",
                "$(check-all)",
                "$(pinned-dirty)",
                "$(pass-filled)",
                "$(circle-large-filled)",
                "$(circle-large)",
                "$(circle-large-outline)",
                "$(combine)",
                "$(gather)",
                "$(table)",
                "$(variable-group)",
                "$(type-hierarchy)",
                "$(type-hierarchy-sub)",
                "$(type-hierarchy-super)",
                "$(git-pull-request-create)",
                "$(run-above)",
                "$(run-below)",
                "$(notebook-template)",
                "$(debug-rerun)",
                "$(workspace-trusted)",
                "$(workspace-untrusted)",
                "$(workspace-unspecified)",
                "$(terminal-cmd)",
                "$(terminal-debian)",
                "$(terminal-linux)",
                "$(terminal-powershell)",
                "$(terminal-tmux)",
                "$(terminal-ubuntu)",
                "$(terminal-bash)",
                "$(arrow-swap)",
                "$(copy)",
                "$(person-add)",
                "$(filter-filled)",
                "$(wand)",
                "$(debug-line-by-line)",
                "$(inspect)",
                "$(layers)",
                "$(layers-dot)",
                "$(layers-active)",
                "$(compass)",
                "$(compass-dot)",
                "$(compass-active)",
                "$(azure)",
                "$(issue-draft)",
                "$(git-pull-request-closed)",
                "$(git-pull-request-draft)",
                "$(debug-all)",
                "$(debug-coverage)",
                "$(run-errors)",
                "$(folder-library)",
                "$(debug-continue-small)",
                "$(beaker-stop)",
                "$(graph-line)",
                "$(graph-scatter)",
                "$(pie-chart)",
                "$(bracket-dot)",
                "$(bracket-error)",
                "$(lock-small)",
                "$(azure-devops)",
                "$(verified-filled)",
                "$(newline)",
                "$(layout)",
                "$(layout-activitybar-left)",
                "$(layout-activitybar-right)",
                "$(layout-panel-left)",
                "$(layout-panel-center)",
                "$(layout-panel-justify)",
                "$(layout-panel-right)",
                "$(layout-panel)",
                "$(layout-sidebar-left)",
                "$(layout-sidebar-right)",
                "$(layout-statusbar)",
                "$(layout-menubar)",
                "$(layout-centered)",
                "$(layout-sidebar-right-off)",
                "$(layout-panel-off)",
                "$(layout-sidebar-left-off)",
                "$(target)",
                "$(indent)",
                "$(record-small)",
                "$(error-small)",
                "$(arrow-circle-down)",
                "$(arrow-circle-left)",
                "$(arrow-circle-right)",
                "$(arrow-circle-up)",
                "$(heart-filled)",
                "$(map)",
                "$(map-filled)",
                "$(circle-small)",
                "$(bell-slash)",
                "$(bell-slash-dot)",
                "$(comment-unresolved)",
                "$(git-pull-request-go-to-changes)",
                "$(git-pull-request-new-changes)",
                "$(search-fuzzy)",
                "$(comment-draft)",
                "$(dialog-error)",
                "$(dialog-warning)",
                "$(dialog-info)",
                "$(dialog-close)",
                "$(tree-item-expanded)",
                "$(tree-filter-on-type-on)",
                "$(tree-filter-on-type-off)",
                "$(tree-filter-clear)",
                "$(tree-item-loading)",
                "$(menu-selection)",
                "$(menu-submenu)",
                "$(menubar-more)",
                "$(scrollbar-button-left)",
                "$(scrollbar-button-right)",
                "$(scrollbar-button-up)",
                "$(scrollbar-button-down)",
                "$(toolbar-more)",
                "$(quick-input-back)"
              ]
            },
            "color": {
              "description": "A theme color ID to associate with the terminal icon.",
              "type": [
                "string",
                "null"
              ],
              "enum": [
                "terminal.ansiBlack",
                "terminal.ansiRed",
                "terminal.ansiGreen",
                "terminal.ansiYellow",
                "terminal.ansiBlue",
                "terminal.ansiMagenta",
                "terminal.ansiCyan",
                "terminal.ansiWhite"
              ],
              "default": null
            },
            "env": {
              "markdownDescription": "An object with environment variables that will be added to the terminal profile process. Set to `null` to delete environment variables from the base environment.",
              "type": "object",
              "additionalProperties": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "default": {}
            }
          }
        }
      ],
      "defaultSnippets": [
        {
          "body": {
            "path": "${1}",
            "icon": "${2}"
          }
        }
      ],
      "defaultDefaultValue": null,
      "scope": 3
    },
    "terminal.integrated.automationProfile.windows": {
      "restricted": true,
      "markdownDescription": "The terminal profile to use for automation-related terminal usage like tasks and debug. This setting will currently be ignored if `terminal.integrated.automationShell.windows` (now deprecated) is set.",
      "type": [
        "object",
        "null"
      ],
      "default": null,
      "anyOf": [
        {
          "type": "null"
        },
        {
          "type": "object",
          "required": [
            "path"
          ],
          "properties": {
            "path": {
              "description": "A single path to a shell executable.",
              "type": [
                "string"
              ],
              "items": {
                "type": "string"
              }
            },
            "args": {
              "description": "An optional set of arguments to run the shell executable with.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "overrideName": {
              "description": "Controls whether or not the profile name overrides the auto detected one.",
              "type": "boolean"
            },
            "icon": {
              "description": "A codicon ID to associate with the terminal icon.",
              "type": "string",
              "enum": [
                "add",
                "plus",
                "gist-new",
                "repo-create",
                "lightbulb",
                "light-bulb",
                "repo",
                "repo-delete",
                "gist-fork",
                "repo-forked",
                "git-pull-request",
                "git-pull-request-abandoned",
                "record-keys",
                "keyboard",
                "tag",
                "tag-add",
                "tag-remove",
                "person",
                "person-follow",
                "person-outline",
                "person-filled",
                "git-branch",
                "git-branch-create",
                "git-branch-delete",
                "source-control",
                "mirror",
                "mirror-public",
                "star",
                "star-add",
                "star-delete",
                "star-empty",
                "comment",
                "comment-add",
                "alert",
                "warning",
                "search",
                "search-save",
                "log-out",
                "sign-out",
                "log-in",
                "sign-in",
                "eye",
                "eye-unwatch",
                "eye-watch",
                "circle-filled",
                "primitive-dot",
                "close-dirty",
                "debug-breakpoint",
                "debug-breakpoint-disabled",
                "debug-hint",
                "primitive-square",
                "edit",
                "pencil",
                "info",
                "issue-opened",
                "gist-private",
                "git-fork-private",
                "lock",
                "mirror-private",
                "close",
                "remove-close",
                "x",
                "repo-sync",
                "sync",
                "clone",
                "desktop-download",
                "beaker",
                "microscope",
                "vm",
                "device-desktop",
                "file",
                "file-text",
                "more",
                "ellipsis",
                "kebab-horizontal",
                "mail-reply",
                "reply",
                "organization",
                "organization-filled",
                "organization-outline",
                "new-file",
                "file-add",
                "new-folder",
                "file-directory-create",
                "trash",
                "trashcan",
                "history",
                "clock",
                "folder",
                "file-directory",
                "symbol-folder",
                "logo-github",
                "mark-github",
                "github",
                "terminal",
                "console",
                "repl",
                "zap",
                "symbol-event",
                "error",
                "stop",
                "variable",
                "symbol-variable",
                "array",
                "symbol-array",
                "symbol-module",
                "symbol-package",
                "symbol-namespace",
                "symbol-object",
                "symbol-method",
                "symbol-function",
                "symbol-constructor",
                "symbol-boolean",
                "symbol-null",
                "symbol-numeric",
                "symbol-number",
                "symbol-structure",
                "symbol-struct",
                "symbol-parameter",
                "symbol-type-parameter",
                "symbol-key",
                "symbol-text",
                "symbol-reference",
                "go-to-file",
                "symbol-enum",
                "symbol-value",
                "symbol-ruler",
                "symbol-unit",
                "activate-breakpoints",
                "archive",
                "arrow-both",
                "arrow-down",
                "arrow-left",
                "arrow-right",
                "arrow-small-down",
                "arrow-small-left",
                "arrow-small-right",
                "arrow-small-up",
                "arrow-up",
                "bell",
                "bold",
                "book",
                "bookmark",
                "debug-breakpoint-conditional-unverified",
                "debug-breakpoint-conditional",
                "debug-breakpoint-conditional-disabled",
                "debug-breakpoint-data-unverified",
                "debug-breakpoint-data",
                "debug-breakpoint-data-disabled",
                "debug-breakpoint-log-unverified",
                "debug-breakpoint-log",
                "debug-breakpoint-log-disabled",
                "briefcase",
                "broadcast",
                "browser",
                "bug",
                "calendar",
                "case-sensitive",
                "check",
                "checklist",
                "chevron-down",
                "drop-down-button",
                "chevron-left",
                "chevron-right",
                "chevron-up",
                "chrome-close",
                "chrome-maximize",
                "chrome-minimize",
                "chrome-restore",
                "circle",
                "circle-outline",
                "debug-breakpoint-unverified",
                "circle-slash",
                "circuit-board",
                "clear-all",
                "clippy",
                "close-all",
                "cloud-download",
                "cloud-upload",
                "code",
                "collapse-all",
                "color-mode",
                "comment-discussion",
                "compare-changes",
                "credit-card",
                "dash",
                "dashboard",
                "database",
                "debug-continue",
                "debug-disconnect",
                "debug-pause",
                "debug-restart",
                "debug-start",
                "debug-step-into",
                "debug-step-out",
                "debug-step-over",
                "debug-stop",
                "debug",
                "device-camera-video",
                "device-camera",
                "device-mobile",
                "diff-added",
                "diff-ignored",
                "diff-modified",
                "diff-removed",
                "diff-renamed",
                "diff",
                "discard",
                "editor-layout",
                "empty-window",
                "exclude",
                "extensions",
                "eye-closed",
                "file-binary",
                "file-code",
                "file-media",
                "file-pdf",
                "file-submodule",
                "file-symlink-directory",
                "file-symlink-file",
                "file-zip",
                "files",
                "filter",
                "flame",
                "fold-down",
                "fold-up",
                "fold",
                "folder-active",
                "folder-opened",
                "gear",
                "gift",
                "gist-secret",
                "gist",
                "git-commit",
                "git-compare",
                "git-merge",
                "github-action",
                "github-alt",
                "globe",
                "grabber",
                "graph",
                "gripper",
                "heart",
                "home",
                "horizontal-rule",
                "hubot",
                "inbox",
                "issue-closed",
                "issue-reopened",
                "issues",
                "italic",
                "jersey",
                "json",
                "bracket",
                "kebab-vertical",
                "key",
                "law",
                "lightbulb-autofix",
                "link-external",
                "link",
                "list-ordered",
                "list-unordered",
                "live-share",
                "loading",
                "location",
                "mail-read",
                "mail",
                "markdown",
                "megaphone",
                "mention",
                "milestone",
                "mortar-board",
                "move",
                "multiple-windows",
                "mute",
                "no-newline",
                "note",
                "octoface",
                "open-preview",
                "package",
                "paintcan",
                "pin",
                "play",
                "run",
                "plug",
                "preserve-case",
                "preview",
                "project",
                "pulse",
                "question",
                "quote",
                "radio-tower",
                "reactions",
                "references",
                "refresh",
                "regex",
                "remote-explorer",
                "remote",
                "remove",
                "replace-all",
                "replace",
                "repo-clone",
                "repo-force-push",
                "repo-pull",
                "repo-push",
                "report",
                "request-changes",
                "rocket",
                "root-folder-opened",
                "root-folder",
                "rss",
                "ruby",
                "save-all",
                "save-as",
                "save",
                "screen-full",
                "screen-normal",
                "search-stop",
                "server",
                "settings-gear",
                "settings",
                "shield",
                "smiley",
                "sort-precedence",
                "split-horizontal",
                "split-vertical",
                "squirrel",
                "star-full",
                "star-half",
                "symbol-class",
                "symbol-color",
                "symbol-customcolor",
                "symbol-constant",
                "symbol-enum-member",
                "symbol-field",
                "symbol-file",
                "symbol-interface",
                "symbol-keyword",
                "symbol-misc",
                "symbol-operator",
                "symbol-property",
                "wrench",
                "wrench-subaction",
                "symbol-snippet",
                "tasklist",
                "telescope",
                "text-size",
                "three-bars",
                "thumbsdown",
                "thumbsup",
                "tools",
                "triangle-down",
                "triangle-left",
                "triangle-right",
                "triangle-up",
                "twitter",
                "unfold",
                "unlock",
                "unmute",
                "unverified",
                "verified",
                "versions",
                "vm-active",
                "vm-outline",
                "vm-running",
                "watch",
                "whitespace",
                "whole-word",
                "window",
                "word-wrap",
                "zoom-in",
                "zoom-out",
                "list-filter",
                "list-flat",
                "list-selection",
                "selection",
                "list-tree",
                "debug-breakpoint-function-unverified",
                "debug-breakpoint-function",
                "debug-breakpoint-function-disabled",
                "debug-stackframe-active",
                "circle-small-filled",
                "debug-stackframe-dot",
                "debug-stackframe",
                "debug-stackframe-focused",
                "debug-breakpoint-unsupported",
                "symbol-string",
                "debug-reverse-continue",
                "debug-step-back",
                "debug-restart-frame",
                "call-incoming",
                "call-outgoing",
                "menu",
                "expand-all",
                "feedback",
                "group-by-ref-type",
                "ungroup-by-ref-type",
                "account",
                "bell-dot",
                "debug-console",
                "library",
                "output",
                "run-all",
                "sync-ignored",
                "pinned",
                "github-inverted",
                "debug-alt",
                "server-process",
                "server-environment",
                "pass",
                "stop-circle",
                "play-circle",
                "record",
                "debug-alt-small",
                "vm-connect",
                "cloud",
                "merge",
                "export",
                "graph-left",
                "magnet",
                "notebook",
                "redo",
                "check-all",
                "pinned-dirty",
                "pass-filled",
                "circle-large-filled",
                "circle-large",
                "circle-large-outline",
                "combine",
                "gather",
                "table",
                "variable-group",
                "type-hierarchy",
                "type-hierarchy-sub",
                "type-hierarchy-super",
                "git-pull-request-create",
                "run-above",
                "run-below",
                "notebook-template",
                "debug-rerun",
                "workspace-trusted",
                "workspace-untrusted",
                "workspace-unspecified",
                "terminal-cmd",
                "terminal-debian",
                "terminal-linux",
                "terminal-powershell",
                "terminal-tmux",
                "terminal-ubuntu",
                "terminal-bash",
                "arrow-swap",
                "copy",
                "person-add",
                "filter-filled",
                "wand",
                "debug-line-by-line",
                "inspect",
                "layers",
                "layers-dot",
                "layers-active",
                "compass",
                "compass-dot",
                "compass-active",
                "azure",
                "issue-draft",
                "git-pull-request-closed",
                "git-pull-request-draft",
                "debug-all",
                "debug-coverage",
                "run-errors",
                "folder-library",
                "debug-continue-small",
                "beaker-stop",
                "graph-line",
                "graph-scatter",
                "pie-chart",
                "bracket-dot",
                "bracket-error",
                "lock-small",
                "azure-devops",
                "verified-filled",
                "newline",
                "layout",
                "layout-activitybar-left",
                "layout-activitybar-right",
                "layout-panel-left",
                "layout-panel-center",
                "layout-panel-justify",
                "layout-panel-right",
                "layout-panel",
                "layout-sidebar-left",
                "layout-sidebar-right",
                "layout-statusbar",
                "layout-menubar",
                "layout-centered",
                "layout-sidebar-right-off",
                "layout-panel-off",
                "layout-sidebar-left-off",
                "target",
                "indent",
                "record-small",
                "error-small",
                "arrow-circle-down",
                "arrow-circle-left",
                "arrow-circle-right",
                "arrow-circle-up",
                "heart-filled",
                "map",
                "map-filled",
                "circle-small",
                "bell-slash",
                "bell-slash-dot",
                "comment-unresolved",
                "git-pull-request-go-to-changes",
                "git-pull-request-new-changes",
                "search-fuzzy",
                "comment-draft",
                "dialog-error",
                "dialog-warning",
                "dialog-info",
                "dialog-close",
                "tree-item-expanded",
                "tree-filter-on-type-on",
                "tree-filter-on-type-off",
                "tree-filter-clear",
                "tree-item-loading",
                "menu-selection",
                "menu-submenu",
                "menubar-more",
                "scrollbar-button-left",
                "scrollbar-button-right",
                "scrollbar-button-up",
                "scrollbar-button-down",
                "toolbar-more",
                "quick-input-back"
              ],
              "markdownEnumDescriptions": [
                "$(add)",
                "$(plus)",
                "$(gist-new)",
                "$(repo-create)",
                "$(lightbulb)",
                "$(light-bulb)",
                "$(repo)",
                "$(repo-delete)",
                "$(gist-fork)",
                "$(repo-forked)",
                "$(git-pull-request)",
                "$(git-pull-request-abandoned)",
                "$(record-keys)",
                "$(keyboard)",
                "$(tag)",
                "$(tag-add)",
                "$(tag-remove)",
                "$(person)",
                "$(person-follow)",
                "$(person-outline)",
                "$(person-filled)",
                "$(git-branch)",
                "$(git-branch-create)",
                "$(git-branch-delete)",
                "$(source-control)",
                "$(mirror)",
                "$(mirror-public)",
                "$(star)",
                "$(star-add)",
                "$(star-delete)",
                "$(star-empty)",
                "$(comment)",
                "$(comment-add)",
                "$(alert)",
                "$(warning)",
                "$(search)",
                "$(search-save)",
                "$(log-out)",
                "$(sign-out)",
                "$(log-in)",
                "$(sign-in)",
                "$(eye)",
                "$(eye-unwatch)",
                "$(eye-watch)",
                "$(circle-filled)",
                "$(primitive-dot)",
                "$(close-dirty)",
                "$(debug-breakpoint)",
                "$(debug-breakpoint-disabled)",
                "$(debug-hint)",
                "$(primitive-square)",
                "$(edit)",
                "$(pencil)",
                "$(info)",
                "$(issue-opened)",
                "$(gist-private)",
                "$(git-fork-private)",
                "$(lock)",
                "$(mirror-private)",
                "$(close)",
                "$(remove-close)",
                "$(x)",
                "$(repo-sync)",
                "$(sync)",
                "$(clone)",
                "$(desktop-download)",
                "$(beaker)",
                "$(microscope)",
                "$(vm)",
                "$(device-desktop)",
                "$(file)",
                "$(file-text)",
                "$(more)",
                "$(ellipsis)",
                "$(kebab-horizontal)",
                "$(mail-reply)",
                "$(reply)",
                "$(organization)",
                "$(organization-filled)",
                "$(organization-outline)",
                "$(new-file)",
                "$(file-add)",
                "$(new-folder)",
                "$(file-directory-create)",
                "$(trash)",
                "$(trashcan)",
                "$(history)",
                "$(clock)",
                "$(folder)",
                "$(file-directory)",
                "$(symbol-folder)",
                "$(logo-github)",
                "$(mark-github)",
                "$(github)",
                "$(terminal)",
                "$(console)",
                "$(repl)",
                "$(zap)",
                "$(symbol-event)",
                "$(error)",
                "$(stop)",
                "$(variable)",
                "$(symbol-variable)",
                "$(array)",
                "$(symbol-array)",
                "$(symbol-module)",
                "$(symbol-package)",
                "$(symbol-namespace)",
                "$(symbol-object)",
                "$(symbol-method)",
                "$(symbol-function)",
                "$(symbol-constructor)",
                "$(symbol-boolean)",
                "$(symbol-null)",
                "$(symbol-numeric)",
                "$(symbol-number)",
                "$(symbol-structure)",
                "$(symbol-struct)",
                "$(symbol-parameter)",
                "$(symbol-type-parameter)",
                "$(symbol-key)",
                "$(symbol-text)",
                "$(symbol-reference)",
                "$(go-to-file)",
                "$(symbol-enum)",
                "$(symbol-value)",
                "$(symbol-ruler)",
                "$(symbol-unit)",
                "$(activate-breakpoints)",
                "$(archive)",
                "$(arrow-both)",
                "$(arrow-down)",
                "$(arrow-left)",
                "$(arrow-right)",
                "$(arrow-small-down)",
                "$(arrow-small-left)",
                "$(arrow-small-right)",
                "$(arrow-small-up)",
                "$(arrow-up)",
                "$(bell)",
                "$(bold)",
                "$(book)",
                "$(bookmark)",
                "$(debug-breakpoint-conditional-unverified)",
                "$(debug-breakpoint-conditional)",
                "$(debug-breakpoint-conditional-disabled)",
                "$(debug-breakpoint-data-unverified)",
                "$(debug-breakpoint-data)",
                "$(debug-breakpoint-data-disabled)",
                "$(debug-breakpoint-log-unverified)",
                "$(debug-breakpoint-log)",
                "$(debug-breakpoint-log-disabled)",
                "$(briefcase)",
                "$(broadcast)",
                "$(browser)",
                "$(bug)",
                "$(calendar)",
                "$(case-sensitive)",
                "$(check)",
                "$(checklist)",
                "$(chevron-down)",
                "$(drop-down-button)",
                "$(chevron-left)",
                "$(chevron-right)",
                "$(chevron-up)",
                "$(chrome-close)",
                "$(chrome-maximize)",
                "$(chrome-minimize)",
                "$(chrome-restore)",
                "$(circle)",
                "$(circle-outline)",
                "$(debug-breakpoint-unverified)",
                "$(circle-slash)",
                "$(circuit-board)",
                "$(clear-all)",
                "$(clippy)",
                "$(close-all)",
                "$(cloud-download)",
                "$(cloud-upload)",
                "$(code)",
                "$(collapse-all)",
                "$(color-mode)",
                "$(comment-discussion)",
                "$(compare-changes)",
                "$(credit-card)",
                "$(dash)",
                "$(dashboard)",
                "$(database)",
                "$(debug-continue)",
                "$(debug-disconnect)",
                "$(debug-pause)",
                "$(debug-restart)",
                "$(debug-start)",
                "$(debug-step-into)",
                "$(debug-step-out)",
                "$(debug-step-over)",
                "$(debug-stop)",
                "$(debug)",
                "$(device-camera-video)",
                "$(device-camera)",
                "$(device-mobile)",
                "$(diff-added)",
                "$(diff-ignored)",
                "$(diff-modified)",
                "$(diff-removed)",
                "$(diff-renamed)",
                "$(diff)",
                "$(discard)",
                "$(editor-layout)",
                "$(empty-window)",
                "$(exclude)",
                "$(extensions)",
                "$(eye-closed)",
                "$(file-binary)",
                "$(file-code)",
                "$(file-media)",
                "$(file-pdf)",
                "$(file-submodule)",
                "$(file-symlink-directory)",
                "$(file-symlink-file)",
                "$(file-zip)",
                "$(files)",
                "$(filter)",
                "$(flame)",
                "$(fold-down)",
                "$(fold-up)",
                "$(fold)",
                "$(folder-active)",
                "$(folder-opened)",
                "$(gear)",
                "$(gift)",
                "$(gist-secret)",
                "$(gist)",
                "$(git-commit)",
                "$(git-compare)",
                "$(git-merge)",
                "$(github-action)",
                "$(github-alt)",
                "$(globe)",
                "$(grabber)",
                "$(graph)",
                "$(gripper)",
                "$(heart)",
                "$(home)",
                "$(horizontal-rule)",
                "$(hubot)",
                "$(inbox)",
                "$(issue-closed)",
                "$(issue-reopened)",
                "$(issues)",
                "$(italic)",
                "$(jersey)",
                "$(json)",
                "$(bracket)",
                "$(kebab-vertical)",
                "$(key)",
                "$(law)",
                "$(lightbulb-autofix)",
                "$(link-external)",
                "$(link)",
                "$(list-ordered)",
                "$(list-unordered)",
                "$(live-share)",
                "$(loading)",
                "$(location)",
                "$(mail-read)",
                "$(mail)",
                "$(markdown)",
                "$(megaphone)",
                "$(mention)",
                "$(milestone)",
                "$(mortar-board)",
                "$(move)",
                "$(multiple-windows)",
                "$(mute)",
                "$(no-newline)",
                "$(note)",
                "$(octoface)",
                "$(open-preview)",
                "$(package)",
                "$(paintcan)",
                "$(pin)",
                "$(play)",
                "$(run)",
                "$(plug)",
                "$(preserve-case)",
                "$(preview)",
                "$(project)",
                "$(pulse)",
                "$(question)",
                "$(quote)",
                "$(radio-tower)",
                "$(reactions)",
                "$(references)",
                "$(refresh)",
                "$(regex)",
                "$(remote-explorer)",
                "$(remote)",
                "$(remove)",
                "$(replace-all)",
                "$(replace)",
                "$(repo-clone)",
                "$(repo-force-push)",
                "$(repo-pull)",
                "$(repo-push)",
                "$(report)",
                "$(request-changes)",
                "$(rocket)",
                "$(root-folder-opened)",
                "$(root-folder)",
                "$(rss)",
                "$(ruby)",
                "$(save-all)",
                "$(save-as)",
                "$(save)",
                "$(screen-full)",
                "$(screen-normal)",
                "$(search-stop)",
                "$(server)",
                "$(settings-gear)",
                "$(settings)",
                "$(shield)",
                "$(smiley)",
                "$(sort-precedence)",
                "$(split-horizontal)",
                "$(split-vertical)",
                "$(squirrel)",
                "$(star-full)",
                "$(star-half)",
                "$(symbol-class)",
                "$(symbol-color)",
                "$(symbol-customcolor)",
                "$(symbol-constant)",
                "$(symbol-enum-member)",
                "$(symbol-field)",
                "$(symbol-file)",
                "$(symbol-interface)",
                "$(symbol-keyword)",
                "$(symbol-misc)",
                "$(symbol-operator)",
                "$(symbol-property)",
                "$(wrench)",
                "$(wrench-subaction)",
                "$(symbol-snippet)",
                "$(tasklist)",
                "$(telescope)",
                "$(text-size)",
                "$(three-bars)",
                "$(thumbsdown)",
                "$(thumbsup)",
                "$(tools)",
                "$(triangle-down)",
                "$(triangle-left)",
                "$(triangle-right)",
                "$(triangle-up)",
                "$(twitter)",
                "$(unfold)",
                "$(unlock)",
                "$(unmute)",
                "$(unverified)",
                "$(verified)",
                "$(versions)",
                "$(vm-active)",
                "$(vm-outline)",
                "$(vm-running)",
                "$(watch)",
                "$(whitespace)",
                "$(whole-word)",
                "$(window)",
                "$(word-wrap)",
                "$(zoom-in)",
                "$(zoom-out)",
                "$(list-filter)",
                "$(list-flat)",
                "$(list-selection)",
                "$(selection)",
                "$(list-tree)",
                "$(debug-breakpoint-function-unverified)",
                "$(debug-breakpoint-function)",
                "$(debug-breakpoint-function-disabled)",
                "$(debug-stackframe-active)",
                "$(circle-small-filled)",
                "$(debug-stackframe-dot)",
                "$(debug-stackframe)",
                "$(debug-stackframe-focused)",
                "$(debug-breakpoint-unsupported)",
                "$(symbol-string)",
                "$(debug-reverse-continue)",
                "$(debug-step-back)",
                "$(debug-restart-frame)",
                "$(call-incoming)",
                "$(call-outgoing)",
                "$(menu)",
                "$(expand-all)",
                "$(feedback)",
                "$(group-by-ref-type)",
                "$(ungroup-by-ref-type)",
                "$(account)",
                "$(bell-dot)",
                "$(debug-console)",
                "$(library)",
                "$(output)",
                "$(run-all)",
                "$(sync-ignored)",
                "$(pinned)",
                "$(github-inverted)",
                "$(debug-alt)",
                "$(server-process)",
                "$(server-environment)",
                "$(pass)",
                "$(stop-circle)",
                "$(play-circle)",
                "$(record)",
                "$(debug-alt-small)",
                "$(vm-connect)",
                "$(cloud)",
                "$(merge)",
                "$(export)",
                "$(graph-left)",
                "$(magnet)",
                "$(notebook)",
                "$(redo)",
                "$(check-all)",
                "$(pinned-dirty)",
                "$(pass-filled)",
                "$(circle-large-filled)",
                "$(circle-large)",
                "$(circle-large-outline)",
                "$(combine)",
                "$(gather)",
                "$(table)",
                "$(variable-group)",
                "$(type-hierarchy)",
                "$(type-hierarchy-sub)",
                "$(type-hierarchy-super)",
                "$(git-pull-request-create)",
                "$(run-above)",
                "$(run-below)",
                "$(notebook-template)",
                "$(debug-rerun)",
                "$(workspace-trusted)",
                "$(workspace-untrusted)",
                "$(workspace-unspecified)",
                "$(terminal-cmd)",
                "$(terminal-debian)",
                "$(terminal-linux)",
                "$(terminal-powershell)",
                "$(terminal-tmux)",
                "$(terminal-ubuntu)",
                "$(terminal-bash)",
                "$(arrow-swap)",
                "$(copy)",
                "$(person-add)",
                "$(filter-filled)",
                "$(wand)",
                "$(debug-line-by-line)",
                "$(inspect)",
                "$(layers)",
                "$(layers-dot)",
                "$(layers-active)",
                "$(compass)",
                "$(compass-dot)",
                "$(compass-active)",
                "$(azure)",
                "$(issue-draft)",
                "$(git-pull-request-closed)",
                "$(git-pull-request-draft)",
                "$(debug-all)",
                "$(debug-coverage)",
                "$(run-errors)",
                "$(folder-library)",
                "$(debug-continue-small)",
                "$(beaker-stop)",
                "$(graph-line)",
                "$(graph-scatter)",
                "$(pie-chart)",
                "$(bracket-dot)",
                "$(bracket-error)",
                "$(lock-small)",
                "$(azure-devops)",
                "$(verified-filled)",
                "$(newline)",
                "$(layout)",
                "$(layout-activitybar-left)",
                "$(layout-activitybar-right)",
                "$(layout-panel-left)",
                "$(layout-panel-center)",
                "$(layout-panel-justify)",
                "$(layout-panel-right)",
                "$(layout-panel)",
                "$(layout-sidebar-left)",
                "$(layout-sidebar-right)",
                "$(layout-statusbar)",
                "$(layout-menubar)",
                "$(layout-centered)",
                "$(layout-sidebar-right-off)",
                "$(layout-panel-off)",
                "$(layout-sidebar-left-off)",
                "$(target)",
                "$(indent)",
                "$(record-small)",
                "$(error-small)",
                "$(arrow-circle-down)",
                "$(arrow-circle-left)",
                "$(arrow-circle-right)",
                "$(arrow-circle-up)",
                "$(heart-filled)",
                "$(map)",
                "$(map-filled)",
                "$(circle-small)",
                "$(bell-slash)",
                "$(bell-slash-dot)",
                "$(comment-unresolved)",
                "$(git-pull-request-go-to-changes)",
                "$(git-pull-request-new-changes)",
                "$(search-fuzzy)",
                "$(comment-draft)",
                "$(dialog-error)",
                "$(dialog-warning)",
                "$(dialog-info)",
                "$(dialog-close)",
                "$(tree-item-expanded)",
                "$(tree-filter-on-type-on)",
                "$(tree-filter-on-type-off)",
                "$(tree-filter-clear)",
                "$(tree-item-loading)",
                "$(menu-selection)",
                "$(menu-submenu)",
                "$(menubar-more)",
                "$(scrollbar-button-left)",
                "$(scrollbar-button-right)",
                "$(scrollbar-button-up)",
                "$(scrollbar-button-down)",
                "$(toolbar-more)",
                "$(quick-input-back)"
              ]
            },
            "color": {
              "description": "A theme color ID to associate with the terminal icon.",
              "type": [
                "string",
                "null"
              ],
              "enum": [
                "terminal.ansiBlack",
                "terminal.ansiRed",
                "terminal.ansiGreen",
                "terminal.ansiYellow",
                "terminal.ansiBlue",
                "terminal.ansiMagenta",
                "terminal.ansiCyan",
                "terminal.ansiWhite"
              ],
              "default": null
            },
            "env": {
              "markdownDescription": "An object with environment variables that will be added to the terminal profile process. Set to `null` to delete environment variables from the base environment.",
              "type": "object",
              "additionalProperties": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "default": {}
            }
          }
        }
      ],
      "defaultSnippets": [
        {
          "body": {
            "path": "${1}",
            "icon": "${2}"
          }
        }
      ],
      "defaultDefaultValue": null,
      "scope": 3
    },
    "terminal.integrated.shell.linux": {
      "restricted": true,
      "markdownDescription": "The path of the shell that the terminal uses on Linux. [Read more about configuring the shell](https://code.visualstudio.com/docs/editor/integrated-terminal#_terminal-profiles).",
      "type": [
        "string",
        "null"
      ],
      "default": null,
      "markdownDeprecationMessage": "This is deprecated, the new recommended way to configure your default shell is by creating a terminal profile in `#terminal.integrated.profiles.linux#` and setting its profile name as the default in `#terminal.integrated.defaultProfile.linux#`. This will currently take priority over the new profiles settings but that will change in the future.",
      "defaultDefaultValue": null,
      "scope": 3,
      "deprecationMessage": "This is deprecated, the new recommended way to configure your default shell is by creating a terminal profile in `#terminal.integrated.profiles.linux#` and setting its profile name as the default in `#terminal.integrated.defaultProfile.linux#`. This will currently take priority over the new profiles settings but that will change in the future."
    },
    "terminal.integrated.shell.osx": {
      "restricted": true,
      "markdownDescription": "The path of the shell that the terminal uses on macOS. [Read more about configuring the shell](https://code.visualstudio.com/docs/editor/integrated-terminal#_terminal-profiles).",
      "type": [
        "string",
        "null"
      ],
      "default": null,
      "markdownDeprecationMessage": "This is deprecated, the new recommended way to configure your default shell is by creating a terminal profile in `#terminal.integrated.profiles.osx#` and setting its profile name as the default in `#terminal.integrated.defaultProfile.osx#`. This will currently take priority over the new profiles settings but that will change in the future.",
      "defaultDefaultValue": null,
      "scope": 3,
      "deprecationMessage": "This is deprecated, the new recommended way to configure your default shell is by creating a terminal profile in `#terminal.integrated.profiles.osx#` and setting its profile name as the default in `#terminal.integrated.defaultProfile.osx#`. This will currently take priority over the new profiles settings but that will change in the future."
    },
    "terminal.integrated.shell.windows": {
      "restricted": true,
      "markdownDescription": "The path of the shell that the terminal uses on Windows. [Read more about configuring the shell](https://code.visualstudio.com/docs/editor/integrated-terminal#_terminal-profiles).",
      "type": [
        "string",
        "null"
      ],
      "default": null,
      "markdownDeprecationMessage": "This is deprecated, the new recommended way to configure your default shell is by creating a terminal profile in `#terminal.integrated.profiles.windows#` and setting its profile name as the default in `#terminal.integrated.defaultProfile.windows#`. This will currently take priority over the new profiles settings but that will change in the future.",
      "defaultDefaultValue": null,
      "scope": 3,
      "deprecationMessage": "This is deprecated, the new recommended way to configure your default shell is by creating a terminal profile in `#terminal.integrated.profiles.windows#` and setting its profile name as the default in `#terminal.integrated.defaultProfile.windows#`. This will currently take priority over the new profiles settings but that will change in the future."
    },
    "terminal.integrated.shellArgs.linux": {
      "restricted": true,
      "markdownDescription": "The command line arguments to use when on the Linux terminal. [Read more about configuring the shell](https://code.visualstudio.com/docs/editor/integrated-terminal#_terminal-profiles).",
      "type": "array",
      "items": {
        "type": "string"
      },
      "default": [],
      "markdownDeprecationMessage": "This is deprecated, the new recommended way to configure your default shell is by creating a terminal profile in `#terminal.integrated.profiles.linux#` and setting its profile name as the default in `#terminal.integrated.defaultProfile.linux#`. This will currently take priority over the new profiles settings but that will change in the future.",
      "defaultDefaultValue": [],
      "scope": 3,
      "deprecationMessage": "This is deprecated, the new recommended way to configure your default shell is by creating a terminal profile in `#terminal.integrated.profiles.linux#` and setting its profile name as the default in `#terminal.integrated.defaultProfile.linux#`. This will currently take priority over the new profiles settings but that will change in the future."
    },
    "terminal.integrated.shellArgs.osx": {
      "restricted": true,
      "markdownDescription": "The command line arguments to use when on the macOS terminal. [Read more about configuring the shell](https://code.visualstudio.com/docs/editor/integrated-terminal#_terminal-profiles).",
      "type": "array",
      "items": {
        "type": "string"
      },
      "default": [
        "-l"
      ],
      "markdownDeprecationMessage": "This is deprecated, the new recommended way to configure your default shell is by creating a terminal profile in `#terminal.integrated.profiles.osx#` and setting its profile name as the default in `#terminal.integrated.defaultProfile.osx#`. This will currently take priority over the new profiles settings but that will change in the future.",
      "defaultDefaultValue": [
        "-l"
      ],
      "scope": 3,
      "deprecationMessage": "This is deprecated, the new recommended way to configure your default shell is by creating a terminal profile in `#terminal.integrated.profiles.osx#` and setting its profile name as the default in `#terminal.integrated.defaultProfile.osx#`. This will currently take priority over the new profiles settings but that will change in the future."
    },
    "terminal.integrated.shellArgs.windows": {
      "restricted": true,
      "markdownDescription": "The command line arguments to use when on the Windows terminal. [Read more about configuring the shell](https://code.visualstudio.com/docs/editor/integrated-terminal#_terminal-profiles).",
      "anyOf": [
        {
          "type": "array",
          "items": {
            "type": "string",
            "markdownDescription": "The command line arguments to use when on the Windows terminal. [Read more about configuring the shell](https://code.visualstudio.com/docs/editor/integrated-terminal#_terminal-profiles)."
          }
        },
        {
          "type": "string",
          "markdownDescription": "The command line arguments in [command-line format](https://msdn.microsoft.com/en-au/08dfcab2-eb6e-49a4-80eb-87d4076c98c6) to use when on the Windows terminal. [Read more about configuring the shell](https://code.visualstudio.com/docs/editor/integrated-terminal#_terminal-profiles)."
        }
      ],
      "default": [],
      "markdownDeprecationMessage": "This is deprecated, the new recommended way to configure your default shell is by creating a terminal profile in `#terminal.integrated.profiles.windows#` and setting its profile name as the default in `#terminal.integrated.defaultProfile.windows#`. This will currently take priority over the new profiles settings but that will change in the future.",
      "defaultDefaultValue": [],
      "scope": 3,
      "deprecationMessage": "This is deprecated, the new recommended way to configure your default shell is by creating a terminal profile in `#terminal.integrated.profiles.windows#` and setting its profile name as the default in `#terminal.integrated.defaultProfile.windows#`. This will currently take priority over the new profiles settings but that will change in the future."
    },
    "terminal.integrated.profiles.windows": {
      "restricted": true,
      "markdownDescription": "The Windows profiles to present when creating a new terminal via the terminal dropdown. Use the `source` property to automatically detect the shell's location. Or set the `path` property manually with an optional `args`.\n\nSet an existing profile to `null` to hide the profile from the list, for example: `\"Ubuntu-20.04 (WSL)\": null`.",
      "type": "object",
      "default": {
        "PowerShell": {
          "source": "PowerShell",
          "icon": "terminal-powershell"
        },
        "Command Prompt": {
          "path": [
            "${env:windir}\\Sysnative\\cmd.exe",
            "${env:windir}\\System32\\cmd.exe"
          ],
          "args": [],
          "icon": "terminal-cmd"
        },
        "Git Bash": {
          "source": "Git Bash"
        }
      },
      "additionalProperties": {
        "anyOf": [
          {
            "type": "object",
            "required": [
              "source"
            ],
            "properties": {
              "source": {
                "description": "A profile source that will auto detect the paths to the shell. Note that non-standard executable locations are not supported and must be created manually in a new profile.",
                "enum": [
                  "PowerShell",
                  "Git Bash"
                ]
              },
              "args": {
                "description": "An optional set of arguments to run the shell executable with.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "overrideName": {
                "description": "Controls whether or not the profile name overrides the auto detected one.",
                "type": "boolean"
              },
              "icon": {
                "description": "A codicon ID to associate with the terminal icon.",
                "type": "string",
                "enum": [
                  "add",
                  "plus",
                  "gist-new",
                  "repo-create",
                  "lightbulb",
                  "light-bulb",
                  "repo",
                  "repo-delete",
                  "gist-fork",
                  "repo-forked",
                  "git-pull-request",
                  "git-pull-request-abandoned",
                  "record-keys",
                  "keyboard",
                  "tag",
                  "tag-add",
                  "tag-remove",
                  "person",
                  "person-follow",
                  "person-outline",
                  "person-filled",
                  "git-branch",
                  "git-branch-create",
                  "git-branch-delete",
                  "source-control",
                  "mirror",
                  "mirror-public",
                  "star",
                  "star-add",
                  "star-delete",
                  "star-empty",
                  "comment",
                  "comment-add",
                  "alert",
                  "warning",
                  "search",
                  "search-save",
                  "log-out",
                  "sign-out",
                  "log-in",
                  "sign-in",
                  "eye",
                  "eye-unwatch",
                  "eye-watch",
                  "circle-filled",
                  "primitive-dot",
                  "close-dirty",
                  "debug-breakpoint",
                  "debug-breakpoint-disabled",
                  "debug-hint",
                  "primitive-square",
                  "edit",
                  "pencil",
                  "info",
                  "issue-opened",
                  "gist-private",
                  "git-fork-private",
                  "lock",
                  "mirror-private",
                  "close",
                  "remove-close",
                  "x",
                  "repo-sync",
                  "sync",
                  "clone",
                  "desktop-download",
                  "beaker",
                  "microscope",
                  "vm",
                  "device-desktop",
                  "file",
                  "file-text",
                  "more",
                  "ellipsis",
                  "kebab-horizontal",
                  "mail-reply",
                  "reply",
                  "organization",
                  "organization-filled",
                  "organization-outline",
                  "new-file",
                  "file-add",
                  "new-folder",
                  "file-directory-create",
                  "trash",
                  "trashcan",
                  "history",
                  "clock",
                  "folder",
                  "file-directory",
                  "symbol-folder",
                  "logo-github",
                  "mark-github",
                  "github",
                  "terminal",
                  "console",
                  "repl",
                  "zap",
                  "symbol-event",
                  "error",
                  "stop",
                  "variable",
                  "symbol-variable",
                  "array",
                  "symbol-array",
                  "symbol-module",
                  "symbol-package",
                  "symbol-namespace",
                  "symbol-object",
                  "symbol-method",
                  "symbol-function",
                  "symbol-constructor",
                  "symbol-boolean",
                  "symbol-null",
                  "symbol-numeric",
                  "symbol-number",
                  "symbol-structure",
                  "symbol-struct",
                  "symbol-parameter",
                  "symbol-type-parameter",
                  "symbol-key",
                  "symbol-text",
                  "symbol-reference",
                  "go-to-file",
                  "symbol-enum",
                  "symbol-value",
                  "symbol-ruler",
                  "symbol-unit",
                  "activate-breakpoints",
                  "archive",
                  "arrow-both",
                  "arrow-down",
                  "arrow-left",
                  "arrow-right",
                  "arrow-small-down",
                  "arrow-small-left",
                  "arrow-small-right",
                  "arrow-small-up",
                  "arrow-up",
                  "bell",
                  "bold",
                  "book",
                  "bookmark",
                  "debug-breakpoint-conditional-unverified",
                  "debug-breakpoint-conditional",
                  "debug-breakpoint-conditional-disabled",
                  "debug-breakpoint-data-unverified",
                  "debug-breakpoint-data",
                  "debug-breakpoint-data-disabled",
                  "debug-breakpoint-log-unverified",
                  "debug-breakpoint-log",
                  "debug-breakpoint-log-disabled",
                  "briefcase",
                  "broadcast",
                  "browser",
                  "bug",
                  "calendar",
                  "case-sensitive",
                  "check",
                  "checklist",
                  "chevron-down",
                  "drop-down-button",
                  "chevron-left",
                  "chevron-right",
                  "chevron-up",
                  "chrome-close",
                  "chrome-maximize",
                  "chrome-minimize",
                  "chrome-restore",
                  "circle",
                  "circle-outline",
                  "debug-breakpoint-unverified",
                  "circle-slash",
                  "circuit-board",
                  "clear-all",
                  "clippy",
                  "close-all",
                  "cloud-download",
                  "cloud-upload",
                  "code",
                  "collapse-all",
                  "color-mode",
                  "comment-discussion",
                  "compare-changes",
                  "credit-card",
                  "dash",
                  "dashboard",
                  "database",
                  "debug-continue",
                  "debug-disconnect",
                  "debug-pause",
                  "debug-restart",
                  "debug-start",
                  "debug-step-into",
                  "debug-step-out",
                  "debug-step-over",
                  "debug-stop",
                  "debug",
                  "device-camera-video",
                  "device-camera",
                  "device-mobile",
                  "diff-added",
                  "diff-ignored",
                  "diff-modified",
                  "diff-removed",
                  "diff-renamed",
                  "diff",
                  "discard",
                  "editor-layout",
                  "empty-window",
                  "exclude",
                  "extensions",
                  "eye-closed",
                  "file-binary",
                  "file-code",
                  "file-media",
                  "file-pdf",
                  "file-submodule",
                  "file-symlink-directory",
                  "file-symlink-file",
                  "file-zip",
                  "files",
                  "filter",
                  "flame",
                  "fold-down",
                  "fold-up",
                  "fold",
                  "folder-active",
                  "folder-opened",
                  "gear",
                  "gift",
                  "gist-secret",
                  "gist",
                  "git-commit",
                  "git-compare",
                  "git-merge",
                  "github-action",
                  "github-alt",
                  "globe",
                  "grabber",
                  "graph",
                  "gripper",
                  "heart",
                  "home",
                  "horizontal-rule",
                  "hubot",
                  "inbox",
                  "issue-closed",
                  "issue-reopened",
                  "issues",
                  "italic",
                  "jersey",
                  "json",
                  "bracket",
                  "kebab-vertical",
                  "key",
                  "law",
                  "lightbulb-autofix",
                  "link-external",
                  "link",
                  "list-ordered",
                  "list-unordered",
                  "live-share",
                  "loading",
                  "location",
                  "mail-read",
                  "mail",
                  "markdown",
                  "megaphone",
                  "mention",
                  "milestone",
                  "mortar-board",
                  "move",
                  "multiple-windows",
                  "mute",
                  "no-newline",
                  "note",
                  "octoface",
                  "open-preview",
                  "package",
                  "paintcan",
                  "pin",
                  "play",
                  "run",
                  "plug",
                  "preserve-case",
                  "preview",
                  "project",
                  "pulse",
                  "question",
                  "quote",
                  "radio-tower",
                  "reactions",
                  "references",
                  "refresh",
                  "regex",
                  "remote-explorer",
                  "remote",
                  "remove",
                  "replace-all",
                  "replace",
                  "repo-clone",
                  "repo-force-push",
                  "repo-pull",
                  "repo-push",
                  "report",
                  "request-changes",
                  "rocket",
                  "root-folder-opened",
                  "root-folder",
                  "rss",
                  "ruby",
                  "save-all",
                  "save-as",
                  "save",
                  "screen-full",
                  "screen-normal",
                  "search-stop",
                  "server",
                  "settings-gear",
                  "settings",
                  "shield",
                  "smiley",
                  "sort-precedence",
                  "split-horizontal",
                  "split-vertical",
                  "squirrel",
                  "star-full",
                  "star-half",
                  "symbol-class",
                  "symbol-color",
                  "symbol-customcolor",
                  "symbol-constant",
                  "symbol-enum-member",
                  "symbol-field",
                  "symbol-file",
                  "symbol-interface",
                  "symbol-keyword",
                  "symbol-misc",
                  "symbol-operator",
                  "symbol-property",
                  "wrench",
                  "wrench-subaction",
                  "symbol-snippet",
                  "tasklist",
                  "telescope",
                  "text-size",
                  "three-bars",
                  "thumbsdown",
                  "thumbsup",
                  "tools",
                  "triangle-down",
                  "triangle-left",
                  "triangle-right",
                  "triangle-up",
                  "twitter",
                  "unfold",
                  "unlock",
                  "unmute",
                  "unverified",
                  "verified",
                  "versions",
                  "vm-active",
                  "vm-outline",
                  "vm-running",
                  "watch",
                  "whitespace",
                  "whole-word",
                  "window",
                  "word-wrap",
                  "zoom-in",
                  "zoom-out",
                  "list-filter",
                  "list-flat",
                  "list-selection",
                  "selection",
                  "list-tree",
                  "debug-breakpoint-function-unverified",
                  "debug-breakpoint-function",
                  "debug-breakpoint-function-disabled",
                  "debug-stackframe-active",
                  "circle-small-filled",
                  "debug-stackframe-dot",
                  "debug-stackframe",
                  "debug-stackframe-focused",
                  "debug-breakpoint-unsupported",
                  "symbol-string",
                  "debug-reverse-continue",
                  "debug-step-back",
                  "debug-restart-frame",
                  "call-incoming",
                  "call-outgoing",
                  "menu",
                  "expand-all",
                  "feedback",
                  "group-by-ref-type",
                  "ungroup-by-ref-type",
                  "account",
                  "bell-dot",
                  "debug-console",
                  "library",
                  "output",
                  "run-all",
                  "sync-ignored",
                  "pinned",
                  "github-inverted",
                  "debug-alt",
                  "server-process",
                  "server-environment",
                  "pass",
                  "stop-circle",
                  "play-circle",
                  "record",
                  "debug-alt-small",
                  "vm-connect",
                  "cloud",
                  "merge",
                  "export",
                  "graph-left",
                  "magnet",
                  "notebook",
                  "redo",
                  "check-all",
                  "pinned-dirty",
                  "pass-filled",
                  "circle-large-filled",
                  "circle-large",
                  "circle-large-outline",
                  "combine",
                  "gather",
                  "table",
                  "variable-group",
                  "type-hierarchy",
                  "type-hierarchy-sub",
                  "type-hierarchy-super",
                  "git-pull-request-create",
                  "run-above",
                  "run-below",
                  "notebook-template",
                  "debug-rerun",
                  "workspace-trusted",
                  "workspace-untrusted",
                  "workspace-unspecified",
                  "terminal-cmd",
                  "terminal-debian",
                  "terminal-linux",
                  "terminal-powershell",
                  "terminal-tmux",
                  "terminal-ubuntu",
                  "terminal-bash",
                  "arrow-swap",
                  "copy",
                  "person-add",
                  "filter-filled",
                  "wand",
                  "debug-line-by-line",
                  "inspect",
                  "layers",
                  "layers-dot",
                  "layers-active",
                  "compass",
                  "compass-dot",
                  "compass-active",
                  "azure",
                  "issue-draft",
                  "git-pull-request-closed",
                  "git-pull-request-draft",
                  "debug-all",
                  "debug-coverage",
                  "run-errors",
                  "folder-library",
                  "debug-continue-small",
                  "beaker-stop",
                  "graph-line",
                  "graph-scatter",
                  "pie-chart",
                  "bracket-dot",
                  "bracket-error",
                  "lock-small",
                  "azure-devops",
                  "verified-filled",
                  "newline",
                  "layout",
                  "layout-activitybar-left",
                  "layout-activitybar-right",
                  "layout-panel-left",
                  "layout-panel-center",
                  "layout-panel-justify",
                  "layout-panel-right",
                  "layout-panel",
                  "layout-sidebar-left",
                  "layout-sidebar-right",
                  "layout-statusbar",
                  "layout-menubar",
                  "layout-centered",
                  "layout-sidebar-right-off",
                  "layout-panel-off",
                  "layout-sidebar-left-off",
                  "target",
                  "indent",
                  "record-small",
                  "error-small",
                  "arrow-circle-down",
                  "arrow-circle-left",
                  "arrow-circle-right",
                  "arrow-circle-up",
                  "heart-filled",
                  "map",
                  "map-filled",
                  "circle-small",
                  "bell-slash",
                  "bell-slash-dot",
                  "comment-unresolved",
                  "git-pull-request-go-to-changes",
                  "git-pull-request-new-changes",
                  "search-fuzzy",
                  "comment-draft",
                  "dialog-error",
                  "dialog-warning",
                  "dialog-info",
                  "dialog-close",
                  "tree-item-expanded",
                  "tree-filter-on-type-on",
                  "tree-filter-on-type-off",
                  "tree-filter-clear",
                  "tree-item-loading",
                  "menu-selection",
                  "menu-submenu",
                  "menubar-more",
                  "scrollbar-button-left",
                  "scrollbar-button-right",
                  "scrollbar-button-up",
                  "scrollbar-button-down",
                  "toolbar-more",
                  "quick-input-back"
                ],
                "markdownEnumDescriptions": [
                  "$(add)",
                  "$(plus)",
                  "$(gist-new)",
                  "$(repo-create)",
                  "$(lightbulb)",
                  "$(light-bulb)",
                  "$(repo)",
                  "$(repo-delete)",
                  "$(gist-fork)",
                  "$(repo-forked)",
                  "$(git-pull-request)",
                  "$(git-pull-request-abandoned)",
                  "$(record-keys)",
                  "$(keyboard)",
                  "$(tag)",
                  "$(tag-add)",
                  "$(tag-remove)",
                  "$(person)",
                  "$(person-follow)",
                  "$(person-outline)",
                  "$(person-filled)",
                  "$(git-branch)",
                  "$(git-branch-create)",
                  "$(git-branch-delete)",
                  "$(source-control)",
                  "$(mirror)",
                  "$(mirror-public)",
                  "$(star)",
                  "$(star-add)",
                  "$(star-delete)",
                  "$(star-empty)",
                  "$(comment)",
                  "$(comment-add)",
                  "$(alert)",
                  "$(warning)",
                  "$(search)",
                  "$(search-save)",
                  "$(log-out)",
                  "$(sign-out)",
                  "$(log-in)",
                  "$(sign-in)",
                  "$(eye)",
                  "$(eye-unwatch)",
                  "$(eye-watch)",
                  "$(circle-filled)",
                  "$(primitive-dot)",
                  "$(close-dirty)",
                  "$(debug-breakpoint)",
                  "$(debug-breakpoint-disabled)",
                  "$(debug-hint)",
                  "$(primitive-square)",
                  "$(edit)",
                  "$(pencil)",
                  "$(info)",
                  "$(issue-opened)",
                  "$(gist-private)",
                  "$(git-fork-private)",
                  "$(lock)",
                  "$(mirror-private)",
                  "$(close)",
                  "$(remove-close)",
                  "$(x)",
                  "$(repo-sync)",
                  "$(sync)",
                  "$(clone)",
                  "$(desktop-download)",
                  "$(beaker)",
                  "$(microscope)",
                  "$(vm)",
                  "$(device-desktop)",
                  "$(file)",
                  "$(file-text)",
                  "$(more)",
                  "$(ellipsis)",
                  "$(kebab-horizontal)",
                  "$(mail-reply)",
                  "$(reply)",
                  "$(organization)",
                  "$(organization-filled)",
                  "$(organization-outline)",
                  "$(new-file)",
                  "$(file-add)",
                  "$(new-folder)",
                  "$(file-directory-create)",
                  "$(trash)",
                  "$(trashcan)",
                  "$(history)",
                  "$(clock)",
                  "$(folder)",
                  "$(file-directory)",
                  "$(symbol-folder)",
                  "$(logo-github)",
                  "$(mark-github)",
                  "$(github)",
                  "$(terminal)",
                  "$(console)",
                  "$(repl)",
                  "$(zap)",
                  "$(symbol-event)",
                  "$(error)",
                  "$(stop)",
                  "$(variable)",
                  "$(symbol-variable)",
                  "$(array)",
                  "$(symbol-array)",
                  "$(symbol-module)",
                  "$(symbol-package)",
                  "$(symbol-namespace)",
                  "$(symbol-object)",
                  "$(symbol-method)",
                  "$(symbol-function)",
                  "$(symbol-constructor)",
                  "$(symbol-boolean)",
                  "$(symbol-null)",
                  "$(symbol-numeric)",
                  "$(symbol-number)",
                  "$(symbol-structure)",
                  "$(symbol-struct)",
                  "$(symbol-parameter)",
                  "$(symbol-type-parameter)",
                  "$(symbol-key)",
                  "$(symbol-text)",
                  "$(symbol-reference)",
                  "$(go-to-file)",
                  "$(symbol-enum)",
                  "$(symbol-value)",
                  "$(symbol-ruler)",
                  "$(symbol-unit)",
                  "$(activate-breakpoints)",
                  "$(archive)",
                  "$(arrow-both)",
                  "$(arrow-down)",
                  "$(arrow-left)",
                  "$(arrow-right)",
                  "$(arrow-small-down)",
                  "$(arrow-small-left)",
                  "$(arrow-small-right)",
                  "$(arrow-small-up)",
                  "$(arrow-up)",
                  "$(bell)",
                  "$(bold)",
                  "$(book)",
                  "$(bookmark)",
                  "$(debug-breakpoint-conditional-unverified)",
                  "$(debug-breakpoint-conditional)",
                  "$(debug-breakpoint-conditional-disabled)",
                  "$(debug-breakpoint-data-unverified)",
                  "$(debug-breakpoint-data)",
                  "$(debug-breakpoint-data-disabled)",
                  "$(debug-breakpoint-log-unverified)",
                  "$(debug-breakpoint-log)",
                  "$(debug-breakpoint-log-disabled)",
                  "$(briefcase)",
                  "$(broadcast)",
                  "$(browser)",
                  "$(bug)",
                  "$(calendar)",
                  "$(case-sensitive)",
                  "$(check)",
                  "$(checklist)",
                  "$(chevron-down)",
                  "$(drop-down-button)",
                  "$(chevron-left)",
                  "$(chevron-right)",
                  "$(chevron-up)",
                  "$(chrome-close)",
                  "$(chrome-maximize)",
                  "$(chrome-minimize)",
                  "$(chrome-restore)",
                  "$(circle)",
                  "$(circle-outline)",
                  "$(debug-breakpoint-unverified)",
                  "$(circle-slash)",
                  "$(circuit-board)",
                  "$(clear-all)",
                  "$(clippy)",
                  "$(close-all)",
                  "$(cloud-download)",
                  "$(cloud-upload)",
                  "$(code)",
                  "$(collapse-all)",
                  "$(color-mode)",
                  "$(comment-discussion)",
                  "$(compare-changes)",
                  "$(credit-card)",
                  "$(dash)",
                  "$(dashboard)",
                  "$(database)",
                  "$(debug-continue)",
                  "$(debug-disconnect)",
                  "$(debug-pause)",
                  "$(debug-restart)",
                  "$(debug-start)",
                  "$(debug-step-into)",
                  "$(debug-step-out)",
                  "$(debug-step-over)",
                  "$(debug-stop)",
                  "$(debug)",
                  "$(device-camera-video)",
                  "$(device-camera)",
                  "$(device-mobile)",
                  "$(diff-added)",
                  "$(diff-ignored)",
                  "$(diff-modified)",
                  "$(diff-removed)",
                  "$(diff-renamed)",
                  "$(diff)",
                  "$(discard)",
                  "$(editor-layout)",
                  "$(empty-window)",
                  "$(exclude)",
                  "$(extensions)",
                  "$(eye-closed)",
                  "$(file-binary)",
                  "$(file-code)",
                  "$(file-media)",
                  "$(file-pdf)",
                  "$(file-submodule)",
                  "$(file-symlink-directory)",
                  "$(file-symlink-file)",
                  "$(file-zip)",
                  "$(files)",
                  "$(filter)",
                  "$(flame)",
                  "$(fold-down)",
                  "$(fold-up)",
                  "$(fold)",
                  "$(folder-active)",
                  "$(folder-opened)",
                  "$(gear)",
                  "$(gift)",
                  "$(gist-secret)",
                  "$(gist)",
                  "$(git-commit)",
                  "$(git-compare)",
                  "$(git-merge)",
                  "$(github-action)",
                  "$(github-alt)",
                  "$(globe)",
                  "$(grabber)",
                  "$(graph)",
                  "$(gripper)",
                  "$(heart)",
                  "$(home)",
                  "$(horizontal-rule)",
                  "$(hubot)",
                  "$(inbox)",
                  "$(issue-closed)",
                  "$(issue-reopened)",
                  "$(issues)",
                  "$(italic)",
                  "$(jersey)",
                  "$(json)",
                  "$(bracket)",
                  "$(kebab-vertical)",
                  "$(key)",
                  "$(law)",
                  "$(lightbulb-autofix)",
                  "$(link-external)",
                  "$(link)",
                  "$(list-ordered)",
                  "$(list-unordered)",
                  "$(live-share)",
                  "$(loading)",
                  "$(location)",
                  "$(mail-read)",
                  "$(mail)",
                  "$(markdown)",
                  "$(megaphone)",
                  "$(mention)",
                  "$(milestone)",
                  "$(mortar-board)",
                  "$(move)",
                  "$(multiple-windows)",
                  "$(mute)",
                  "$(no-newline)",
                  "$(note)",
                  "$(octoface)",
                  "$(open-preview)",
                  "$(package)",
                  "$(paintcan)",
                  "$(pin)",
                  "$(play)",
                  "$(run)",
                  "$(plug)",
                  "$(preserve-case)",
                  "$(preview)",
                  "$(project)",
                  "$(pulse)",
                  "$(question)",
                  "$(quote)",
                  "$(radio-tower)",
                  "$(reactions)",
                  "$(references)",
                  "$(refresh)",
                  "$(regex)",
                  "$(remote-explorer)",
                  "$(remote)",
                  "$(remove)",
                  "$(replace-all)",
                  "$(replace)",
                  "$(repo-clone)",
                  "$(repo-force-push)",
                  "$(repo-pull)",
                  "$(repo-push)",
                  "$(report)",
                  "$(request-changes)",
                  "$(rocket)",
                  "$(root-folder-opened)",
                  "$(root-folder)",
                  "$(rss)",
                  "$(ruby)",
                  "$(save-all)",
                  "$(save-as)",
                  "$(save)",
                  "$(screen-full)",
                  "$(screen-normal)",
                  "$(search-stop)",
                  "$(server)",
                  "$(settings-gear)",
                  "$(settings)",
                  "$(shield)",
                  "$(smiley)",
                  "$(sort-precedence)",
                  "$(split-horizontal)",
                  "$(split-vertical)",
                  "$(squirrel)",
                  "$(star-full)",
                  "$(star-half)",
                  "$(symbol-class)",
                  "$(symbol-color)",
                  "$(symbol-customcolor)",
                  "$(symbol-constant)",
                  "$(symbol-enum-member)",
                  "$(symbol-field)",
                  "$(symbol-file)",
                  "$(symbol-interface)",
                  "$(symbol-keyword)",
                  "$(symbol-misc)",
                  "$(symbol-operator)",
                  "$(symbol-property)",
                  "$(wrench)",
                  "$(wrench-subaction)",
                  "$(symbol-snippet)",
                  "$(tasklist)",
                  "$(telescope)",
                  "$(text-size)",
                  "$(three-bars)",
                  "$(thumbsdown)",
                  "$(thumbsup)",
                  "$(tools)",
                  "$(triangle-down)",
                  "$(triangle-left)",
                  "$(triangle-right)",
                  "$(triangle-up)",
                  "$(twitter)",
                  "$(unfold)",
                  "$(unlock)",
                  "$(unmute)",
                  "$(unverified)",
                  "$(verified)",
                  "$(versions)",
                  "$(vm-active)",
                  "$(vm-outline)",
                  "$(vm-running)",
                  "$(watch)",
                  "$(whitespace)",
                  "$(whole-word)",
                  "$(window)",
                  "$(word-wrap)",
                  "$(zoom-in)",
                  "$(zoom-out)",
                  "$(list-filter)",
                  "$(list-flat)",
                  "$(list-selection)",
                  "$(selection)",
                  "$(list-tree)",
                  "$(debug-breakpoint-function-unverified)",
                  "$(debug-breakpoint-function)",
                  "$(debug-breakpoint-function-disabled)",
                  "$(debug-stackframe-active)",
                  "$(circle-small-filled)",
                  "$(debug-stackframe-dot)",
                  "$(debug-stackframe)",
                  "$(debug-stackframe-focused)",
                  "$(debug-breakpoint-unsupported)",
                  "$(symbol-string)",
                  "$(debug-reverse-continue)",
                  "$(debug-step-back)",
                  "$(debug-restart-frame)",
                  "$(call-incoming)",
                  "$(call-outgoing)",
                  "$(menu)",
                  "$(expand-all)",
                  "$(feedback)",
                  "$(group-by-ref-type)",
                  "$(ungroup-by-ref-type)",
                  "$(account)",
                  "$(bell-dot)",
                  "$(debug-console)",
                  "$(library)",
                  "$(output)",
                  "$(run-all)",
                  "$(sync-ignored)",
                  "$(pinned)",
                  "$(github-inverted)",
                  "$(debug-alt)",
                  "$(server-process)",
                  "$(server-environment)",
                  "$(pass)",
                  "$(stop-circle)",
                  "$(play-circle)",
                  "$(record)",
                  "$(debug-alt-small)",
                  "$(vm-connect)",
                  "$(cloud)",
                  "$(merge)",
                  "$(export)",
                  "$(graph-left)",
                  "$(magnet)",
                  "$(notebook)",
                  "$(redo)",
                  "$(check-all)",
                  "$(pinned-dirty)",
                  "$(pass-filled)",
                  "$(circle-large-filled)",
                  "$(circle-large)",
                  "$(circle-large-outline)",
                  "$(combine)",
                  "$(gather)",
                  "$(table)",
                  "$(variable-group)",
                  "$(type-hierarchy)",
                  "$(type-hierarchy-sub)",
                  "$(type-hierarchy-super)",
                  "$(git-pull-request-create)",
                  "$(run-above)",
                  "$(run-below)",
                  "$(notebook-template)",
                  "$(debug-rerun)",
                  "$(workspace-trusted)",
                  "$(workspace-untrusted)",
                  "$(workspace-unspecified)",
                  "$(terminal-cmd)",
                  "$(terminal-debian)",
                  "$(terminal-linux)",
                  "$(terminal-powershell)",
                  "$(terminal-tmux)",
                  "$(terminal-ubuntu)",
                  "$(terminal-bash)",
                  "$(arrow-swap)",
                  "$(copy)",
                  "$(person-add)",
                  "$(filter-filled)",
                  "$(wand)",
                  "$(debug-line-by-line)",
                  "$(inspect)",
                  "$(layers)",
                  "$(layers-dot)",
                  "$(layers-active)",
                  "$(compass)",
                  "$(compass-dot)",
                  "$(compass-active)",
                  "$(azure)",
                  "$(issue-draft)",
                  "$(git-pull-request-closed)",
                  "$(git-pull-request-draft)",
                  "$(debug-all)",
                  "$(debug-coverage)",
                  "$(run-errors)",
                  "$(folder-library)",
                  "$(debug-continue-small)",
                  "$(beaker-stop)",
                  "$(graph-line)",
                  "$(graph-scatter)",
                  "$(pie-chart)",
                  "$(bracket-dot)",
                  "$(bracket-error)",
                  "$(lock-small)",
                  "$(azure-devops)",
                  "$(verified-filled)",
                  "$(newline)",
                  "$(layout)",
                  "$(layout-activitybar-left)",
                  "$(layout-activitybar-right)",
                  "$(layout-panel-left)",
                  "$(layout-panel-center)",
                  "$(layout-panel-justify)",
                  "$(layout-panel-right)",
                  "$(layout-panel)",
                  "$(layout-sidebar-left)",
                  "$(layout-sidebar-right)",
                  "$(layout-statusbar)",
                  "$(layout-menubar)",
                  "$(layout-centered)",
                  "$(layout-sidebar-right-off)",
                  "$(layout-panel-off)",
                  "$(layout-sidebar-left-off)",
                  "$(target)",
                  "$(indent)",
                  "$(record-small)",
                  "$(error-small)",
                  "$(arrow-circle-down)",
                  "$(arrow-circle-left)",
                  "$(arrow-circle-right)",
                  "$(arrow-circle-up)",
                  "$(heart-filled)",
                  "$(map)",
                  "$(map-filled)",
                  "$(circle-small)",
                  "$(bell-slash)",
                  "$(bell-slash-dot)",
                  "$(comment-unresolved)",
                  "$(git-pull-request-go-to-changes)",
                  "$(git-pull-request-new-changes)",
                  "$(search-fuzzy)",
                  "$(comment-draft)",
                  "$(dialog-error)",
                  "$(dialog-warning)",
                  "$(dialog-info)",
                  "$(dialog-close)",
                  "$(tree-item-expanded)",
                  "$(tree-filter-on-type-on)",
                  "$(tree-filter-on-type-off)",
                  "$(tree-filter-clear)",
                  "$(tree-item-loading)",
                  "$(menu-selection)",
                  "$(menu-submenu)",
                  "$(menubar-more)",
                  "$(scrollbar-button-left)",
                  "$(scrollbar-button-right)",
                  "$(scrollbar-button-up)",
                  "$(scrollbar-button-down)",
                  "$(toolbar-more)",
                  "$(quick-input-back)"
                ]
              },
              "color": {
                "description": "A theme color ID to associate with the terminal icon.",
                "type": [
                  "string",
                  "null"
                ],
                "enum": [
                  "terminal.ansiBlack",
                  "terminal.ansiRed",
                  "terminal.ansiGreen",
                  "terminal.ansiYellow",
                  "terminal.ansiBlue",
                  "terminal.ansiMagenta",
                  "terminal.ansiCyan",
                  "terminal.ansiWhite"
                ],
                "default": null
              },
              "env": {
                "markdownDescription": "An object with environment variables that will be added to the terminal profile process. Set to `null` to delete environment variables from the base environment.",
                "type": "object",
                "additionalProperties": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "default": {}
              }
            }
          },
          {
            "type": "object",
            "required": [
              "extensionIdentifier",
              "id",
              "title"
            ],
            "properties": {
              "extensionIdentifier": {
                "description": "The extension that contributed this profile.",
                "type": "string"
              },
              "id": {
                "description": "The id of the extension terminal",
                "type": "string"
              },
              "title": {
                "description": "The name of the extension terminal",
                "type": "string"
              },
              "args": {
                "description": "An optional set of arguments to run the shell executable with.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "overrideName": {
                "description": "Controls whether or not the profile name overrides the auto detected one.",
                "type": "boolean"
              },
              "icon": {
                "description": "A codicon ID to associate with the terminal icon.",
                "type": "string",
                "enum": [
                  "add",
                  "plus",
                  "gist-new",
                  "repo-create",
                  "lightbulb",
                  "light-bulb",
                  "repo",
                  "repo-delete",
                  "gist-fork",
                  "repo-forked",
                  "git-pull-request",
                  "git-pull-request-abandoned",
                  "record-keys",
                  "keyboard",
                  "tag",
                  "tag-add",
                  "tag-remove",
                  "person",
                  "person-follow",
                  "person-outline",
                  "person-filled",
                  "git-branch",
                  "git-branch-create",
                  "git-branch-delete",
                  "source-control",
                  "mirror",
                  "mirror-public",
                  "star",
                  "star-add",
                  "star-delete",
                  "star-empty",
                  "comment",
                  "comment-add",
                  "alert",
                  "warning",
                  "search",
                  "search-save",
                  "log-out",
                  "sign-out",
                  "log-in",
                  "sign-in",
                  "eye",
                  "eye-unwatch",
                  "eye-watch",
                  "circle-filled",
                  "primitive-dot",
                  "close-dirty",
                  "debug-breakpoint",
                  "debug-breakpoint-disabled",
                  "debug-hint",
                  "primitive-square",
                  "edit",
                  "pencil",
                  "info",
                  "issue-opened",
                  "gist-private",
                  "git-fork-private",
                  "lock",
                  "mirror-private",
                  "close",
                  "remove-close",
                  "x",
                  "repo-sync",
                  "sync",
                  "clone",
                  "desktop-download",
                  "beaker",
                  "microscope",
                  "vm",
                  "device-desktop",
                  "file",
                  "file-text",
                  "more",
                  "ellipsis",
                  "kebab-horizontal",
                  "mail-reply",
                  "reply",
                  "organization",
                  "organization-filled",
                  "organization-outline",
                  "new-file",
                  "file-add",
                  "new-folder",
                  "file-directory-create",
                  "trash",
                  "trashcan",
                  "history",
                  "clock",
                  "folder",
                  "file-directory",
                  "symbol-folder",
                  "logo-github",
                  "mark-github",
                  "github",
                  "terminal",
                  "console",
                  "repl",
                  "zap",
                  "symbol-event",
                  "error",
                  "stop",
                  "variable",
                  "symbol-variable",
                  "array",
                  "symbol-array",
                  "symbol-module",
                  "symbol-package",
                  "symbol-namespace",
                  "symbol-object",
                  "symbol-method",
                  "symbol-function",
                  "symbol-constructor",
                  "symbol-boolean",
                  "symbol-null",
                  "symbol-numeric",
                  "symbol-number",
                  "symbol-structure",
                  "symbol-struct",
                  "symbol-parameter",
                  "symbol-type-parameter",
                  "symbol-key",
                  "symbol-text",
                  "symbol-reference",
                  "go-to-file",
                  "symbol-enum",
                  "symbol-value",
                  "symbol-ruler",
                  "symbol-unit",
                  "activate-breakpoints",
                  "archive",
                  "arrow-both",
                  "arrow-down",
                  "arrow-left",
                  "arrow-right",
                  "arrow-small-down",
                  "arrow-small-left",
                  "arrow-small-right",
                  "arrow-small-up",
                  "arrow-up",
                  "bell",
                  "bold",
                  "book",
                  "bookmark",
                  "debug-breakpoint-conditional-unverified",
                  "debug-breakpoint-conditional",
                  "debug-breakpoint-conditional-disabled",
                  "debug-breakpoint-data-unverified",
                  "debug-breakpoint-data",
                  "debug-breakpoint-data-disabled",
                  "debug-breakpoint-log-unverified",
                  "debug-breakpoint-log",
                  "debug-breakpoint-log-disabled",
                  "briefcase",
                  "broadcast",
                  "browser",
                  "bug",
                  "calendar",
                  "case-sensitive",
                  "check",
                  "checklist",
                  "chevron-down",
                  "drop-down-button",
                  "chevron-left",
                  "chevron-right",
                  "chevron-up",
                  "chrome-close",
                  "chrome-maximize",
                  "chrome-minimize",
                  "chrome-restore",
                  "circle",
                  "circle-outline",
                  "debug-breakpoint-unverified",
                  "circle-slash",
                  "circuit-board",
                  "clear-all",
                  "clippy",
                  "close-all",
                  "cloud-download",
                  "cloud-upload",
                  "code",
                  "collapse-all",
                  "color-mode",
                  "comment-discussion",
                  "compare-changes",
                  "credit-card",
                  "dash",
                  "dashboard",
                  "database",
                  "debug-continue",
                  "debug-disconnect",
                  "debug-pause",
                  "debug-restart",
                  "debug-start",
                  "debug-step-into",
                  "debug-step-out",
                  "debug-step-over",
                  "debug-stop",
                  "debug",
                  "device-camera-video",
                  "device-camera",
                  "device-mobile",
                  "diff-added",
                  "diff-ignored",
                  "diff-modified",
                  "diff-removed",
                  "diff-renamed",
                  "diff",
                  "discard",
                  "editor-layout",
                  "empty-window",
                  "exclude",
                  "extensions",
                  "eye-closed",
                  "file-binary",
                  "file-code",
                  "file-media",
                  "file-pdf",
                  "file-submodule",
                  "file-symlink-directory",
                  "file-symlink-file",
                  "file-zip",
                  "files",
                  "filter",
                  "flame",
                  "fold-down",
                  "fold-up",
                  "fold",
                  "folder-active",
                  "folder-opened",
                  "gear",
                  "gift",
                  "gist-secret",
                  "gist",
                  "git-commit",
                  "git-compare",
                  "git-merge",
                  "github-action",
                  "github-alt",
                  "globe",
                  "grabber",
                  "graph",
                  "gripper",
                  "heart",
                  "home",
                  "horizontal-rule",
                  "hubot",
                  "inbox",
                  "issue-closed",
                  "issue-reopened",
                  "issues",
                  "italic",
                  "jersey",
                  "json",
                  "bracket",
                  "kebab-vertical",
                  "key",
                  "law",
                  "lightbulb-autofix",
                  "link-external",
                  "link",
                  "list-ordered",
                  "list-unordered",
                  "live-share",
                  "loading",
                  "location",
                  "mail-read",
                  "mail",
                  "markdown",
                  "megaphone",
                  "mention",
                  "milestone",
                  "mortar-board",
                  "move",
                  "multiple-windows",
                  "mute",
                  "no-newline",
                  "note",
                  "octoface",
                  "open-preview",
                  "package",
                  "paintcan",
                  "pin",
                  "play",
                  "run",
                  "plug",
                  "preserve-case",
                  "preview",
                  "project",
                  "pulse",
                  "question",
                  "quote",
                  "radio-tower",
                  "reactions",
                  "references",
                  "refresh",
                  "regex",
                  "remote-explorer",
                  "remote",
                  "remove",
                  "replace-all",
                  "replace",
                  "repo-clone",
                  "repo-force-push",
                  "repo-pull",
                  "repo-push",
                  "report",
                  "request-changes",
                  "rocket",
                  "root-folder-opened",
                  "root-folder",
                  "rss",
                  "ruby",
                  "save-all",
                  "save-as",
                  "save",
                  "screen-full",
                  "screen-normal",
                  "search-stop",
                  "server",
                  "settings-gear",
                  "settings",
                  "shield",
                  "smiley",
                  "sort-precedence",
                  "split-horizontal",
                  "split-vertical",
                  "squirrel",
                  "star-full",
                  "star-half",
                  "symbol-class",
                  "symbol-color",
                  "symbol-customcolor",
                  "symbol-constant",
                  "symbol-enum-member",
                  "symbol-field",
                  "symbol-file",
                  "symbol-interface",
                  "symbol-keyword",
                  "symbol-misc",
                  "symbol-operator",
                  "symbol-property",
                  "wrench",
                  "wrench-subaction",
                  "symbol-snippet",
                  "tasklist",
                  "telescope",
                  "text-size",
                  "three-bars",
                  "thumbsdown",
                  "thumbsup",
                  "tools",
                  "triangle-down",
                  "triangle-left",
                  "triangle-right",
                  "triangle-up",
                  "twitter",
                  "unfold",
                  "unlock",
                  "unmute",
                  "unverified",
                  "verified",
                  "versions",
                  "vm-active",
                  "vm-outline",
                  "vm-running",
                  "watch",
                  "whitespace",
                  "whole-word",
                  "window",
                  "word-wrap",
                  "zoom-in",
                  "zoom-out",
                  "list-filter",
                  "list-flat",
                  "list-selection",
                  "selection",
                  "list-tree",
                  "debug-breakpoint-function-unverified",
                  "debug-breakpoint-function",
                  "debug-breakpoint-function-disabled",
                  "debug-stackframe-active",
                  "circle-small-filled",
                  "debug-stackframe-dot",
                  "debug-stackframe",
                  "debug-stackframe-focused",
                  "debug-breakpoint-unsupported",
                  "symbol-string",
                  "debug-reverse-continue",
                  "debug-step-back",
                  "debug-restart-frame",
                  "call-incoming",
                  "call-outgoing",
                  "menu",
                  "expand-all",
                  "feedback",
                  "group-by-ref-type",
                  "ungroup-by-ref-type",
                  "account",
                  "bell-dot",
                  "debug-console",
                  "library",
                  "output",
                  "run-all",
                  "sync-ignored",
                  "pinned",
                  "github-inverted",
                  "debug-alt",
                  "server-process",
                  "server-environment",
                  "pass",
                  "stop-circle",
                  "play-circle",
                  "record",
                  "debug-alt-small",
                  "vm-connect",
                  "cloud",
                  "merge",
                  "export",
                  "graph-left",
                  "magnet",
                  "notebook",
                  "redo",
                  "check-all",
                  "pinned-dirty",
                  "pass-filled",
                  "circle-large-filled",
                  "circle-large",
                  "circle-large-outline",
                  "combine",
                  "gather",
                  "table",
                  "variable-group",
                  "type-hierarchy",
                  "type-hierarchy-sub",
                  "type-hierarchy-super",
                  "git-pull-request-create",
                  "run-above",
                  "run-below",
                  "notebook-template",
                  "debug-rerun",
                  "workspace-trusted",
                  "workspace-untrusted",
                  "workspace-unspecified",
                  "terminal-cmd",
                  "terminal-debian",
                  "terminal-linux",
                  "terminal-powershell",
                  "terminal-tmux",
                  "terminal-ubuntu",
                  "terminal-bash",
                  "arrow-swap",
                  "copy",
                  "person-add",
                  "filter-filled",
                  "wand",
                  "debug-line-by-line",
                  "inspect",
                  "layers",
                  "layers-dot",
                  "layers-active",
                  "compass",
                  "compass-dot",
                  "compass-active",
                  "azure",
                  "issue-draft",
                  "git-pull-request-closed",
                  "git-pull-request-draft",
                  "debug-all",
                  "debug-coverage",
                  "run-errors",
                  "folder-library",
                  "debug-continue-small",
                  "beaker-stop",
                  "graph-line",
                  "graph-scatter",
                  "pie-chart",
                  "bracket-dot",
                  "bracket-error",
                  "lock-small",
                  "azure-devops",
                  "verified-filled",
                  "newline",
                  "layout",
                  "layout-activitybar-left",
                  "layout-activitybar-right",
                  "layout-panel-left",
                  "layout-panel-center",
                  "layout-panel-justify",
                  "layout-panel-right",
                  "layout-panel",
                  "layout-sidebar-left",
                  "layout-sidebar-right",
                  "layout-statusbar",
                  "layout-menubar",
                  "layout-centered",
                  "layout-sidebar-right-off",
                  "layout-panel-off",
                  "layout-sidebar-left-off",
                  "target",
                  "indent",
                  "record-small",
                  "error-small",
                  "arrow-circle-down",
                  "arrow-circle-left",
                  "arrow-circle-right",
                  "arrow-circle-up",
                  "heart-filled",
                  "map",
                  "map-filled",
                  "circle-small",
                  "bell-slash",
                  "bell-slash-dot",
                  "comment-unresolved",
                  "git-pull-request-go-to-changes",
                  "git-pull-request-new-changes",
                  "search-fuzzy",
                  "comment-draft",
                  "dialog-error",
                  "dialog-warning",
                  "dialog-info",
                  "dialog-close",
                  "tree-item-expanded",
                  "tree-filter-on-type-on",
                  "tree-filter-on-type-off",
                  "tree-filter-clear",
                  "tree-item-loading",
                  "menu-selection",
                  "menu-submenu",
                  "menubar-more",
                  "scrollbar-button-left",
                  "scrollbar-button-right",
                  "scrollbar-button-up",
                  "scrollbar-button-down",
                  "toolbar-more",
                  "quick-input-back"
                ],
                "markdownEnumDescriptions": [
                  "$(add)",
                  "$(plus)",
                  "$(gist-new)",
                  "$(repo-create)",
                  "$(lightbulb)",
                  "$(light-bulb)",
                  "$(repo)",
                  "$(repo-delete)",
                  "$(gist-fork)",
                  "$(repo-forked)",
                  "$(git-pull-request)",
                  "$(git-pull-request-abandoned)",
                  "$(record-keys)",
                  "$(keyboard)",
                  "$(tag)",
                  "$(tag-add)",
                  "$(tag-remove)",
                  "$(person)",
                  "$(person-follow)",
                  "$(person-outline)",
                  "$(person-filled)",
                  "$(git-branch)",
                  "$(git-branch-create)",
                  "$(git-branch-delete)",
                  "$(source-control)",
                  "$(mirror)",
                  "$(mirror-public)",
                  "$(star)",
                  "$(star-add)",
                  "$(star-delete)",
                  "$(star-empty)",
                  "$(comment)",
                  "$(comment-add)",
                  "$(alert)",
                  "$(warning)",
                  "$(search)",
                  "$(search-save)",
                  "$(log-out)",
                  "$(sign-out)",
                  "$(log-in)",
                  "$(sign-in)",
                  "$(eye)",
                  "$(eye-unwatch)",
                  "$(eye-watch)",
                  "$(circle-filled)",
                  "$(primitive-dot)",
                  "$(close-dirty)",
                  "$(debug-breakpoint)",
                  "$(debug-breakpoint-disabled)",
                  "$(debug-hint)",
                  "$(primitive-square)",
                  "$(edit)",
                  "$(pencil)",
                  "$(info)",
                  "$(issue-opened)",
                  "$(gist-private)",
                  "$(git-fork-private)",
                  "$(lock)",
                  "$(mirror-private)",
                  "$(close)",
                  "$(remove-close)",
                  "$(x)",
                  "$(repo-sync)",
                  "$(sync)",
                  "$(clone)",
                  "$(desktop-download)",
                  "$(beaker)",
                  "$(microscope)",
                  "$(vm)",
                  "$(device-desktop)",
                  "$(file)",
                  "$(file-text)",
                  "$(more)",
                  "$(ellipsis)",
                  "$(kebab-horizontal)",
                  "$(mail-reply)",
                  "$(reply)",
                  "$(organization)",
                  "$(organization-filled)",
                  "$(organization-outline)",
                  "$(new-file)",
                  "$(file-add)",
                  "$(new-folder)",
                  "$(file-directory-create)",
                  "$(trash)",
                  "$(trashcan)",
                  "$(history)",
                  "$(clock)",
                  "$(folder)",
                  "$(file-directory)",
                  "$(symbol-folder)",
                  "$(logo-github)",
                  "$(mark-github)",
                  "$(github)",
                  "$(terminal)",
                  "$(console)",
                  "$(repl)",
                  "$(zap)",
                  "$(symbol-event)",
                  "$(error)",
                  "$(stop)",
                  "$(variable)",
                  "$(symbol-variable)",
                  "$(array)",
                  "$(symbol-array)",
                  "$(symbol-module)",
                  "$(symbol-package)",
                  "$(symbol-namespace)",
                  "$(symbol-object)",
                  "$(symbol-method)",
                  "$(symbol-function)",
                  "$(symbol-constructor)",
                  "$(symbol-boolean)",
                  "$(symbol-null)",
                  "$(symbol-numeric)",
                  "$(symbol-number)",
                  "$(symbol-structure)",
                  "$(symbol-struct)",
                  "$(symbol-parameter)",
                  "$(symbol-type-parameter)",
                  "$(symbol-key)",
                  "$(symbol-text)",
                  "$(symbol-reference)",
                  "$(go-to-file)",
                  "$(symbol-enum)",
                  "$(symbol-value)",
                  "$(symbol-ruler)",
                  "$(symbol-unit)",
                  "$(activate-breakpoints)",
                  "$(archive)",
                  "$(arrow-both)",
                  "$(arrow-down)",
                  "$(arrow-left)",
                  "$(arrow-right)",
                  "$(arrow-small-down)",
                  "$(arrow-small-left)",
                  "$(arrow-small-right)",
                  "$(arrow-small-up)",
                  "$(arrow-up)",
                  "$(bell)",
                  "$(bold)",
                  "$(book)",
                  "$(bookmark)",
                  "$(debug-breakpoint-conditional-unverified)",
                  "$(debug-breakpoint-conditional)",
                  "$(debug-breakpoint-conditional-disabled)",
                  "$(debug-breakpoint-data-unverified)",
                  "$(debug-breakpoint-data)",
                  "$(debug-breakpoint-data-disabled)",
                  "$(debug-breakpoint-log-unverified)",
                  "$(debug-breakpoint-log)",
                  "$(debug-breakpoint-log-disabled)",
                  "$(briefcase)",
                  "$(broadcast)",
                  "$(browser)",
                  "$(bug)",
                  "$(calendar)",
                  "$(case-sensitive)",
                  "$(check)",
                  "$(checklist)",
                  "$(chevron-down)",
                  "$(drop-down-button)",
                  "$(chevron-left)",
                  "$(chevron-right)",
                  "$(chevron-up)",
                  "$(chrome-close)",
                  "$(chrome-maximize)",
                  "$(chrome-minimize)",
                  "$(chrome-restore)",
                  "$(circle)",
                  "$(circle-outline)",
                  "$(debug-breakpoint-unverified)",
                  "$(circle-slash)",
                  "$(circuit-board)",
                  "$(clear-all)",
                  "$(clippy)",
                  "$(close-all)",
                  "$(cloud-download)",
                  "$(cloud-upload)",
                  "$(code)",
                  "$(collapse-all)",
                  "$(color-mode)",
                  "$(comment-discussion)",
                  "$(compare-changes)",
                  "$(credit-card)",
                  "$(dash)",
                  "$(dashboard)",
                  "$(database)",
                  "$(debug-continue)",
                  "$(debug-disconnect)",
                  "$(debug-pause)",
                  "$(debug-restart)",
                  "$(debug-start)",
                  "$(debug-step-into)",
                  "$(debug-step-out)",
                  "$(debug-step-over)",
                  "$(debug-stop)",
                  "$(debug)",
                  "$(device-camera-video)",
                  "$(device-camera)",
                  "$(device-mobile)",
                  "$(diff-added)",
                  "$(diff-ignored)",
                  "$(diff-modified)",
                  "$(diff-removed)",
                  "$(diff-renamed)",
                  "$(diff)",
                  "$(discard)",
                  "$(editor-layout)",
                  "$(empty-window)",
                  "$(exclude)",
                  "$(extensions)",
                  "$(eye-closed)",
                  "$(file-binary)",
                  "$(file-code)",
                  "$(file-media)",
                  "$(file-pdf)",
                  "$(file-submodule)",
                  "$(file-symlink-directory)",
                  "$(file-symlink-file)",
                  "$(file-zip)",
                  "$(files)",
                  "$(filter)",
                  "$(flame)",
                  "$(fold-down)",
                  "$(fold-up)",
                  "$(fold)",
                  "$(folder-active)",
                  "$(folder-opened)",
                  "$(gear)",
                  "$(gift)",
                  "$(gist-secret)",
                  "$(gist)",
                  "$(git-commit)",
                  "$(git-compare)",
                  "$(git-merge)",
                  "$(github-action)",
                  "$(github-alt)",
                  "$(globe)",
                  "$(grabber)",
                  "$(graph)",
                  "$(gripper)",
                  "$(heart)",
                  "$(home)",
                  "$(horizontal-rule)",
                  "$(hubot)",
                  "$(inbox)",
                  "$(issue-closed)",
                  "$(issue-reopened)",
                  "$(issues)",
                  "$(italic)",
                  "$(jersey)",
                  "$(json)",
                  "$(bracket)",
                  "$(kebab-vertical)",
                  "$(key)",
                  "$(law)",
                  "$(lightbulb-autofix)",
                  "$(link-external)",
                  "$(link)",
                  "$(list-ordered)",
                  "$(list-unordered)",
                  "$(live-share)",
                  "$(loading)",
                  "$(location)",
                  "$(mail-read)",
                  "$(mail)",
                  "$(markdown)",
                  "$(megaphone)",
                  "$(mention)",
                  "$(milestone)",
                  "$(mortar-board)",
                  "$(move)",
                  "$(multiple-windows)",
                  "$(mute)",
                  "$(no-newline)",
                  "$(note)",
                  "$(octoface)",
                  "$(open-preview)",
                  "$(package)",
                  "$(paintcan)",
                  "$(pin)",
                  "$(play)",
                  "$(run)",
                  "$(plug)",
                  "$(preserve-case)",
                  "$(preview)",
                  "$(project)",
                  "$(pulse)",
                  "$(question)",
                  "$(quote)",
                  "$(radio-tower)",
                  "$(reactions)",
                  "$(references)",
                  "$(refresh)",
                  "$(regex)",
                  "$(remote-explorer)",
                  "$(remote)",
                  "$(remove)",
                  "$(replace-all)",
                  "$(replace)",
                  "$(repo-clone)",
                  "$(repo-force-push)",
                  "$(repo-pull)",
                  "$(repo-push)",
                  "$(report)",
                  "$(request-changes)",
                  "$(rocket)",
                  "$(root-folder-opened)",
                  "$(root-folder)",
                  "$(rss)",
                  "$(ruby)",
                  "$(save-all)",
                  "$(save-as)",
                  "$(save)",
                  "$(screen-full)",
                  "$(screen-normal)",
                  "$(search-stop)",
                  "$(server)",
                  "$(settings-gear)",
                  "$(settings)",
                  "$(shield)",
                  "$(smiley)",
                  "$(sort-precedence)",
                  "$(split-horizontal)",
                  "$(split-vertical)",
                  "$(squirrel)",
                  "$(star-full)",
                  "$(star-half)",
                  "$(symbol-class)",
                  "$(symbol-color)",
                  "$(symbol-customcolor)",
                  "$(symbol-constant)",
                  "$(symbol-enum-member)",
                  "$(symbol-field)",
                  "$(symbol-file)",
                  "$(symbol-interface)",
                  "$(symbol-keyword)",
                  "$(symbol-misc)",
                  "$(symbol-operator)",
                  "$(symbol-property)",
                  "$(wrench)",
                  "$(wrench-subaction)",
                  "$(symbol-snippet)",
                  "$(tasklist)",
                  "$(telescope)",
                  "$(text-size)",
                  "$(three-bars)",
                  "$(thumbsdown)",
                  "$(thumbsup)",
                  "$(tools)",
                  "$(triangle-down)",
                  "$(triangle-left)",
                  "$(triangle-right)",
                  "$(triangle-up)",
                  "$(twitter)",
                  "$(unfold)",
                  "$(unlock)",
                  "$(unmute)",
                  "$(unverified)",
                  "$(verified)",
                  "$(versions)",
                  "$(vm-active)",
                  "$(vm-outline)",
                  "$(vm-running)",
                  "$(watch)",
                  "$(whitespace)",
                  "$(whole-word)",
                  "$(window)",
                  "$(word-wrap)",
                  "$(zoom-in)",
                  "$(zoom-out)",
                  "$(list-filter)",
                  "$(list-flat)",
                  "$(list-selection)",
                  "$(selection)",
                  "$(list-tree)",
                  "$(debug-breakpoint-function-unverified)",
                  "$(debug-breakpoint-function)",
                  "$(debug-breakpoint-function-disabled)",
                  "$(debug-stackframe-active)",
                  "$(circle-small-filled)",
                  "$(debug-stackframe-dot)",
                  "$(debug-stackframe)",
                  "$(debug-stackframe-focused)",
                  "$(debug-breakpoint-unsupported)",
                  "$(symbol-string)",
                  "$(debug-reverse-continue)",
                  "$(debug-step-back)",
                  "$(debug-restart-frame)",
                  "$(call-incoming)",
                  "$(call-outgoing)",
                  "$(menu)",
                  "$(expand-all)",
                  "$(feedback)",
                  "$(group-by-ref-type)",
                  "$(ungroup-by-ref-type)",
                  "$(account)",
                  "$(bell-dot)",
                  "$(debug-console)",
                  "$(library)",
                  "$(output)",
                  "$(run-all)",
                  "$(sync-ignored)",
                  "$(pinned)",
                  "$(github-inverted)",
                  "$(debug-alt)",
                  "$(server-process)",
                  "$(server-environment)",
                  "$(pass)",
                  "$(stop-circle)",
                  "$(play-circle)",
                  "$(record)",
                  "$(debug-alt-small)",
                  "$(vm-connect)",
                  "$(cloud)",
                  "$(merge)",
                  "$(export)",
                  "$(graph-left)",
                  "$(magnet)",
                  "$(notebook)",
                  "$(redo)",
                  "$(check-all)",
                  "$(pinned-dirty)",
                  "$(pass-filled)",
                  "$(circle-large-filled)",
                  "$(circle-large)",
                  "$(circle-large-outline)",
                  "$(combine)",
                  "$(gather)",
                  "$(table)",
                  "$(variable-group)",
                  "$(type-hierarchy)",
                  "$(type-hierarchy-sub)",
                  "$(type-hierarchy-super)",
                  "$(git-pull-request-create)",
                  "$(run-above)",
                  "$(run-below)",
                  "$(notebook-template)",
                  "$(debug-rerun)",
                  "$(workspace-trusted)",
                  "$(workspace-untrusted)",
                  "$(workspace-unspecified)",
                  "$(terminal-cmd)",
                  "$(terminal-debian)",
                  "$(terminal-linux)",
                  "$(terminal-powershell)",
                  "$(terminal-tmux)",
                  "$(terminal-ubuntu)",
                  "$(terminal-bash)",
                  "$(arrow-swap)",
                  "$(copy)",
                  "$(person-add)",
                  "$(filter-filled)",
                  "$(wand)",
                  "$(debug-line-by-line)",
                  "$(inspect)",
                  "$(layers)",
                  "$(layers-dot)",
                  "$(layers-active)",
                  "$(compass)",
                  "$(compass-dot)",
                  "$(compass-active)",
                  "$(azure)",
                  "$(issue-draft)",
                  "$(git-pull-request-closed)",
                  "$(git-pull-request-draft)",
                  "$(debug-all)",
                  "$(debug-coverage)",
                  "$(run-errors)",
                  "$(folder-library)",
                  "$(debug-continue-small)",
                  "$(beaker-stop)",
                  "$(graph-line)",
                  "$(graph-scatter)",
                  "$(pie-chart)",
                  "$(bracket-dot)",
                  "$(bracket-error)",
                  "$(lock-small)",
                  "$(azure-devops)",
                  "$(verified-filled)",
                  "$(newline)",
                  "$(layout)",
                  "$(layout-activitybar-left)",
                  "$(layout-activitybar-right)",
                  "$(layout-panel-left)",
                  "$(layout-panel-center)",
                  "$(layout-panel-justify)",
                  "$(layout-panel-right)",
                  "$(layout-panel)",
                  "$(layout-sidebar-left)",
                  "$(layout-sidebar-right)",
                  "$(layout-statusbar)",
                  "$(layout-menubar)",
                  "$(layout-centered)",
                  "$(layout-sidebar-right-off)",
                  "$(layout-panel-off)",
                  "$(layout-sidebar-left-off)",
                  "$(target)",
                  "$(indent)",
                  "$(record-small)",
                  "$(error-small)",
                  "$(arrow-circle-down)",
                  "$(arrow-circle-left)",
                  "$(arrow-circle-right)",
                  "$(arrow-circle-up)",
                  "$(heart-filled)",
                  "$(map)",
                  "$(map-filled)",
                  "$(circle-small)",
                  "$(bell-slash)",
                  "$(bell-slash-dot)",
                  "$(comment-unresolved)",
                  "$(git-pull-request-go-to-changes)",
                  "$(git-pull-request-new-changes)",
                  "$(search-fuzzy)",
                  "$(comment-draft)",
                  "$(dialog-error)",
                  "$(dialog-warning)",
                  "$(dialog-info)",
                  "$(dialog-close)",
                  "$(tree-item-expanded)",
                  "$(tree-filter-on-type-on)",
                  "$(tree-filter-on-type-off)",
                  "$(tree-filter-clear)",
                  "$(tree-item-loading)",
                  "$(menu-selection)",
                  "$(menu-submenu)",
                  "$(menubar-more)",
                  "$(scrollbar-button-left)",
                  "$(scrollbar-button-right)",
                  "$(scrollbar-button-up)",
                  "$(scrollbar-button-down)",
                  "$(toolbar-more)",
                  "$(quick-input-back)"
                ]
              },
              "color": {
                "description": "A theme color ID to associate with the terminal icon.",
                "type": [
                  "string",
                  "null"
                ],
                "enum": [
                  "terminal.ansiBlack",
                  "terminal.ansiRed",
                  "terminal.ansiGreen",
                  "terminal.ansiYellow",
                  "terminal.ansiBlue",
                  "terminal.ansiMagenta",
                  "terminal.ansiCyan",
                  "terminal.ansiWhite"
                ],
                "default": null
              },
              "env": {
                "markdownDescription": "An object with environment variables that will be added to the terminal profile process. Set to `null` to delete environment variables from the base environment.",
                "type": "object",
                "additionalProperties": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "default": {}
              }
            }
          },
          {
            "type": "null"
          },
          {
            "type": "object",
            "required": [
              "path"
            ],
            "properties": {
              "path": {
                "description": "A single path to a shell executable or an array of paths that will be used as fallbacks when one fails.",
                "type": [
                  "string",
                  "array"
                ],
                "items": {
                  "type": "string"
                }
              },
              "args": {
                "description": "An optional set of arguments to run the shell executable with.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "overrideName": {
                "description": "Controls whether or not the profile name overrides the auto detected one.",
                "type": "boolean"
              },
              "icon": {
                "description": "A codicon ID to associate with the terminal icon.",
                "type": "string",
                "enum": [
                  "add",
                  "plus",
                  "gist-new",
                  "repo-create",
                  "lightbulb",
                  "light-bulb",
                  "repo",
                  "repo-delete",
                  "gist-fork",
                  "repo-forked",
                  "git-pull-request",
                  "git-pull-request-abandoned",
                  "record-keys",
                  "keyboard",
                  "tag",
                  "tag-add",
                  "tag-remove",
                  "person",
                  "person-follow",
                  "person-outline",
                  "person-filled",
                  "git-branch",
                  "git-branch-create",
                  "git-branch-delete",
                  "source-control",
                  "mirror",
                  "mirror-public",
                  "star",
                  "star-add",
                  "star-delete",
                  "star-empty",
                  "comment",
                  "comment-add",
                  "alert",
                  "warning",
                  "search",
                  "search-save",
                  "log-out",
                  "sign-out",
                  "log-in",
                  "sign-in",
                  "eye",
                  "eye-unwatch",
                  "eye-watch",
                  "circle-filled",
                  "primitive-dot",
                  "close-dirty",
                  "debug-breakpoint",
                  "debug-breakpoint-disabled",
                  "debug-hint",
                  "primitive-square",
                  "edit",
                  "pencil",
                  "info",
                  "issue-opened",
                  "gist-private",
                  "git-fork-private",
                  "lock",
                  "mirror-private",
                  "close",
                  "remove-close",
                  "x",
                  "repo-sync",
                  "sync",
                  "clone",
                  "desktop-download",
                  "beaker",
                  "microscope",
                  "vm",
                  "device-desktop",
                  "file",
                  "file-text",
                  "more",
                  "ellipsis",
                  "kebab-horizontal",
                  "mail-reply",
                  "reply",
                  "organization",
                  "organization-filled",
                  "organization-outline",
                  "new-file",
                  "file-add",
                  "new-folder",
                  "file-directory-create",
                  "trash",
                  "trashcan",
                  "history",
                  "clock",
                  "folder",
                  "file-directory",
                  "symbol-folder",
                  "logo-github",
                  "mark-github",
                  "github",
                  "terminal",
                  "console",
                  "repl",
                  "zap",
                  "symbol-event",
                  "error",
                  "stop",
                  "variable",
                  "symbol-variable",
                  "array",
                  "symbol-array",
                  "symbol-module",
                  "symbol-package",
                  "symbol-namespace",
                  "symbol-object",
                  "symbol-method",
                  "symbol-function",
                  "symbol-constructor",
                  "symbol-boolean",
                  "symbol-null",
                  "symbol-numeric",
                  "symbol-number",
                  "symbol-structure",
                  "symbol-struct",
                  "symbol-parameter",
                  "symbol-type-parameter",
                  "symbol-key",
                  "symbol-text",
                  "symbol-reference",
                  "go-to-file",
                  "symbol-enum",
                  "symbol-value",
                  "symbol-ruler",
                  "symbol-unit",
                  "activate-breakpoints",
                  "archive",
                  "arrow-both",
                  "arrow-down",
                  "arrow-left",
                  "arrow-right",
                  "arrow-small-down",
                  "arrow-small-left",
                  "arrow-small-right",
                  "arrow-small-up",
                  "arrow-up",
                  "bell",
                  "bold",
                  "book",
                  "bookmark",
                  "debug-breakpoint-conditional-unverified",
                  "debug-breakpoint-conditional",
                  "debug-breakpoint-conditional-disabled",
                  "debug-breakpoint-data-unverified",
                  "debug-breakpoint-data",
                  "debug-breakpoint-data-disabled",
                  "debug-breakpoint-log-unverified",
                  "debug-breakpoint-log",
                  "debug-breakpoint-log-disabled",
                  "briefcase",
                  "broadcast",
                  "browser",
                  "bug",
                  "calendar",
                  "case-sensitive",
                  "check",
                  "checklist",
                  "chevron-down",
                  "drop-down-button",
                  "chevron-left",
                  "chevron-right",
                  "chevron-up",
                  "chrome-close",
                  "chrome-maximize",
                  "chrome-minimize",
                  "chrome-restore",
                  "circle",
                  "circle-outline",
                  "debug-breakpoint-unverified",
                  "circle-slash",
                  "circuit-board",
                  "clear-all",
                  "clippy",
                  "close-all",
                  "cloud-download",
                  "cloud-upload",
                  "code",
                  "collapse-all",
                  "color-mode",
                  "comment-discussion",
                  "compare-changes",
                  "credit-card",
                  "dash",
                  "dashboard",
                  "database",
                  "debug-continue",
                  "debug-disconnect",
                  "debug-pause",
                  "debug-restart",
                  "debug-start",
                  "debug-step-into",
                  "debug-step-out",
                  "debug-step-over",
                  "debug-stop",
                  "debug",
                  "device-camera-video",
                  "device-camera",
                  "device-mobile",
                  "diff-added",
                  "diff-ignored",
                  "diff-modified",
                  "diff-removed",
                  "diff-renamed",
                  "diff",
                  "discard",
                  "editor-layout",
                  "empty-window",
                  "exclude",
                  "extensions",
                  "eye-closed",
                  "file-binary",
                  "file-code",
                  "file-media",
                  "file-pdf",
                  "file-submodule",
                  "file-symlink-directory",
                  "file-symlink-file",
                  "file-zip",
                  "files",
                  "filter",
                  "flame",
                  "fold-down",
                  "fold-up",
                  "fold",
                  "folder-active",
                  "folder-opened",
                  "gear",
                  "gift",
                  "gist-secret",
                  "gist",
                  "git-commit",
                  "git-compare",
                  "git-merge",
                  "github-action",
                  "github-alt",
                  "globe",
                  "grabber",
                  "graph",
                  "gripper",
                  "heart",
                  "home",
                  "horizontal-rule",
                  "hubot",
                  "inbox",
                  "issue-closed",
                  "issue-reopened",
                  "issues",
                  "italic",
                  "jersey",
                  "json",
                  "bracket",
                  "kebab-vertical",
                  "key",
                  "law",
                  "lightbulb-autofix",
                  "link-external",
                  "link",
                  "list-ordered",
                  "list-unordered",
                  "live-share",
                  "loading",
                  "location",
                  "mail-read",
                  "mail",
                  "markdown",
                  "megaphone",
                  "mention",
                  "milestone",
                  "mortar-board",
                  "move",
                  "multiple-windows",
                  "mute",
                  "no-newline",
                  "note",
                  "octoface",
                  "open-preview",
                  "package",
                  "paintcan",
                  "pin",
                  "play",
                  "run",
                  "plug",
                  "preserve-case",
                  "preview",
                  "project",
                  "pulse",
                  "question",
                  "quote",
                  "radio-tower",
                  "reactions",
                  "references",
                  "refresh",
                  "regex",
                  "remote-explorer",
                  "remote",
                  "remove",
                  "replace-all",
                  "replace",
                  "repo-clone",
                  "repo-force-push",
                  "repo-pull",
                  "repo-push",
                  "report",
                  "request-changes",
                  "rocket",
                  "root-folder-opened",
                  "root-folder",
                  "rss",
                  "ruby",
                  "save-all",
                  "save-as",
                  "save",
                  "screen-full",
                  "screen-normal",
                  "search-stop",
                  "server",
                  "settings-gear",
                  "settings",
                  "shield",
                  "smiley",
                  "sort-precedence",
                  "split-horizontal",
                  "split-vertical",
                  "squirrel",
                  "star-full",
                  "star-half",
                  "symbol-class",
                  "symbol-color",
                  "symbol-customcolor",
                  "symbol-constant",
                  "symbol-enum-member",
                  "symbol-field",
                  "symbol-file",
                  "symbol-interface",
                  "symbol-keyword",
                  "symbol-misc",
                  "symbol-operator",
                  "symbol-property",
                  "wrench",
                  "wrench-subaction",
                  "symbol-snippet",
                  "tasklist",
                  "telescope",
                  "text-size",
                  "three-bars",
                  "thumbsdown",
                  "thumbsup",
                  "tools",
                  "triangle-down",
                  "triangle-left",
                  "triangle-right",
                  "triangle-up",
                  "twitter",
                  "unfold",
                  "unlock",
                  "unmute",
                  "unverified",
                  "verified",
                  "versions",
                  "vm-active",
                  "vm-outline",
                  "vm-running",
                  "watch",
                  "whitespace",
                  "whole-word",
                  "window",
                  "word-wrap",
                  "zoom-in",
                  "zoom-out",
                  "list-filter",
                  "list-flat",
                  "list-selection",
                  "selection",
                  "list-tree",
                  "debug-breakpoint-function-unverified",
                  "debug-breakpoint-function",
                  "debug-breakpoint-function-disabled",
                  "debug-stackframe-active",
                  "circle-small-filled",
                  "debug-stackframe-dot",
                  "debug-stackframe",
                  "debug-stackframe-focused",
                  "debug-breakpoint-unsupported",
                  "symbol-string",
                  "debug-reverse-continue",
                  "debug-step-back",
                  "debug-restart-frame",
                  "call-incoming",
                  "call-outgoing",
                  "menu",
                  "expand-all",
                  "feedback",
                  "group-by-ref-type",
                  "ungroup-by-ref-type",
                  "account",
                  "bell-dot",
                  "debug-console",
                  "library",
                  "output",
                  "run-all",
                  "sync-ignored",
                  "pinned",
                  "github-inverted",
                  "debug-alt",
                  "server-process",
                  "server-environment",
                  "pass",
                  "stop-circle",
                  "play-circle",
                  "record",
                  "debug-alt-small",
                  "vm-connect",
                  "cloud",
                  "merge",
                  "export",
                  "graph-left",
                  "magnet",
                  "notebook",
                  "redo",
                  "check-all",
                  "pinned-dirty",
                  "pass-filled",
                  "circle-large-filled",
                  "circle-large",
                  "circle-large-outline",
                  "combine",
                  "gather",
                  "table",
                  "variable-group",
                  "type-hierarchy",
                  "type-hierarchy-sub",
                  "type-hierarchy-super",
                  "git-pull-request-create",
                  "run-above",
                  "run-below",
                  "notebook-template",
                  "debug-rerun",
                  "workspace-trusted",
                  "workspace-untrusted",
                  "workspace-unspecified",
                  "terminal-cmd",
                  "terminal-debian",
                  "terminal-linux",
                  "terminal-powershell",
                  "terminal-tmux",
                  "terminal-ubuntu",
                  "terminal-bash",
                  "arrow-swap",
                  "copy",
                  "person-add",
                  "filter-filled",
                  "wand",
                  "debug-line-by-line",
                  "inspect",
                  "layers",
                  "layers-dot",
                  "layers-active",
                  "compass",
                  "compass-dot",
                  "compass-active",
                  "azure",
                  "issue-draft",
                  "git-pull-request-closed",
                  "git-pull-request-draft",
                  "debug-all",
                  "debug-coverage",
                  "run-errors",
                  "folder-library",
                  "debug-continue-small",
                  "beaker-stop",
                  "graph-line",
                  "graph-scatter",
                  "pie-chart",
                  "bracket-dot",
                  "bracket-error",
                  "lock-small",
                  "azure-devops",
                  "verified-filled",
                  "newline",
                  "layout",
                  "layout-activitybar-left",
                  "layout-activitybar-right",
                  "layout-panel-left",
                  "layout-panel-center",
                  "layout-panel-justify",
                  "layout-panel-right",
                  "layout-panel",
                  "layout-sidebar-left",
                  "layout-sidebar-right",
                  "layout-statusbar",
                  "layout-menubar",
                  "layout-centered",
                  "layout-sidebar-right-off",
                  "layout-panel-off",
                  "layout-sidebar-left-off",
                  "target",
                  "indent",
                  "record-small",
                  "error-small",
                  "arrow-circle-down",
                  "arrow-circle-left",
                  "arrow-circle-right",
                  "arrow-circle-up",
                  "heart-filled",
                  "map",
                  "map-filled",
                  "circle-small",
                  "bell-slash",
                  "bell-slash-dot",
                  "comment-unresolved",
                  "git-pull-request-go-to-changes",
                  "git-pull-request-new-changes",
                  "search-fuzzy",
                  "comment-draft",
                  "dialog-error",
                  "dialog-warning",
                  "dialog-info",
                  "dialog-close",
                  "tree-item-expanded",
                  "tree-filter-on-type-on",
                  "tree-filter-on-type-off",
                  "tree-filter-clear",
                  "tree-item-loading",
                  "menu-selection",
                  "menu-submenu",
                  "menubar-more",
                  "scrollbar-button-left",
                  "scrollbar-button-right",
                  "scrollbar-button-up",
                  "scrollbar-button-down",
                  "toolbar-more",
                  "quick-input-back"
                ],
                "markdownEnumDescriptions": [
                  "$(add)",
                  "$(plus)",
                  "$(gist-new)",
                  "$(repo-create)",
                  "$(lightbulb)",
                  "$(light-bulb)",
                  "$(repo)",
                  "$(repo-delete)",
                  "$(gist-fork)",
                  "$(repo-forked)",
                  "$(git-pull-request)",
                  "$(git-pull-request-abandoned)",
                  "$(record-keys)",
                  "$(keyboard)",
                  "$(tag)",
                  "$(tag-add)",
                  "$(tag-remove)",
                  "$(person)",
                  "$(person-follow)",
                  "$(person-outline)",
                  "$(person-filled)",
                  "$(git-branch)",
                  "$(git-branch-create)",
                  "$(git-branch-delete)",
                  "$(source-control)",
                  "$(mirror)",
                  "$(mirror-public)",
                  "$(star)",
                  "$(star-add)",
                  "$(star-delete)",
                  "$(star-empty)",
                  "$(comment)",
                  "$(comment-add)",
                  "$(alert)",
                  "$(warning)",
                  "$(search)",
                  "$(search-save)",
                  "$(log-out)",
                  "$(sign-out)",
                  "$(log-in)",
                  "$(sign-in)",
                  "$(eye)",
                  "$(eye-unwatch)",
                  "$(eye-watch)",
                  "$(circle-filled)",
                  "$(primitive-dot)",
                  "$(close-dirty)",
                  "$(debug-breakpoint)",
                  "$(debug-breakpoint-disabled)",
                  "$(debug-hint)",
                  "$(primitive-square)",
                  "$(edit)",
                  "$(pencil)",
                  "$(info)",
                  "$(issue-opened)",
                  "$(gist-private)",
                  "$(git-fork-private)",
                  "$(lock)",
                  "$(mirror-private)",
                  "$(close)",
                  "$(remove-close)",
                  "$(x)",
                  "$(repo-sync)",
                  "$(sync)",
                  "$(clone)",
                  "$(desktop-download)",
                  "$(beaker)",
                  "$(microscope)",
                  "$(vm)",
                  "$(device-desktop)",
                  "$(file)",
                  "$(file-text)",
                  "$(more)",
                  "$(ellipsis)",
                  "$(kebab-horizontal)",
                  "$(mail-reply)",
                  "$(reply)",
                  "$(organization)",
                  "$(organization-filled)",
                  "$(organization-outline)",
                  "$(new-file)",
                  "$(file-add)",
                  "$(new-folder)",
                  "$(file-directory-create)",
                  "$(trash)",
                  "$(trashcan)",
                  "$(history)",
                  "$(clock)",
                  "$(folder)",
                  "$(file-directory)",
                  "$(symbol-folder)",
                  "$(logo-github)",
                  "$(mark-github)",
                  "$(github)",
                  "$(terminal)",
                  "$(console)",
                  "$(repl)",
                  "$(zap)",
                  "$(symbol-event)",
                  "$(error)",
                  "$(stop)",
                  "$(variable)",
                  "$(symbol-variable)",
                  "$(array)",
                  "$(symbol-array)",
                  "$(symbol-module)",
                  "$(symbol-package)",
                  "$(symbol-namespace)",
                  "$(symbol-object)",
                  "$(symbol-method)",
                  "$(symbol-function)",
                  "$(symbol-constructor)",
                  "$(symbol-boolean)",
                  "$(symbol-null)",
                  "$(symbol-numeric)",
                  "$(symbol-number)",
                  "$(symbol-structure)",
                  "$(symbol-struct)",
                  "$(symbol-parameter)",
                  "$(symbol-type-parameter)",
                  "$(symbol-key)",
                  "$(symbol-text)",
                  "$(symbol-reference)",
                  "$(go-to-file)",
                  "$(symbol-enum)",
                  "$(symbol-value)",
                  "$(symbol-ruler)",
                  "$(symbol-unit)",
                  "$(activate-breakpoints)",
                  "$(archive)",
                  "$(arrow-both)",
                  "$(arrow-down)",
                  "$(arrow-left)",
                  "$(arrow-right)",
                  "$(arrow-small-down)",
                  "$(arrow-small-left)",
                  "$(arrow-small-right)",
                  "$(arrow-small-up)",
                  "$(arrow-up)",
                  "$(bell)",
                  "$(bold)",
                  "$(book)",
                  "$(bookmark)",
                  "$(debug-breakpoint-conditional-unverified)",
                  "$(debug-breakpoint-conditional)",
                  "$(debug-breakpoint-conditional-disabled)",
                  "$(debug-breakpoint-data-unverified)",
                  "$(debug-breakpoint-data)",
                  "$(debug-breakpoint-data-disabled)",
                  "$(debug-breakpoint-log-unverified)",
                  "$(debug-breakpoint-log)",
                  "$(debug-breakpoint-log-disabled)",
                  "$(briefcase)",
                  "$(broadcast)",
                  "$(browser)",
                  "$(bug)",
                  "$(calendar)",
                  "$(case-sensitive)",
                  "$(check)",
                  "$(checklist)",
                  "$(chevron-down)",
                  "$(drop-down-button)",
                  "$(chevron-left)",
                  "$(chevron-right)",
                  "$(chevron-up)",
                  "$(chrome-close)",
                  "$(chrome-maximize)",
                  "$(chrome-minimize)",
                  "$(chrome-restore)",
                  "$(circle)",
                  "$(circle-outline)",
                  "$(debug-breakpoint-unverified)",
                  "$(circle-slash)",
                  "$(circuit-board)",
                  "$(clear-all)",
                  "$(clippy)",
                  "$(close-all)",
                  "$(cloud-download)",
                  "$(cloud-upload)",
                  "$(code)",
                  "$(collapse-all)",
                  "$(color-mode)",
                  "$(comment-discussion)",
                  "$(compare-changes)",
                  "$(credit-card)",
                  "$(dash)",
                  "$(dashboard)",
                  "$(database)",
                  "$(debug-continue)",
                  "$(debug-disconnect)",
                  "$(debug-pause)",
                  "$(debug-restart)",
                  "$(debug-start)",
                  "$(debug-step-into)",
                  "$(debug-step-out)",
                  "$(debug-step-over)",
                  "$(debug-stop)",
                  "$(debug)",
                  "$(device-camera-video)",
                  "$(device-camera)",
                  "$(device-mobile)",
                  "$(diff-added)",
                  "$(diff-ignored)",
                  "$(diff-modified)",
                  "$(diff-removed)",
                  "$(diff-renamed)",
                  "$(diff)",
                  "$(discard)",
                  "$(editor-layout)",
                  "$(empty-window)",
                  "$(exclude)",
                  "$(extensions)",
                  "$(eye-closed)",
                  "$(file-binary)",
                  "$(file-code)",
                  "$(file-media)",
                  "$(file-pdf)",
                  "$(file-submodule)",
                  "$(file-symlink-directory)",
                  "$(file-symlink-file)",
                  "$(file-zip)",
                  "$(files)",
                  "$(filter)",
                  "$(flame)",
                  "$(fold-down)",
                  "$(fold-up)",
                  "$(fold)",
                  "$(folder-active)",
                  "$(folder-opened)",
                  "$(gear)",
                  "$(gift)",
                  "$(gist-secret)",
                  "$(gist)",
                  "$(git-commit)",
                  "$(git-compare)",
                  "$(git-merge)",
                  "$(github-action)",
                  "$(github-alt)",
                  "$(globe)",
                  "$(grabber)",
                  "$(graph)",
                  "$(gripper)",
                  "$(heart)",
                  "$(home)",
                  "$(horizontal-rule)",
                  "$(hubot)",
                  "$(inbox)",
                  "$(issue-closed)",
                  "$(issue-reopened)",
                  "$(issues)",
                  "$(italic)",
                  "$(jersey)",
                  "$(json)",
                  "$(bracket)",
                  "$(kebab-vertical)",
                  "$(key)",
                  "$(law)",
                  "$(lightbulb-autofix)",
                  "$(link-external)",
                  "$(link)",
                  "$(list-ordered)",
                  "$(list-unordered)",
                  "$(live-share)",
                  "$(loading)",
                  "$(location)",
                  "$(mail-read)",
                  "$(mail)",
                  "$(markdown)",
                  "$(megaphone)",
                  "$(mention)",
                  "$(milestone)",
                  "$(mortar-board)",
                  "$(move)",
                  "$(multiple-windows)",
                  "$(mute)",
                  "$(no-newline)",
                  "$(note)",
                  "$(octoface)",
                  "$(open-preview)",
                  "$(package)",
                  "$(paintcan)",
                  "$(pin)",
                  "$(play)",
                  "$(run)",
                  "$(plug)",
                  "$(preserve-case)",
                  "$(preview)",
                  "$(project)",
                  "$(pulse)",
                  "$(question)",
                  "$(quote)",
                  "$(radio-tower)",
                  "$(reactions)",
                  "$(references)",
                  "$(refresh)",
                  "$(regex)",
                  "$(remote-explorer)",
                  "$(remote)",
                  "$(remove)",
                  "$(replace-all)",
                  "$(replace)",
                  "$(repo-clone)",
                  "$(repo-force-push)",
                  "$(repo-pull)",
                  "$(repo-push)",
                  "$(report)",
                  "$(request-changes)",
                  "$(rocket)",
                  "$(root-folder-opened)",
                  "$(root-folder)",
                  "$(rss)",
                  "$(ruby)",
                  "$(save-all)",
                  "$(save-as)",
                  "$(save)",
                  "$(screen-full)",
                  "$(screen-normal)",
                  "$(search-stop)",
                  "$(server)",
                  "$(settings-gear)",
                  "$(settings)",
                  "$(shield)",
                  "$(smiley)",
                  "$(sort-precedence)",
                  "$(split-horizontal)",
                  "$(split-vertical)",
                  "$(squirrel)",
                  "$(star-full)",
                  "$(star-half)",
                  "$(symbol-class)",
                  "$(symbol-color)",
                  "$(symbol-customcolor)",
                  "$(symbol-constant)",
                  "$(symbol-enum-member)",
                  "$(symbol-field)",
                  "$(symbol-file)",
                  "$(symbol-interface)",
                  "$(symbol-keyword)",
                  "$(symbol-misc)",
                  "$(symbol-operator)",
                  "$(symbol-property)",
                  "$(wrench)",
                  "$(wrench-subaction)",
                  "$(symbol-snippet)",
                  "$(tasklist)",
                  "$(telescope)",
                  "$(text-size)",
                  "$(three-bars)",
                  "$(thumbsdown)",
                  "$(thumbsup)",
                  "$(tools)",
                  "$(triangle-down)",
                  "$(triangle-left)",
                  "$(triangle-right)",
                  "$(triangle-up)",
                  "$(twitter)",
                  "$(unfold)",
                  "$(unlock)",
                  "$(unmute)",
                  "$(unverified)",
                  "$(verified)",
                  "$(versions)",
                  "$(vm-active)",
                  "$(vm-outline)",
                  "$(vm-running)",
                  "$(watch)",
                  "$(whitespace)",
                  "$(whole-word)",
                  "$(window)",
                  "$(word-wrap)",
                  "$(zoom-in)",
                  "$(zoom-out)",
                  "$(list-filter)",
                  "$(list-flat)",
                  "$(list-selection)",
                  "$(selection)",
                  "$(list-tree)",
                  "$(debug-breakpoint-function-unverified)",
                  "$(debug-breakpoint-function)",
                  "$(debug-breakpoint-function-disabled)",
                  "$(debug-stackframe-active)",
                  "$(circle-small-filled)",
                  "$(debug-stackframe-dot)",
                  "$(debug-stackframe)",
                  "$(debug-stackframe-focused)",
                  "$(debug-breakpoint-unsupported)",
                  "$(symbol-string)",
                  "$(debug-reverse-continue)",
                  "$(debug-step-back)",
                  "$(debug-restart-frame)",
                  "$(call-incoming)",
                  "$(call-outgoing)",
                  "$(menu)",
                  "$(expand-all)",
                  "$(feedback)",
                  "$(group-by-ref-type)",
                  "$(ungroup-by-ref-type)",
                  "$(account)",
                  "$(bell-dot)",
                  "$(debug-console)",
                  "$(library)",
                  "$(output)",
                  "$(run-all)",
                  "$(sync-ignored)",
                  "$(pinned)",
                  "$(github-inverted)",
                  "$(debug-alt)",
                  "$(server-process)",
                  "$(server-environment)",
                  "$(pass)",
                  "$(stop-circle)",
                  "$(play-circle)",
                  "$(record)",
                  "$(debug-alt-small)",
                  "$(vm-connect)",
                  "$(cloud)",
                  "$(merge)",
                  "$(export)",
                  "$(graph-left)",
                  "$(magnet)",
                  "$(notebook)",
                  "$(redo)",
                  "$(check-all)",
                  "$(pinned-dirty)",
                  "$(pass-filled)",
                  "$(circle-large-filled)",
                  "$(circle-large)",
                  "$(circle-large-outline)",
                  "$(combine)",
                  "$(gather)",
                  "$(table)",
                  "$(variable-group)",
                  "$(type-hierarchy)",
                  "$(type-hierarchy-sub)",
                  "$(type-hierarchy-super)",
                  "$(git-pull-request-create)",
                  "$(run-above)",
                  "$(run-below)",
                  "$(notebook-template)",
                  "$(debug-rerun)",
                  "$(workspace-trusted)",
                  "$(workspace-untrusted)",
                  "$(workspace-unspecified)",
                  "$(terminal-cmd)",
                  "$(terminal-debian)",
                  "$(terminal-linux)",
                  "$(terminal-powershell)",
                  "$(terminal-tmux)",
                  "$(terminal-ubuntu)",
                  "$(terminal-bash)",
                  "$(arrow-swap)",
                  "$(copy)",
                  "$(person-add)",
                  "$(filter-filled)",
                  "$(wand)",
                  "$(debug-line-by-line)",
                  "$(inspect)",
                  "$(layers)",
                  "$(layers-dot)",
                  "$(layers-active)",
                  "$(compass)",
                  "$(compass-dot)",
                  "$(compass-active)",
                  "$(azure)",
                  "$(issue-draft)",
                  "$(git-pull-request-closed)",
                  "$(git-pull-request-draft)",
                  "$(debug-all)",
                  "$(debug-coverage)",
                  "$(run-errors)",
                  "$(folder-library)",
                  "$(debug-continue-small)",
                  "$(beaker-stop)",
                  "$(graph-line)",
                  "$(graph-scatter)",
                  "$(pie-chart)",
                  "$(bracket-dot)",
                  "$(bracket-error)",
                  "$(lock-small)",
                  "$(azure-devops)",
                  "$(verified-filled)",
                  "$(newline)",
                  "$(layout)",
                  "$(layout-activitybar-left)",
                  "$(layout-activitybar-right)",
                  "$(layout-panel-left)",
                  "$(layout-panel-center)",
                  "$(layout-panel-justify)",
                  "$(layout-panel-right)",
                  "$(layout-panel)",
                  "$(layout-sidebar-left)",
                  "$(layout-sidebar-right)",
                  "$(layout-statusbar)",
                  "$(layout-menubar)",
                  "$(layout-centered)",
                  "$(layout-sidebar-right-off)",
                  "$(layout-panel-off)",
                  "$(layout-sidebar-left-off)",
                  "$(target)",
                  "$(indent)",
                  "$(record-small)",
                  "$(error-small)",
                  "$(arrow-circle-down)",
                  "$(arrow-circle-left)",
                  "$(arrow-circle-right)",
                  "$(arrow-circle-up)",
                  "$(heart-filled)",
                  "$(map)",
                  "$(map-filled)",
                  "$(circle-small)",
                  "$(bell-slash)",
                  "$(bell-slash-dot)",
                  "$(comment-unresolved)",
                  "$(git-pull-request-go-to-changes)",
                  "$(git-pull-request-new-changes)",
                  "$(search-fuzzy)",
                  "$(comment-draft)",
                  "$(dialog-error)",
                  "$(dialog-warning)",
                  "$(dialog-info)",
                  "$(dialog-close)",
                  "$(tree-item-expanded)",
                  "$(tree-filter-on-type-on)",
                  "$(tree-filter-on-type-off)",
                  "$(tree-filter-clear)",
                  "$(tree-item-loading)",
                  "$(menu-selection)",
                  "$(menu-submenu)",
                  "$(menubar-more)",
                  "$(scrollbar-button-left)",
                  "$(scrollbar-button-right)",
                  "$(scrollbar-button-up)",
                  "$(scrollbar-button-down)",
                  "$(toolbar-more)",
                  "$(quick-input-back)"
                ]
              },
              "color": {
                "description": "A theme color ID to associate with the terminal icon.",
                "type": [
                  "string",
                  "null"
                ],
                "enum": [
                  "terminal.ansiBlack",
                  "terminal.ansiRed",
                  "terminal.ansiGreen",
                  "terminal.ansiYellow",
                  "terminal.ansiBlue",
                  "terminal.ansiMagenta",
                  "terminal.ansiCyan",
                  "terminal.ansiWhite"
                ],
                "default": null
              },
              "env": {
                "markdownDescription": "An object with environment variables that will be added to the terminal profile process. Set to `null` to delete environment variables from the base environment.",
                "type": "object",
                "additionalProperties": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "default": {}
              }
            }
          }
        ]
      },
      "defaultDefaultValue": {
        "PowerShell": {
          "source": "PowerShell",
          "icon": "terminal-powershell"
        },
        "Command Prompt": {
          "path": [
            "${env:windir}\\Sysnative\\cmd.exe",
            "${env:windir}\\System32\\cmd.exe"
          ],
          "args": [],
          "icon": "terminal-cmd"
        },
        "Git Bash": {
          "source": "Git Bash"
        }
      },
      "scope": 3
    },
    "terminal.integrated.profiles.osx": {
      "restricted": true,
      "markdownDescription": "The macOS profiles to present when creating a new terminal via the terminal dropdown. Set the `path` property manually with an optional `args`.\n\nSet an existing profile to `null` to hide the profile from the list, for example: `\"bash\": null`.",
      "type": "object",
      "default": {
        "bash": {
          "path": "bash",
          "args": [
            "-l"
          ],
          "icon": "terminal-bash"
        },
        "zsh": {
          "path": "zsh",
          "args": [
            "-l"
          ]
        },
        "fish": {
          "path": "fish",
          "args": [
            "-l"
          ]
        },
        "tmux": {
          "path": "tmux",
          "icon": "terminal-tmux"
        },
        "pwsh": {
          "path": "pwsh",
          "icon": "terminal-powershell"
        }
      },
      "additionalProperties": {
        "anyOf": [
          {
            "type": "object",
            "required": [
              "extensionIdentifier",
              "id",
              "title"
            ],
            "properties": {
              "extensionIdentifier": {
                "description": "The extension that contributed this profile.",
                "type": "string"
              },
              "id": {
                "description": "The id of the extension terminal",
                "type": "string"
              },
              "title": {
                "description": "The name of the extension terminal",
                "type": "string"
              },
              "args": {
                "description": "An optional set of arguments to run the shell executable with.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "overrideName": {
                "description": "Controls whether or not the profile name overrides the auto detected one.",
                "type": "boolean"
              },
              "icon": {
                "description": "A codicon ID to associate with the terminal icon.",
                "type": "string",
                "enum": [
                  "add",
                  "plus",
                  "gist-new",
                  "repo-create",
                  "lightbulb",
                  "light-bulb",
                  "repo",
                  "repo-delete",
                  "gist-fork",
                  "repo-forked",
                  "git-pull-request",
                  "git-pull-request-abandoned",
                  "record-keys",
                  "keyboard",
                  "tag",
                  "tag-add",
                  "tag-remove",
                  "person",
                  "person-follow",
                  "person-outline",
                  "person-filled",
                  "git-branch",
                  "git-branch-create",
                  "git-branch-delete",
                  "source-control",
                  "mirror",
                  "mirror-public",
                  "star",
                  "star-add",
                  "star-delete",
                  "star-empty",
                  "comment",
                  "comment-add",
                  "alert",
                  "warning",
                  "search",
                  "search-save",
                  "log-out",
                  "sign-out",
                  "log-in",
                  "sign-in",
                  "eye",
                  "eye-unwatch",
                  "eye-watch",
                  "circle-filled",
                  "primitive-dot",
                  "close-dirty",
                  "debug-breakpoint",
                  "debug-breakpoint-disabled",
                  "debug-hint",
                  "primitive-square",
                  "edit",
                  "pencil",
                  "info",
                  "issue-opened",
                  "gist-private",
                  "git-fork-private",
                  "lock",
                  "mirror-private",
                  "close",
                  "remove-close",
                  "x",
                  "repo-sync",
                  "sync",
                  "clone",
                  "desktop-download",
                  "beaker",
                  "microscope",
                  "vm",
                  "device-desktop",
                  "file",
                  "file-text",
                  "more",
                  "ellipsis",
                  "kebab-horizontal",
                  "mail-reply",
                  "reply",
                  "organization",
                  "organization-filled",
                  "organization-outline",
                  "new-file",
                  "file-add",
                  "new-folder",
                  "file-directory-create",
                  "trash",
                  "trashcan",
                  "history",
                  "clock",
                  "folder",
                  "file-directory",
                  "symbol-folder",
                  "logo-github",
                  "mark-github",
                  "github",
                  "terminal",
                  "console",
                  "repl",
                  "zap",
                  "symbol-event",
                  "error",
                  "stop",
                  "variable",
                  "symbol-variable",
                  "array",
                  "symbol-array",
                  "symbol-module",
                  "symbol-package",
                  "symbol-namespace",
                  "symbol-object",
                  "symbol-method",
                  "symbol-function",
                  "symbol-constructor",
                  "symbol-boolean",
                  "symbol-null",
                  "symbol-numeric",
                  "symbol-number",
                  "symbol-structure",
                  "symbol-struct",
                  "symbol-parameter",
                  "symbol-type-parameter",
                  "symbol-key",
                  "symbol-text",
                  "symbol-reference",
                  "go-to-file",
                  "symbol-enum",
                  "symbol-value",
                  "symbol-ruler",
                  "symbol-unit",
                  "activate-breakpoints",
                  "archive",
                  "arrow-both",
                  "arrow-down",
                  "arrow-left",
                  "arrow-right",
                  "arrow-small-down",
                  "arrow-small-left",
                  "arrow-small-right",
                  "arrow-small-up",
                  "arrow-up",
                  "bell",
                  "bold",
                  "book",
                  "bookmark",
                  "debug-breakpoint-conditional-unverified",
                  "debug-breakpoint-conditional",
                  "debug-breakpoint-conditional-disabled",
                  "debug-breakpoint-data-unverified",
                  "debug-breakpoint-data",
                  "debug-breakpoint-data-disabled",
                  "debug-breakpoint-log-unverified",
                  "debug-breakpoint-log",
                  "debug-breakpoint-log-disabled",
                  "briefcase",
                  "broadcast",
                  "browser",
                  "bug",
                  "calendar",
                  "case-sensitive",
                  "check",
                  "checklist",
                  "chevron-down",
                  "drop-down-button",
                  "chevron-left",
                  "chevron-right",
                  "chevron-up",
                  "chrome-close",
                  "chrome-maximize",
                  "chrome-minimize",
                  "chrome-restore",
                  "circle",
                  "circle-outline",
                  "debug-breakpoint-unverified",
                  "circle-slash",
                  "circuit-board",
                  "clear-all",
                  "clippy",
                  "close-all",
                  "cloud-download",
                  "cloud-upload",
                  "code",
                  "collapse-all",
                  "color-mode",
                  "comment-discussion",
                  "compare-changes",
                  "credit-card",
                  "dash",
                  "dashboard",
                  "database",
                  "debug-continue",
                  "debug-disconnect",
                  "debug-pause",
                  "debug-restart",
                  "debug-start",
                  "debug-step-into",
                  "debug-step-out",
                  "debug-step-over",
                  "debug-stop",
                  "debug",
                  "device-camera-video",
                  "device-camera",
                  "device-mobile",
                  "diff-added",
                  "diff-ignored",
                  "diff-modified",
                  "diff-removed",
                  "diff-renamed",
                  "diff",
                  "discard",
                  "editor-layout",
                  "empty-window",
                  "exclude",
                  "extensions",
                  "eye-closed",
                  "file-binary",
                  "file-code",
                  "file-media",
                  "file-pdf",
                  "file-submodule",
                  "file-symlink-directory",
                  "file-symlink-file",
                  "file-zip",
                  "files",
                  "filter",
                  "flame",
                  "fold-down",
                  "fold-up",
                  "fold",
                  "folder-active",
                  "folder-opened",
                  "gear",
                  "gift",
                  "gist-secret",
                  "gist",
                  "git-commit",
                  "git-compare",
                  "git-merge",
                  "github-action",
                  "github-alt",
                  "globe",
                  "grabber",
                  "graph",
                  "gripper",
                  "heart",
                  "home",
                  "horizontal-rule",
                  "hubot",
                  "inbox",
                  "issue-closed",
                  "issue-reopened",
                  "issues",
                  "italic",
                  "jersey",
                  "json",
                  "bracket",
                  "kebab-vertical",
                  "key",
                  "law",
                  "lightbulb-autofix",
                  "link-external",
                  "link",
                  "list-ordered",
                  "list-unordered",
                  "live-share",
                  "loading",
                  "location",
                  "mail-read",
                  "mail",
                  "markdown",
                  "megaphone",
                  "mention",
                  "milestone",
                  "mortar-board",
                  "move",
                  "multiple-windows",
                  "mute",
                  "no-newline",
                  "note",
                  "octoface",
                  "open-preview",
                  "package",
                  "paintcan",
                  "pin",
                  "play",
                  "run",
                  "plug",
                  "preserve-case",
                  "preview",
                  "project",
                  "pulse",
                  "question",
                  "quote",
                  "radio-tower",
                  "reactions",
                  "references",
                  "refresh",
                  "regex",
                  "remote-explorer",
                  "remote",
                  "remove",
                  "replace-all",
                  "replace",
                  "repo-clone",
                  "repo-force-push",
                  "repo-pull",
                  "repo-push",
                  "report",
                  "request-changes",
                  "rocket",
                  "root-folder-opened",
                  "root-folder",
                  "rss",
                  "ruby",
                  "save-all",
                  "save-as",
                  "save",
                  "screen-full",
                  "screen-normal",
                  "search-stop",
                  "server",
                  "settings-gear",
                  "settings",
                  "shield",
                  "smiley",
                  "sort-precedence",
                  "split-horizontal",
                  "split-vertical",
                  "squirrel",
                  "star-full",
                  "star-half",
                  "symbol-class",
                  "symbol-color",
                  "symbol-customcolor",
                  "symbol-constant",
                  "symbol-enum-member",
                  "symbol-field",
                  "symbol-file",
                  "symbol-interface",
                  "symbol-keyword",
                  "symbol-misc",
                  "symbol-operator",
                  "symbol-property",
                  "wrench",
                  "wrench-subaction",
                  "symbol-snippet",
                  "tasklist",
                  "telescope",
                  "text-size",
                  "three-bars",
                  "thumbsdown",
                  "thumbsup",
                  "tools",
                  "triangle-down",
                  "triangle-left",
                  "triangle-right",
                  "triangle-up",
                  "twitter",
                  "unfold",
                  "unlock",
                  "unmute",
                  "unverified",
                  "verified",
                  "versions",
                  "vm-active",
                  "vm-outline",
                  "vm-running",
                  "watch",
                  "whitespace",
                  "whole-word",
                  "window",
                  "word-wrap",
                  "zoom-in",
                  "zoom-out",
                  "list-filter",
                  "list-flat",
                  "list-selection",
                  "selection",
                  "list-tree",
                  "debug-breakpoint-function-unverified",
                  "debug-breakpoint-function",
                  "debug-breakpoint-function-disabled",
                  "debug-stackframe-active",
                  "circle-small-filled",
                  "debug-stackframe-dot",
                  "debug-stackframe",
                  "debug-stackframe-focused",
                  "debug-breakpoint-unsupported",
                  "symbol-string",
                  "debug-reverse-continue",
                  "debug-step-back",
                  "debug-restart-frame",
                  "call-incoming",
                  "call-outgoing",
                  "menu",
                  "expand-all",
                  "feedback",
                  "group-by-ref-type",
                  "ungroup-by-ref-type",
                  "account",
                  "bell-dot",
                  "debug-console",
                  "library",
                  "output",
                  "run-all",
                  "sync-ignored",
                  "pinned",
                  "github-inverted",
                  "debug-alt",
                  "server-process",
                  "server-environment",
                  "pass",
                  "stop-circle",
                  "play-circle",
                  "record",
                  "debug-alt-small",
                  "vm-connect",
                  "cloud",
                  "merge",
                  "export",
                  "graph-left",
                  "magnet",
                  "notebook",
                  "redo",
                  "check-all",
                  "pinned-dirty",
                  "pass-filled",
                  "circle-large-filled",
                  "circle-large",
                  "circle-large-outline",
                  "combine",
                  "gather",
                  "table",
                  "variable-group",
                  "type-hierarchy",
                  "type-hierarchy-sub",
                  "type-hierarchy-super",
                  "git-pull-request-create",
                  "run-above",
                  "run-below",
                  "notebook-template",
                  "debug-rerun",
                  "workspace-trusted",
                  "workspace-untrusted",
                  "workspace-unspecified",
                  "terminal-cmd",
                  "terminal-debian",
                  "terminal-linux",
                  "terminal-powershell",
                  "terminal-tmux",
                  "terminal-ubuntu",
                  "terminal-bash",
                  "arrow-swap",
                  "copy",
                  "person-add",
                  "filter-filled",
                  "wand",
                  "debug-line-by-line",
                  "inspect",
                  "layers",
                  "layers-dot",
                  "layers-active",
                  "compass",
                  "compass-dot",
                  "compass-active",
                  "azure",
                  "issue-draft",
                  "git-pull-request-closed",
                  "git-pull-request-draft",
                  "debug-all",
                  "debug-coverage",
                  "run-errors",
                  "folder-library",
                  "debug-continue-small",
                  "beaker-stop",
                  "graph-line",
                  "graph-scatter",
                  "pie-chart",
                  "bracket-dot",
                  "bracket-error",
                  "lock-small",
                  "azure-devops",
                  "verified-filled",
                  "newline",
                  "layout",
                  "layout-activitybar-left",
                  "layout-activitybar-right",
                  "layout-panel-left",
                  "layout-panel-center",
                  "layout-panel-justify",
                  "layout-panel-right",
                  "layout-panel",
                  "layout-sidebar-left",
                  "layout-sidebar-right",
                  "layout-statusbar",
                  "layout-menubar",
                  "layout-centered",
                  "layout-sidebar-right-off",
                  "layout-panel-off",
                  "layout-sidebar-left-off",
                  "target",
                  "indent",
                  "record-small",
                  "error-small",
                  "arrow-circle-down",
                  "arrow-circle-left",
                  "arrow-circle-right",
                  "arrow-circle-up",
                  "heart-filled",
                  "map",
                  "map-filled",
                  "circle-small",
                  "bell-slash",
                  "bell-slash-dot",
                  "comment-unresolved",
                  "git-pull-request-go-to-changes",
                  "git-pull-request-new-changes",
                  "search-fuzzy",
                  "comment-draft",
                  "dialog-error",
                  "dialog-warning",
                  "dialog-info",
                  "dialog-close",
                  "tree-item-expanded",
                  "tree-filter-on-type-on",
                  "tree-filter-on-type-off",
                  "tree-filter-clear",
                  "tree-item-loading",
                  "menu-selection",
                  "menu-submenu",
                  "menubar-more",
                  "scrollbar-button-left",
                  "scrollbar-button-right",
                  "scrollbar-button-up",
                  "scrollbar-button-down",
                  "toolbar-more",
                  "quick-input-back"
                ],
                "markdownEnumDescriptions": [
                  "$(add)",
                  "$(plus)",
                  "$(gist-new)",
                  "$(repo-create)",
                  "$(lightbulb)",
                  "$(light-bulb)",
                  "$(repo)",
                  "$(repo-delete)",
                  "$(gist-fork)",
                  "$(repo-forked)",
                  "$(git-pull-request)",
                  "$(git-pull-request-abandoned)",
                  "$(record-keys)",
                  "$(keyboard)",
                  "$(tag)",
                  "$(tag-add)",
                  "$(tag-remove)",
                  "$(person)",
                  "$(person-follow)",
                  "$(person-outline)",
                  "$(person-filled)",
                  "$(git-branch)",
                  "$(git-branch-create)",
                  "$(git-branch-delete)",
                  "$(source-control)",
                  "$(mirror)",
                  "$(mirror-public)",
                  "$(star)",
                  "$(star-add)",
                  "$(star-delete)",
                  "$(star-empty)",
                  "$(comment)",
                  "$(comment-add)",
                  "$(alert)",
                  "$(warning)",
                  "$(search)",
                  "$(search-save)",
                  "$(log-out)",
                  "$(sign-out)",
                  "$(log-in)",
                  "$(sign-in)",
                  "$(eye)",
                  "$(eye-unwatch)",
                  "$(eye-watch)",
                  "$(circle-filled)",
                  "$(primitive-dot)",
                  "$(close-dirty)",
                  "$(debug-breakpoint)",
                  "$(debug-breakpoint-disabled)",
                  "$(debug-hint)",
                  "$(primitive-square)",
                  "$(edit)",
                  "$(pencil)",
                  "$(info)",
                  "$(issue-opened)",
                  "$(gist-private)",
                  "$(git-fork-private)",
                  "$(lock)",
                  "$(mirror-private)",
                  "$(close)",
                  "$(remove-close)",
                  "$(x)",
                  "$(repo-sync)",
                  "$(sync)",
                  "$(clone)",
                  "$(desktop-download)",
                  "$(beaker)",
                  "$(microscope)",
                  "$(vm)",
                  "$(device-desktop)",
                  "$(file)",
                  "$(file-text)",
                  "$(more)",
                  "$(ellipsis)",
                  "$(kebab-horizontal)",
                  "$(mail-reply)",
                  "$(reply)",
                  "$(organization)",
                  "$(organization-filled)",
                  "$(organization-outline)",
                  "$(new-file)",
                  "$(file-add)",
                  "$(new-folder)",
                  "$(file-directory-create)",
                  "$(trash)",
                  "$(trashcan)",
                  "$(history)",
                  "$(clock)",
                  "$(folder)",
                  "$(file-directory)",
                  "$(symbol-folder)",
                  "$(logo-github)",
                  "$(mark-github)",
                  "$(github)",
                  "$(terminal)",
                  "$(console)",
                  "$(repl)",
                  "$(zap)",
                  "$(symbol-event)",
                  "$(error)",
                  "$(stop)",
                  "$(variable)",
                  "$(symbol-variable)",
                  "$(array)",
                  "$(symbol-array)",
                  "$(symbol-module)",
                  "$(symbol-package)",
                  "$(symbol-namespace)",
                  "$(symbol-object)",
                  "$(symbol-method)",
                  "$(symbol-function)",
                  "$(symbol-constructor)",
                  "$(symbol-boolean)",
                  "$(symbol-null)",
                  "$(symbol-numeric)",
                  "$(symbol-number)",
                  "$(symbol-structure)",
                  "$(symbol-struct)",
                  "$(symbol-parameter)",
                  "$(symbol-type-parameter)",
                  "$(symbol-key)",
                  "$(symbol-text)",
                  "$(symbol-reference)",
                  "$(go-to-file)",
                  "$(symbol-enum)",
                  "$(symbol-value)",
                  "$(symbol-ruler)",
                  "$(symbol-unit)",
                  "$(activate-breakpoints)",
                  "$(archive)",
                  "$(arrow-both)",
                  "$(arrow-down)",
                  "$(arrow-left)",
                  "$(arrow-right)",
                  "$(arrow-small-down)",
                  "$(arrow-small-left)",
                  "$(arrow-small-right)",
                  "$(arrow-small-up)",
                  "$(arrow-up)",
                  "$(bell)",
                  "$(bold)",
                  "$(book)",
                  "$(bookmark)",
                  "$(debug-breakpoint-conditional-unverified)",
                  "$(debug-breakpoint-conditional)",
                  "$(debug-breakpoint-conditional-disabled)",
                  "$(debug-breakpoint-data-unverified)",
                  "$(debug-breakpoint-data)",
                  "$(debug-breakpoint-data-disabled)",
                  "$(debug-breakpoint-log-unverified)",
                  "$(debug-breakpoint-log)",
                  "$(debug-breakpoint-log-disabled)",
                  "$(briefcase)",
                  "$(broadcast)",
                  "$(browser)",
                  "$(bug)",
                  "$(calendar)",
                  "$(case-sensitive)",
                  "$(check)",
                  "$(checklist)",
                  "$(chevron-down)",
                  "$(drop-down-button)",
                  "$(chevron-left)",
                  "$(chevron-right)",
                  "$(chevron-up)",
                  "$(chrome-close)",
                  "$(chrome-maximize)",
                  "$(chrome-minimize)",
                  "$(chrome-restore)",
                  "$(circle)",
                  "$(circle-outline)",
                  "$(debug-breakpoint-unverified)",
                  "$(circle-slash)",
                  "$(circuit-board)",
                  "$(clear-all)",
                  "$(clippy)",
                  "$(close-all)",
                  "$(cloud-download)",
                  "$(cloud-upload)",
                  "$(code)",
                  "$(collapse-all)",
                  "$(color-mode)",
                  "$(comment-discussion)",
                  "$(compare-changes)",
                  "$(credit-card)",
                  "$(dash)",
                  "$(dashboard)",
                  "$(database)",
                  "$(debug-continue)",
                  "$(debug-disconnect)",
                  "$(debug-pause)",
                  "$(debug-restart)",
                  "$(debug-start)",
                  "$(debug-step-into)",
                  "$(debug-step-out)",
                  "$(debug-step-over)",
                  "$(debug-stop)",
                  "$(debug)",
                  "$(device-camera-video)",
                  "$(device-camera)",
                  "$(device-mobile)",
                  "$(diff-added)",
                  "$(diff-ignored)",
                  "$(diff-modified)",
                  "$(diff-removed)",
                  "$(diff-renamed)",
                  "$(diff)",
                  "$(discard)",
                  "$(editor-layout)",
                  "$(empty-window)",
                  "$(exclude)",
                  "$(extensions)",
                  "$(eye-closed)",
                  "$(file-binary)",
                  "$(file-code)",
                  "$(file-media)",
                  "$(file-pdf)",
                  "$(file-submodule)",
                  "$(file-symlink-directory)",
                  "$(file-symlink-file)",
                  "$(file-zip)",
                  "$(files)",
                  "$(filter)",
                  "$(flame)",
                  "$(fold-down)",
                  "$(fold-up)",
                  "$(fold)",
                  "$(folder-active)",
                  "$(folder-opened)",
                  "$(gear)",
                  "$(gift)",
                  "$(gist-secret)",
                  "$(gist)",
                  "$(git-commit)",
                  "$(git-compare)",
                  "$(git-merge)",
                  "$(github-action)",
                  "$(github-alt)",
                  "$(globe)",
                  "$(grabber)",
                  "$(graph)",
                  "$(gripper)",
                  "$(heart)",
                  "$(home)",
                  "$(horizontal-rule)",
                  "$(hubot)",
                  "$(inbox)",
                  "$(issue-closed)",
                  "$(issue-reopened)",
                  "$(issues)",
                  "$(italic)",
                  "$(jersey)",
                  "$(json)",
                  "$(bracket)",
                  "$(kebab-vertical)",
                  "$(key)",
                  "$(law)",
                  "$(lightbulb-autofix)",
                  "$(link-external)",
                  "$(link)",
                  "$(list-ordered)",
                  "$(list-unordered)",
                  "$(live-share)",
                  "$(loading)",
                  "$(location)",
                  "$(mail-read)",
                  "$(mail)",
                  "$(markdown)",
                  "$(megaphone)",
                  "$(mention)",
                  "$(milestone)",
                  "$(mortar-board)",
                  "$(move)",
                  "$(multiple-windows)",
                  "$(mute)",
                  "$(no-newline)",
                  "$(note)",
                  "$(octoface)",
                  "$(open-preview)",
                  "$(package)",
                  "$(paintcan)",
                  "$(pin)",
                  "$(play)",
                  "$(run)",
                  "$(plug)",
                  "$(preserve-case)",
                  "$(preview)",
                  "$(project)",
                  "$(pulse)",
                  "$(question)",
                  "$(quote)",
                  "$(radio-tower)",
                  "$(reactions)",
                  "$(references)",
                  "$(refresh)",
                  "$(regex)",
                  "$(remote-explorer)",
                  "$(remote)",
                  "$(remove)",
                  "$(replace-all)",
                  "$(replace)",
                  "$(repo-clone)",
                  "$(repo-force-push)",
                  "$(repo-pull)",
                  "$(repo-push)",
                  "$(report)",
                  "$(request-changes)",
                  "$(rocket)",
                  "$(root-folder-opened)",
                  "$(root-folder)",
                  "$(rss)",
                  "$(ruby)",
                  "$(save-all)",
                  "$(save-as)",
                  "$(save)",
                  "$(screen-full)",
                  "$(screen-normal)",
                  "$(search-stop)",
                  "$(server)",
                  "$(settings-gear)",
                  "$(settings)",
                  "$(shield)",
                  "$(smiley)",
                  "$(sort-precedence)",
                  "$(split-horizontal)",
                  "$(split-vertical)",
                  "$(squirrel)",
                  "$(star-full)",
                  "$(star-half)",
                  "$(symbol-class)",
                  "$(symbol-color)",
                  "$(symbol-customcolor)",
                  "$(symbol-constant)",
                  "$(symbol-enum-member)",
                  "$(symbol-field)",
                  "$(symbol-file)",
                  "$(symbol-interface)",
                  "$(symbol-keyword)",
                  "$(symbol-misc)",
                  "$(symbol-operator)",
                  "$(symbol-property)",
                  "$(wrench)",
                  "$(wrench-subaction)",
                  "$(symbol-snippet)",
                  "$(tasklist)",
                  "$(telescope)",
                  "$(text-size)",
                  "$(three-bars)",
                  "$(thumbsdown)",
                  "$(thumbsup)",
                  "$(tools)",
                  "$(triangle-down)",
                  "$(triangle-left)",
                  "$(triangle-right)",
                  "$(triangle-up)",
                  "$(twitter)",
                  "$(unfold)",
                  "$(unlock)",
                  "$(unmute)",
                  "$(unverified)",
                  "$(verified)",
                  "$(versions)",
                  "$(vm-active)",
                  "$(vm-outline)",
                  "$(vm-running)",
                  "$(watch)",
                  "$(whitespace)",
                  "$(whole-word)",
                  "$(window)",
                  "$(word-wrap)",
                  "$(zoom-in)",
                  "$(zoom-out)",
                  "$(list-filter)",
                  "$(list-flat)",
                  "$(list-selection)",
                  "$(selection)",
                  "$(list-tree)",
                  "$(debug-breakpoint-function-unverified)",
                  "$(debug-breakpoint-function)",
                  "$(debug-breakpoint-function-disabled)",
                  "$(debug-stackframe-active)",
                  "$(circle-small-filled)",
                  "$(debug-stackframe-dot)",
                  "$(debug-stackframe)",
                  "$(debug-stackframe-focused)",
                  "$(debug-breakpoint-unsupported)",
                  "$(symbol-string)",
                  "$(debug-reverse-continue)",
                  "$(debug-step-back)",
                  "$(debug-restart-frame)",
                  "$(call-incoming)",
                  "$(call-outgoing)",
                  "$(menu)",
                  "$(expand-all)",
                  "$(feedback)",
                  "$(group-by-ref-type)",
                  "$(ungroup-by-ref-type)",
                  "$(account)",
                  "$(bell-dot)",
                  "$(debug-console)",
                  "$(library)",
                  "$(output)",
                  "$(run-all)",
                  "$(sync-ignored)",
                  "$(pinned)",
                  "$(github-inverted)",
                  "$(debug-alt)",
                  "$(server-process)",
                  "$(server-environment)",
                  "$(pass)",
                  "$(stop-circle)",
                  "$(play-circle)",
                  "$(record)",
                  "$(debug-alt-small)",
                  "$(vm-connect)",
                  "$(cloud)",
                  "$(merge)",
                  "$(export)",
                  "$(graph-left)",
                  "$(magnet)",
                  "$(notebook)",
                  "$(redo)",
                  "$(check-all)",
                  "$(pinned-dirty)",
                  "$(pass-filled)",
                  "$(circle-large-filled)",
                  "$(circle-large)",
                  "$(circle-large-outline)",
                  "$(combine)",
                  "$(gather)",
                  "$(table)",
                  "$(variable-group)",
                  "$(type-hierarchy)",
                  "$(type-hierarchy-sub)",
                  "$(type-hierarchy-super)",
                  "$(git-pull-request-create)",
                  "$(run-above)",
                  "$(run-below)",
                  "$(notebook-template)",
                  "$(debug-rerun)",
                  "$(workspace-trusted)",
                  "$(workspace-untrusted)",
                  "$(workspace-unspecified)",
                  "$(terminal-cmd)",
                  "$(terminal-debian)",
                  "$(terminal-linux)",
                  "$(terminal-powershell)",
                  "$(terminal-tmux)",
                  "$(terminal-ubuntu)",
                  "$(terminal-bash)",
                  "$(arrow-swap)",
                  "$(copy)",
                  "$(person-add)",
                  "$(filter-filled)",
                  "$(wand)",
                  "$(debug-line-by-line)",
                  "$(inspect)",
                  "$(layers)",
                  "$(layers-dot)",
                  "$(layers-active)",
                  "$(compass)",
                  "$(compass-dot)",
                  "$(compass-active)",
                  "$(azure)",
                  "$(issue-draft)",
                  "$(git-pull-request-closed)",
                  "$(git-pull-request-draft)",
                  "$(debug-all)",
                  "$(debug-coverage)",
                  "$(run-errors)",
                  "$(folder-library)",
                  "$(debug-continue-small)",
                  "$(beaker-stop)",
                  "$(graph-line)",
                  "$(graph-scatter)",
                  "$(pie-chart)",
                  "$(bracket-dot)",
                  "$(bracket-error)",
                  "$(lock-small)",
                  "$(azure-devops)",
                  "$(verified-filled)",
                  "$(newline)",
                  "$(layout)",
                  "$(layout-activitybar-left)",
                  "$(layout-activitybar-right)",
                  "$(layout-panel-left)",
                  "$(layout-panel-center)",
                  "$(layout-panel-justify)",
                  "$(layout-panel-right)",
                  "$(layout-panel)",
                  "$(layout-sidebar-left)",
                  "$(layout-sidebar-right)",
                  "$(layout-statusbar)",
                  "$(layout-menubar)",
                  "$(layout-centered)",
                  "$(layout-sidebar-right-off)",
                  "$(layout-panel-off)",
                  "$(layout-sidebar-left-off)",
                  "$(target)",
                  "$(indent)",
                  "$(record-small)",
                  "$(error-small)",
                  "$(arrow-circle-down)",
                  "$(arrow-circle-left)",
                  "$(arrow-circle-right)",
                  "$(arrow-circle-up)",
                  "$(heart-filled)",
                  "$(map)",
                  "$(map-filled)",
                  "$(circle-small)",
                  "$(bell-slash)",
                  "$(bell-slash-dot)",
                  "$(comment-unresolved)",
                  "$(git-pull-request-go-to-changes)",
                  "$(git-pull-request-new-changes)",
                  "$(search-fuzzy)",
                  "$(comment-draft)",
                  "$(dialog-error)",
                  "$(dialog-warning)",
                  "$(dialog-info)",
                  "$(dialog-close)",
                  "$(tree-item-expanded)",
                  "$(tree-filter-on-type-on)",
                  "$(tree-filter-on-type-off)",
                  "$(tree-filter-clear)",
                  "$(tree-item-loading)",
                  "$(menu-selection)",
                  "$(menu-submenu)",
                  "$(menubar-more)",
                  "$(scrollbar-button-left)",
                  "$(scrollbar-button-right)",
                  "$(scrollbar-button-up)",
                  "$(scrollbar-button-down)",
                  "$(toolbar-more)",
                  "$(quick-input-back)"
                ]
              },
              "color": {
                "description": "A theme color ID to associate with the terminal icon.",
                "type": [
                  "string",
                  "null"
                ],
                "enum": [
                  "terminal.ansiBlack",
                  "terminal.ansiRed",
                  "terminal.ansiGreen",
                  "terminal.ansiYellow",
                  "terminal.ansiBlue",
                  "terminal.ansiMagenta",
                  "terminal.ansiCyan",
                  "terminal.ansiWhite"
                ],
                "default": null
              },
              "env": {
                "markdownDescription": "An object with environment variables that will be added to the terminal profile process. Set to `null` to delete environment variables from the base environment.",
                "type": "object",
                "additionalProperties": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "default": {}
              }
            }
          },
          {
            "type": "null"
          },
          {
            "type": "object",
            "required": [
              "path"
            ],
            "properties": {
              "path": {
                "description": "A single path to a shell executable or an array of paths that will be used as fallbacks when one fails.",
                "type": [
                  "string",
                  "array"
                ],
                "items": {
                  "type": "string"
                }
              },
              "args": {
                "description": "An optional set of arguments to run the shell executable with.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "overrideName": {
                "description": "Controls whether or not the profile name overrides the auto detected one.",
                "type": "boolean"
              },
              "icon": {
                "description": "A codicon ID to associate with the terminal icon.",
                "type": "string",
                "enum": [
                  "add",
                  "plus",
                  "gist-new",
                  "repo-create",
                  "lightbulb",
                  "light-bulb",
                  "repo",
                  "repo-delete",
                  "gist-fork",
                  "repo-forked",
                  "git-pull-request",
                  "git-pull-request-abandoned",
                  "record-keys",
                  "keyboard",
                  "tag",
                  "tag-add",
                  "tag-remove",
                  "person",
                  "person-follow",
                  "person-outline",
                  "person-filled",
                  "git-branch",
                  "git-branch-create",
                  "git-branch-delete",
                  "source-control",
                  "mirror",
                  "mirror-public",
                  "star",
                  "star-add",
                  "star-delete",
                  "star-empty",
                  "comment",
                  "comment-add",
                  "alert",
                  "warning",
                  "search",
                  "search-save",
                  "log-out",
                  "sign-out",
                  "log-in",
                  "sign-in",
                  "eye",
                  "eye-unwatch",
                  "eye-watch",
                  "circle-filled",
                  "primitive-dot",
                  "close-dirty",
                  "debug-breakpoint",
                  "debug-breakpoint-disabled",
                  "debug-hint",
                  "primitive-square",
                  "edit",
                  "pencil",
                  "info",
                  "issue-opened",
                  "gist-private",
                  "git-fork-private",
                  "lock",
                  "mirror-private",
                  "close",
                  "remove-close",
                  "x",
                  "repo-sync",
                  "sync",
                  "clone",
                  "desktop-download",
                  "beaker",
                  "microscope",
                  "vm",
                  "device-desktop",
                  "file",
                  "file-text",
                  "more",
                  "ellipsis",
                  "kebab-horizontal",
                  "mail-reply",
                  "reply",
                  "organization",
                  "organization-filled",
                  "organization-outline",
                  "new-file",
                  "file-add",
                  "new-folder",
                  "file-directory-create",
                  "trash",
                  "trashcan",
                  "history",
                  "clock",
                  "folder",
                  "file-directory",
                  "symbol-folder",
                  "logo-github",
                  "mark-github",
                  "github",
                  "terminal",
                  "console",
                  "repl",
                  "zap",
                  "symbol-event",
                  "error",
                  "stop",
                  "variable",
                  "symbol-variable",
                  "array",
                  "symbol-array",
                  "symbol-module",
                  "symbol-package",
                  "symbol-namespace",
                  "symbol-object",
                  "symbol-method",
                  "symbol-function",
                  "symbol-constructor",
                  "symbol-boolean",
                  "symbol-null",
                  "symbol-numeric",
                  "symbol-number",
                  "symbol-structure",
                  "symbol-struct",
                  "symbol-parameter",
                  "symbol-type-parameter",
                  "symbol-key",
                  "symbol-text",
                  "symbol-reference",
                  "go-to-file",
                  "symbol-enum",
                  "symbol-value",
                  "symbol-ruler",
                  "symbol-unit",
                  "activate-breakpoints",
                  "archive",
                  "arrow-both",
                  "arrow-down",
                  "arrow-left",
                  "arrow-right",
                  "arrow-small-down",
                  "arrow-small-left",
                  "arrow-small-right",
                  "arrow-small-up",
                  "arrow-up",
                  "bell",
                  "bold",
                  "book",
                  "bookmark",
                  "debug-breakpoint-conditional-unverified",
                  "debug-breakpoint-conditional",
                  "debug-breakpoint-conditional-disabled",
                  "debug-breakpoint-data-unverified",
                  "debug-breakpoint-data",
                  "debug-breakpoint-data-disabled",
                  "debug-breakpoint-log-unverified",
                  "debug-breakpoint-log",
                  "debug-breakpoint-log-disabled",
                  "briefcase",
                  "broadcast",
                  "browser",
                  "bug",
                  "calendar",
                  "case-sensitive",
                  "check",
                  "checklist",
                  "chevron-down",
                  "drop-down-button",
                  "chevron-left",
                  "chevron-right",
                  "chevron-up",
                  "chrome-close",
                  "chrome-maximize",
                  "chrome-minimize",
                  "chrome-restore",
                  "circle",
                  "circle-outline",
                  "debug-breakpoint-unverified",
                  "circle-slash",
                  "circuit-board",
                  "clear-all",
                  "clippy",
                  "close-all",
                  "cloud-download",
                  "cloud-upload",
                  "code",
                  "collapse-all",
                  "color-mode",
                  "comment-discussion",
                  "compare-changes",
                  "credit-card",
                  "dash",
                  "dashboard",
                  "database",
                  "debug-continue",
                  "debug-disconnect",
                  "debug-pause",
                  "debug-restart",
                  "debug-start",
                  "debug-step-into",
                  "debug-step-out",
                  "debug-step-over",
                  "debug-stop",
                  "debug",
                  "device-camera-video",
                  "device-camera",
                  "device-mobile",
                  "diff-added",
                  "diff-ignored",
                  "diff-modified",
                  "diff-removed",
                  "diff-renamed",
                  "diff",
                  "discard",
                  "editor-layout",
                  "empty-window",
                  "exclude",
                  "extensions",
                  "eye-closed",
                  "file-binary",
                  "file-code",
                  "file-media",
                  "file-pdf",
                  "file-submodule",
                  "file-symlink-directory",
                  "file-symlink-file",
                  "file-zip",
                  "files",
                  "filter",
                  "flame",
                  "fold-down",
                  "fold-up",
                  "fold",
                  "folder-active",
                  "folder-opened",
                  "gear",
                  "gift",
                  "gist-secret",
                  "gist",
                  "git-commit",
                  "git-compare",
                  "git-merge",
                  "github-action",
                  "github-alt",
                  "globe",
                  "grabber",
                  "graph",
                  "gripper",
                  "heart",
                  "home",
                  "horizontal-rule",
                  "hubot",
                  "inbox",
                  "issue-closed",
                  "issue-reopened",
                  "issues",
                  "italic",
                  "jersey",
                  "json",
                  "bracket",
                  "kebab-vertical",
                  "key",
                  "law",
                  "lightbulb-autofix",
                  "link-external",
                  "link",
                  "list-ordered",
                  "list-unordered",
                  "live-share",
                  "loading",
                  "location",
                  "mail-read",
                  "mail",
                  "markdown",
                  "megaphone",
                  "mention",
                  "milestone",
                  "mortar-board",
                  "move",
                  "multiple-windows",
                  "mute",
                  "no-newline",
                  "note",
                  "octoface",
                  "open-preview",
                  "package",
                  "paintcan",
                  "pin",
                  "play",
                  "run",
                  "plug",
                  "preserve-case",
                  "preview",
                  "project",
                  "pulse",
                  "question",
                  "quote",
                  "radio-tower",
                  "reactions",
                  "references",
                  "refresh",
                  "regex",
                  "remote-explorer",
                  "remote",
                  "remove",
                  "replace-all",
                  "replace",
                  "repo-clone",
                  "repo-force-push",
                  "repo-pull",
                  "repo-push",
                  "report",
                  "request-changes",
                  "rocket",
                  "root-folder-opened",
                  "root-folder",
                  "rss",
                  "ruby",
                  "save-all",
                  "save-as",
                  "save",
                  "screen-full",
                  "screen-normal",
                  "search-stop",
                  "server",
                  "settings-gear",
                  "settings",
                  "shield",
                  "smiley",
                  "sort-precedence",
                  "split-horizontal",
                  "split-vertical",
                  "squirrel",
                  "star-full",
                  "star-half",
                  "symbol-class",
                  "symbol-color",
                  "symbol-customcolor",
                  "symbol-constant",
                  "symbol-enum-member",
                  "symbol-field",
                  "symbol-file",
                  "symbol-interface",
                  "symbol-keyword",
                  "symbol-misc",
                  "symbol-operator",
                  "symbol-property",
                  "wrench",
                  "wrench-subaction",
                  "symbol-snippet",
                  "tasklist",
                  "telescope",
                  "text-size",
                  "three-bars",
                  "thumbsdown",
                  "thumbsup",
                  "tools",
                  "triangle-down",
                  "triangle-left",
                  "triangle-right",
                  "triangle-up",
                  "twitter",
                  "unfold",
                  "unlock",
                  "unmute",
                  "unverified",
                  "verified",
                  "versions",
                  "vm-active",
                  "vm-outline",
                  "vm-running",
                  "watch",
                  "whitespace",
                  "whole-word",
                  "window",
                  "word-wrap",
                  "zoom-in",
                  "zoom-out",
                  "list-filter",
                  "list-flat",
                  "list-selection",
                  "selection",
                  "list-tree",
                  "debug-breakpoint-function-unverified",
                  "debug-breakpoint-function",
                  "debug-breakpoint-function-disabled",
                  "debug-stackframe-active",
                  "circle-small-filled",
                  "debug-stackframe-dot",
                  "debug-stackframe",
                  "debug-stackframe-focused",
                  "debug-breakpoint-unsupported",
                  "symbol-string",
                  "debug-reverse-continue",
                  "debug-step-back",
                  "debug-restart-frame",
                  "call-incoming",
                  "call-outgoing",
                  "menu",
                  "expand-all",
                  "feedback",
                  "group-by-ref-type",
                  "ungroup-by-ref-type",
                  "account",
                  "bell-dot",
                  "debug-console",
                  "library",
                  "output",
                  "run-all",
                  "sync-ignored",
                  "pinned",
                  "github-inverted",
                  "debug-alt",
                  "server-process",
                  "server-environment",
                  "pass",
                  "stop-circle",
                  "play-circle",
                  "record",
                  "debug-alt-small",
                  "vm-connect",
                  "cloud",
                  "merge",
                  "export",
                  "graph-left",
                  "magnet",
                  "notebook",
                  "redo",
                  "check-all",
                  "pinned-dirty",
                  "pass-filled",
                  "circle-large-filled",
                  "circle-large",
                  "circle-large-outline",
                  "combine",
                  "gather",
                  "table",
                  "variable-group",
                  "type-hierarchy",
                  "type-hierarchy-sub",
                  "type-hierarchy-super",
                  "git-pull-request-create",
                  "run-above",
                  "run-below",
                  "notebook-template",
                  "debug-rerun",
                  "workspace-trusted",
                  "workspace-untrusted",
                  "workspace-unspecified",
                  "terminal-cmd",
                  "terminal-debian",
                  "terminal-linux",
                  "terminal-powershell",
                  "terminal-tmux",
                  "terminal-ubuntu",
                  "terminal-bash",
                  "arrow-swap",
                  "copy",
                  "person-add",
                  "filter-filled",
                  "wand",
                  "debug-line-by-line",
                  "inspect",
                  "layers",
                  "layers-dot",
                  "layers-active",
                  "compass",
                  "compass-dot",
                  "compass-active",
                  "azure",
                  "issue-draft",
                  "git-pull-request-closed",
                  "git-pull-request-draft",
                  "debug-all",
                  "debug-coverage",
                  "run-errors",
                  "folder-library",
                  "debug-continue-small",
                  "beaker-stop",
                  "graph-line",
                  "graph-scatter",
                  "pie-chart",
                  "bracket-dot",
                  "bracket-error",
                  "lock-small",
                  "azure-devops",
                  "verified-filled",
                  "newline",
                  "layout",
                  "layout-activitybar-left",
                  "layout-activitybar-right",
                  "layout-panel-left",
                  "layout-panel-center",
                  "layout-panel-justify",
                  "layout-panel-right",
                  "layout-panel",
                  "layout-sidebar-left",
                  "layout-sidebar-right",
                  "layout-statusbar",
                  "layout-menubar",
                  "layout-centered",
                  "layout-sidebar-right-off",
                  "layout-panel-off",
                  "layout-sidebar-left-off",
                  "target",
                  "indent",
                  "record-small",
                  "error-small",
                  "arrow-circle-down",
                  "arrow-circle-left",
                  "arrow-circle-right",
                  "arrow-circle-up",
                  "heart-filled",
                  "map",
                  "map-filled",
                  "circle-small",
                  "bell-slash",
                  "bell-slash-dot",
                  "comment-unresolved",
                  "git-pull-request-go-to-changes",
                  "git-pull-request-new-changes",
                  "search-fuzzy",
                  "comment-draft",
                  "dialog-error",
                  "dialog-warning",
                  "dialog-info",
                  "dialog-close",
                  "tree-item-expanded",
                  "tree-filter-on-type-on",
                  "tree-filter-on-type-off",
                  "tree-filter-clear",
                  "tree-item-loading",
                  "menu-selection",
                  "menu-submenu",
                  "menubar-more",
                  "scrollbar-button-left",
                  "scrollbar-button-right",
                  "scrollbar-button-up",
                  "scrollbar-button-down",
                  "toolbar-more",
                  "quick-input-back"
                ],
                "markdownEnumDescriptions": [
                  "$(add)",
                  "$(plus)",
                  "$(gist-new)",
                  "$(repo-create)",
                  "$(lightbulb)",
                  "$(light-bulb)",
                  "$(repo)",
                  "$(repo-delete)",
                  "$(gist-fork)",
                  "$(repo-forked)",
                  "$(git-pull-request)",
                  "$(git-pull-request-abandoned)",
                  "$(record-keys)",
                  "$(keyboard)",
                  "$(tag)",
                  "$(tag-add)",
                  "$(tag-remove)",
                  "$(person)",
                  "$(person-follow)",
                  "$(person-outline)",
                  "$(person-filled)",
                  "$(git-branch)",
                  "$(git-branch-create)",
                  "$(git-branch-delete)",
                  "$(source-control)",
                  "$(mirror)",
                  "$(mirror-public)",
                  "$(star)",
                  "$(star-add)",
                  "$(star-delete)",
                  "$(star-empty)",
                  "$(comment)",
                  "$(comment-add)",
                  "$(alert)",
                  "$(warning)",
                  "$(search)",
                  "$(search-save)",
                  "$(log-out)",
                  "$(sign-out)",
                  "$(log-in)",
                  "$(sign-in)",
                  "$(eye)",
                  "$(eye-unwatch)",
                  "$(eye-watch)",
                  "$(circle-filled)",
                  "$(primitive-dot)",
                  "$(close-dirty)",
                  "$(debug-breakpoint)",
                  "$(debug-breakpoint-disabled)",
                  "$(debug-hint)",
                  "$(primitive-square)",
                  "$(edit)",
                  "$(pencil)",
                  "$(info)",
                  "$(issue-opened)",
                  "$(gist-private)",
                  "$(git-fork-private)",
                  "$(lock)",
                  "$(mirror-private)",
                  "$(close)",
                  "$(remove-close)",
                  "$(x)",
                  "$(repo-sync)",
                  "$(sync)",
                  "$(clone)",
                  "$(desktop-download)",
                  "$(beaker)",
                  "$(microscope)",
                  "$(vm)",
                  "$(device-desktop)",
                  "$(file)",
                  "$(file-text)",
                  "$(more)",
                  "$(ellipsis)",
                  "$(kebab-horizontal)",
                  "$(mail-reply)",
                  "$(reply)",
                  "$(organization)",
                  "$(organization-filled)",
                  "$(organization-outline)",
                  "$(new-file)",
                  "$(file-add)",
                  "$(new-folder)",
                  "$(file-directory-create)",
                  "$(trash)",
                  "$(trashcan)",
                  "$(history)",
                  "$(clock)",
                  "$(folder)",
                  "$(file-directory)",
                  "$(symbol-folder)",
                  "$(logo-github)",
                  "$(mark-github)",
                  "$(github)",
                  "$(terminal)",
                  "$(console)",
                  "$(repl)",
                  "$(zap)",
                  "$(symbol-event)",
                  "$(error)",
                  "$(stop)",
                  "$(variable)",
                  "$(symbol-variable)",
                  "$(array)",
                  "$(symbol-array)",
                  "$(symbol-module)",
                  "$(symbol-package)",
                  "$(symbol-namespace)",
                  "$(symbol-object)",
                  "$(symbol-method)",
                  "$(symbol-function)",
                  "$(symbol-constructor)",
                  "$(symbol-boolean)",
                  "$(symbol-null)",
                  "$(symbol-numeric)",
                  "$(symbol-number)",
                  "$(symbol-structure)",
                  "$(symbol-struct)",
                  "$(symbol-parameter)",
                  "$(symbol-type-parameter)",
                  "$(symbol-key)",
                  "$(symbol-text)",
                  "$(symbol-reference)",
                  "$(go-to-file)",
                  "$(symbol-enum)",
                  "$(symbol-value)",
                  "$(symbol-ruler)",
                  "$(symbol-unit)",
                  "$(activate-breakpoints)",
                  "$(archive)",
                  "$(arrow-both)",
                  "$(arrow-down)",
                  "$(arrow-left)",
                  "$(arrow-right)",
                  "$(arrow-small-down)",
                  "$(arrow-small-left)",
                  "$(arrow-small-right)",
                  "$(arrow-small-up)",
                  "$(arrow-up)",
                  "$(bell)",
                  "$(bold)",
                  "$(book)",
                  "$(bookmark)",
                  "$(debug-breakpoint-conditional-unverified)",
                  "$(debug-breakpoint-conditional)",
                  "$(debug-breakpoint-conditional-disabled)",
                  "$(debug-breakpoint-data-unverified)",
                  "$(debug-breakpoint-data)",
                  "$(debug-breakpoint-data-disabled)",
                  "$(debug-breakpoint-log-unverified)",
                  "$(debug-breakpoint-log)",
                  "$(debug-breakpoint-log-disabled)",
                  "$(briefcase)",
                  "$(broadcast)",
                  "$(browser)",
                  "$(bug)",
                  "$(calendar)",
                  "$(case-sensitive)",
                  "$(check)",
                  "$(checklist)",
                  "$(chevron-down)",
                  "$(drop-down-button)",
                  "$(chevron-left)",
                  "$(chevron-right)",
                  "$(chevron-up)",
                  "$(chrome-close)",
                  "$(chrome-maximize)",
                  "$(chrome-minimize)",
                  "$(chrome-restore)",
                  "$(circle)",
                  "$(circle-outline)",
                  "$(debug-breakpoint-unverified)",
                  "$(circle-slash)",
                  "$(circuit-board)",
                  "$(clear-all)",
                  "$(clippy)",
                  "$(close-all)",
                  "$(cloud-download)",
                  "$(cloud-upload)",
                  "$(code)",
                  "$(collapse-all)",
                  "$(color-mode)",
                  "$(comment-discussion)",
                  "$(compare-changes)",
                  "$(credit-card)",
                  "$(dash)",
                  "$(dashboard)",
                  "$(database)",
                  "$(debug-continue)",
                  "$(debug-disconnect)",
                  "$(debug-pause)",
                  "$(debug-restart)",
                  "$(debug-start)",
                  "$(debug-step-into)",
                  "$(debug-step-out)",
                  "$(debug-step-over)",
                  "$(debug-stop)",
                  "$(debug)",
                  "$(device-camera-video)",
                  "$(device-camera)",
                  "$(device-mobile)",
                  "$(diff-added)",
                  "$(diff-ignored)",
                  "$(diff-modified)",
                  "$(diff-removed)",
                  "$(diff-renamed)",
                  "$(diff)",
                  "$(discard)",
                  "$(editor-layout)",
                  "$(empty-window)",
                  "$(exclude)",
                  "$(extensions)",
                  "$(eye-closed)",
                  "$(file-binary)",
                  "$(file-code)",
                  "$(file-media)",
                  "$(file-pdf)",
                  "$(file-submodule)",
                  "$(file-symlink-directory)",
                  "$(file-symlink-file)",
                  "$(file-zip)",
                  "$(files)",
                  "$(filter)",
                  "$(flame)",
                  "$(fold-down)",
                  "$(fold-up)",
                  "$(fold)",
                  "$(folder-active)",
                  "$(folder-opened)",
                  "$(gear)",
                  "$(gift)",
                  "$(gist-secret)",
                  "$(gist)",
                  "$(git-commit)",
                  "$(git-compare)",
                  "$(git-merge)",
                  "$(github-action)",
                  "$(github-alt)",
                  "$(globe)",
                  "$(grabber)",
                  "$(graph)",
                  "$(gripper)",
                  "$(heart)",
                  "$(home)",
                  "$(horizontal-rule)",
                  "$(hubot)",
                  "$(inbox)",
                  "$(issue-closed)",
                  "$(issue-reopened)",
                  "$(issues)",
                  "$(italic)",
                  "$(jersey)",
                  "$(json)",
                  "$(bracket)",
                  "$(kebab-vertical)",
                  "$(key)",
                  "$(law)",
                  "$(lightbulb-autofix)",
                  "$(link-external)",
                  "$(link)",
                  "$(list-ordered)",
                  "$(list-unordered)",
                  "$(live-share)",
                  "$(loading)",
                  "$(location)",
                  "$(mail-read)",
                  "$(mail)",
                  "$(markdown)",
                  "$(megaphone)",
                  "$(mention)",
                  "$(milestone)",
                  "$(mortar-board)",
                  "$(move)",
                  "$(multiple-windows)",
                  "$(mute)",
                  "$(no-newline)",
                  "$(note)",
                  "$(octoface)",
                  "$(open-preview)",
                  "$(package)",
                  "$(paintcan)",
                  "$(pin)",
                  "$(play)",
                  "$(run)",
                  "$(plug)",
                  "$(preserve-case)",
                  "$(preview)",
                  "$(project)",
                  "$(pulse)",
                  "$(question)",
                  "$(quote)",
                  "$(radio-tower)",
                  "$(reactions)",
                  "$(references)",
                  "$(refresh)",
                  "$(regex)",
                  "$(remote-explorer)",
                  "$(remote)",
                  "$(remove)",
                  "$(replace-all)",
                  "$(replace)",
                  "$(repo-clone)",
                  "$(repo-force-push)",
                  "$(repo-pull)",
                  "$(repo-push)",
                  "$(report)",
                  "$(request-changes)",
                  "$(rocket)",
                  "$(root-folder-opened)",
                  "$(root-folder)",
                  "$(rss)",
                  "$(ruby)",
                  "$(save-all)",
                  "$(save-as)",
                  "$(save)",
                  "$(screen-full)",
                  "$(screen-normal)",
                  "$(search-stop)",
                  "$(server)",
                  "$(settings-gear)",
                  "$(settings)",
                  "$(shield)",
                  "$(smiley)",
                  "$(sort-precedence)",
                  "$(split-horizontal)",
                  "$(split-vertical)",
                  "$(squirrel)",
                  "$(star-full)",
                  "$(star-half)",
                  "$(symbol-class)",
                  "$(symbol-color)",
                  "$(symbol-customcolor)",
                  "$(symbol-constant)",
                  "$(symbol-enum-member)",
                  "$(symbol-field)",
                  "$(symbol-file)",
                  "$(symbol-interface)",
                  "$(symbol-keyword)",
                  "$(symbol-misc)",
                  "$(symbol-operator)",
                  "$(symbol-property)",
                  "$(wrench)",
                  "$(wrench-subaction)",
                  "$(symbol-snippet)",
                  "$(tasklist)",
                  "$(telescope)",
                  "$(text-size)",
                  "$(three-bars)",
                  "$(thumbsdown)",
                  "$(thumbsup)",
                  "$(tools)",
                  "$(triangle-down)",
                  "$(triangle-left)",
                  "$(triangle-right)",
                  "$(triangle-up)",
                  "$(twitter)",
                  "$(unfold)",
                  "$(unlock)",
                  "$(unmute)",
                  "$(unverified)",
                  "$(verified)",
                  "$(versions)",
                  "$(vm-active)",
                  "$(vm-outline)",
                  "$(vm-running)",
                  "$(watch)",
                  "$(whitespace)",
                  "$(whole-word)",
                  "$(window)",
                  "$(word-wrap)",
                  "$(zoom-in)",
                  "$(zoom-out)",
                  "$(list-filter)",
                  "$(list-flat)",
                  "$(list-selection)",
                  "$(selection)",
                  "$(list-tree)",
                  "$(debug-breakpoint-function-unverified)",
                  "$(debug-breakpoint-function)",
                  "$(debug-breakpoint-function-disabled)",
                  "$(debug-stackframe-active)",
                  "$(circle-small-filled)",
                  "$(debug-stackframe-dot)",
                  "$(debug-stackframe)",
                  "$(debug-stackframe-focused)",
                  "$(debug-breakpoint-unsupported)",
                  "$(symbol-string)",
                  "$(debug-reverse-continue)",
                  "$(debug-step-back)",
                  "$(debug-restart-frame)",
                  "$(call-incoming)",
                  "$(call-outgoing)",
                  "$(menu)",
                  "$(expand-all)",
                  "$(feedback)",
                  "$(group-by-ref-type)",
                  "$(ungroup-by-ref-type)",
                  "$(account)",
                  "$(bell-dot)",
                  "$(debug-console)",
                  "$(library)",
                  "$(output)",
                  "$(run-all)",
                  "$(sync-ignored)",
                  "$(pinned)",
                  "$(github-inverted)",
                  "$(debug-alt)",
                  "$(server-process)",
                  "$(server-environment)",
                  "$(pass)",
                  "$(stop-circle)",
                  "$(play-circle)",
                  "$(record)",
                  "$(debug-alt-small)",
                  "$(vm-connect)",
                  "$(cloud)",
                  "$(merge)",
                  "$(export)",
                  "$(graph-left)",
                  "$(magnet)",
                  "$(notebook)",
                  "$(redo)",
                  "$(check-all)",
                  "$(pinned-dirty)",
                  "$(pass-filled)",
                  "$(circle-large-filled)",
                  "$(circle-large)",
                  "$(circle-large-outline)",
                  "$(combine)",
                  "$(gather)",
                  "$(table)",
                  "$(variable-group)",
                  "$(type-hierarchy)",
                  "$(type-hierarchy-sub)",
                  "$(type-hierarchy-super)",
                  "$(git-pull-request-create)",
                  "$(run-above)",
                  "$(run-below)",
                  "$(notebook-template)",
                  "$(debug-rerun)",
                  "$(workspace-trusted)",
                  "$(workspace-untrusted)",
                  "$(workspace-unspecified)",
                  "$(terminal-cmd)",
                  "$(terminal-debian)",
                  "$(terminal-linux)",
                  "$(terminal-powershell)",
                  "$(terminal-tmux)",
                  "$(terminal-ubuntu)",
                  "$(terminal-bash)",
                  "$(arrow-swap)",
                  "$(copy)",
                  "$(person-add)",
                  "$(filter-filled)",
                  "$(wand)",
                  "$(debug-line-by-line)",
                  "$(inspect)",
                  "$(layers)",
                  "$(layers-dot)",
                  "$(layers-active)",
                  "$(compass)",
                  "$(compass-dot)",
                  "$(compass-active)",
                  "$(azure)",
                  "$(issue-draft)",
                  "$(git-pull-request-closed)",
                  "$(git-pull-request-draft)",
                  "$(debug-all)",
                  "$(debug-coverage)",
                  "$(run-errors)",
                  "$(folder-library)",
                  "$(debug-continue-small)",
                  "$(beaker-stop)",
                  "$(graph-line)",
                  "$(graph-scatter)",
                  "$(pie-chart)",
                  "$(bracket-dot)",
                  "$(bracket-error)",
                  "$(lock-small)",
                  "$(azure-devops)",
                  "$(verified-filled)",
                  "$(newline)",
                  "$(layout)",
                  "$(layout-activitybar-left)",
                  "$(layout-activitybar-right)",
                  "$(layout-panel-left)",
                  "$(layout-panel-center)",
                  "$(layout-panel-justify)",
                  "$(layout-panel-right)",
                  "$(layout-panel)",
                  "$(layout-sidebar-left)",
                  "$(layout-sidebar-right)",
                  "$(layout-statusbar)",
                  "$(layout-menubar)",
                  "$(layout-centered)",
                  "$(layout-sidebar-right-off)",
                  "$(layout-panel-off)",
                  "$(layout-sidebar-left-off)",
                  "$(target)",
                  "$(indent)",
                  "$(record-small)",
                  "$(error-small)",
                  "$(arrow-circle-down)",
                  "$(arrow-circle-left)",
                  "$(arrow-circle-right)",
                  "$(arrow-circle-up)",
                  "$(heart-filled)",
                  "$(map)",
                  "$(map-filled)",
                  "$(circle-small)",
                  "$(bell-slash)",
                  "$(bell-slash-dot)",
                  "$(comment-unresolved)",
                  "$(git-pull-request-go-to-changes)",
                  "$(git-pull-request-new-changes)",
                  "$(search-fuzzy)",
                  "$(comment-draft)",
                  "$(dialog-error)",
                  "$(dialog-warning)",
                  "$(dialog-info)",
                  "$(dialog-close)",
                  "$(tree-item-expanded)",
                  "$(tree-filter-on-type-on)",
                  "$(tree-filter-on-type-off)",
                  "$(tree-filter-clear)",
                  "$(tree-item-loading)",
                  "$(menu-selection)",
                  "$(menu-submenu)",
                  "$(menubar-more)",
                  "$(scrollbar-button-left)",
                  "$(scrollbar-button-right)",
                  "$(scrollbar-button-up)",
                  "$(scrollbar-button-down)",
                  "$(toolbar-more)",
                  "$(quick-input-back)"
                ]
              },
              "color": {
                "description": "A theme color ID to associate with the terminal icon.",
                "type": [
                  "string",
                  "null"
                ],
                "enum": [
                  "terminal.ansiBlack",
                  "terminal.ansiRed",
                  "terminal.ansiGreen",
                  "terminal.ansiYellow",
                  "terminal.ansiBlue",
                  "terminal.ansiMagenta",
                  "terminal.ansiCyan",
                  "terminal.ansiWhite"
                ],
                "default": null
              },
              "env": {
                "markdownDescription": "An object with environment variables that will be added to the terminal profile process. Set to `null` to delete environment variables from the base environment.",
                "type": "object",
                "additionalProperties": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "default": {}
              }
            }
          }
        ]
      },
      "defaultDefaultValue": {
        "bash": {
          "path": "bash",
          "args": [
            "-l"
          ],
          "icon": "terminal-bash"
        },
        "zsh": {
          "path": "zsh",
          "args": [
            "-l"
          ]
        },
        "fish": {
          "path": "fish",
          "args": [
            "-l"
          ]
        },
        "tmux": {
          "path": "tmux",
          "icon": "terminal-tmux"
        },
        "pwsh": {
          "path": "pwsh",
          "icon": "terminal-powershell"
        }
      },
      "scope": 3
    },
    "terminal.integrated.profiles.linux": {
      "restricted": true,
      "markdownDescription": "The Linux profiles to present when creating a new terminal via the terminal dropdown. Set the `path` property manually with an optional `args`.\n\nSet an existing profile to `null` to hide the profile from the list, for example: `\"bash\": null`.",
      "type": "object",
      "default": {
        "bash": {
          "path": "bash",
          "icon": "terminal-bash"
        },
        "zsh": {
          "path": "zsh"
        },
        "fish": {
          "path": "fish"
        },
        "tmux": {
          "path": "tmux",
          "icon": "terminal-tmux"
        },
        "pwsh": {
          "path": "pwsh",
          "icon": "terminal-powershell"
        }
      },
      "additionalProperties": {
        "anyOf": [
          {
            "type": "object",
            "required": [
              "extensionIdentifier",
              "id",
              "title"
            ],
            "properties": {
              "extensionIdentifier": {
                "description": "The extension that contributed this profile.",
                "type": "string"
              },
              "id": {
                "description": "The id of the extension terminal",
                "type": "string"
              },
              "title": {
                "description": "The name of the extension terminal",
                "type": "string"
              },
              "args": {
                "description": "An optional set of arguments to run the shell executable with.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "overrideName": {
                "description": "Controls whether or not the profile name overrides the auto detected one.",
                "type": "boolean"
              },
              "icon": {
                "description": "A codicon ID to associate with the terminal icon.",
                "type": "string",
                "enum": [
                  "add",
                  "plus",
                  "gist-new",
                  "repo-create",
                  "lightbulb",
                  "light-bulb",
                  "repo",
                  "repo-delete",
                  "gist-fork",
                  "repo-forked",
                  "git-pull-request",
                  "git-pull-request-abandoned",
                  "record-keys",
                  "keyboard",
                  "tag",
                  "tag-add",
                  "tag-remove",
                  "person",
                  "person-follow",
                  "person-outline",
                  "person-filled",
                  "git-branch",
                  "git-branch-create",
                  "git-branch-delete",
                  "source-control",
                  "mirror",
                  "mirror-public",
                  "star",
                  "star-add",
                  "star-delete",
                  "star-empty",
                  "comment",
                  "comment-add",
                  "alert",
                  "warning",
                  "search",
                  "search-save",
                  "log-out",
                  "sign-out",
                  "log-in",
                  "sign-in",
                  "eye",
                  "eye-unwatch",
                  "eye-watch",
                  "circle-filled",
                  "primitive-dot",
                  "close-dirty",
                  "debug-breakpoint",
                  "debug-breakpoint-disabled",
                  "debug-hint",
                  "primitive-square",
                  "edit",
                  "pencil",
                  "info",
                  "issue-opened",
                  "gist-private",
                  "git-fork-private",
                  "lock",
                  "mirror-private",
                  "close",
                  "remove-close",
                  "x",
                  "repo-sync",
                  "sync",
                  "clone",
                  "desktop-download",
                  "beaker",
                  "microscope",
                  "vm",
                  "device-desktop",
                  "file",
                  "file-text",
                  "more",
                  "ellipsis",
                  "kebab-horizontal",
                  "mail-reply",
                  "reply",
                  "organization",
                  "organization-filled",
                  "organization-outline",
                  "new-file",
                  "file-add",
                  "new-folder",
                  "file-directory-create",
                  "trash",
                  "trashcan",
                  "history",
                  "clock",
                  "folder",
                  "file-directory",
                  "symbol-folder",
                  "logo-github",
                  "mark-github",
                  "github",
                  "terminal",
                  "console",
                  "repl",
                  "zap",
                  "symbol-event",
                  "error",
                  "stop",
                  "variable",
                  "symbol-variable",
                  "array",
                  "symbol-array",
                  "symbol-module",
                  "symbol-package",
                  "symbol-namespace",
                  "symbol-object",
                  "symbol-method",
                  "symbol-function",
                  "symbol-constructor",
                  "symbol-boolean",
                  "symbol-null",
                  "symbol-numeric",
                  "symbol-number",
                  "symbol-structure",
                  "symbol-struct",
                  "symbol-parameter",
                  "symbol-type-parameter",
                  "symbol-key",
                  "symbol-text",
                  "symbol-reference",
                  "go-to-file",
                  "symbol-enum",
                  "symbol-value",
                  "symbol-ruler",
                  "symbol-unit",
                  "activate-breakpoints",
                  "archive",
                  "arrow-both",
                  "arrow-down",
                  "arrow-left",
                  "arrow-right",
                  "arrow-small-down",
                  "arrow-small-left",
                  "arrow-small-right",
                  "arrow-small-up",
                  "arrow-up",
                  "bell",
                  "bold",
                  "book",
                  "bookmark",
                  "debug-breakpoint-conditional-unverified",
                  "debug-breakpoint-conditional",
                  "debug-breakpoint-conditional-disabled",
                  "debug-breakpoint-data-unverified",
                  "debug-breakpoint-data",
                  "debug-breakpoint-data-disabled",
                  "debug-breakpoint-log-unverified",
                  "debug-breakpoint-log",
                  "debug-breakpoint-log-disabled",
                  "briefcase",
                  "broadcast",
                  "browser",
                  "bug",
                  "calendar",
                  "case-sensitive",
                  "check",
                  "checklist",
                  "chevron-down",
                  "drop-down-button",
                  "chevron-left",
                  "chevron-right",
                  "chevron-up",
                  "chrome-close",
                  "chrome-maximize",
                  "chrome-minimize",
                  "chrome-restore",
                  "circle",
                  "circle-outline",
                  "debug-breakpoint-unverified",
                  "circle-slash",
                  "circuit-board",
                  "clear-all",
                  "clippy",
                  "close-all",
                  "cloud-download",
                  "cloud-upload",
                  "code",
                  "collapse-all",
                  "color-mode",
                  "comment-discussion",
                  "compare-changes",
                  "credit-card",
                  "dash",
                  "dashboard",
                  "database",
                  "debug-continue",
                  "debug-disconnect",
                  "debug-pause",
                  "debug-restart",
                  "debug-start",
                  "debug-step-into",
                  "debug-step-out",
                  "debug-step-over",
                  "debug-stop",
                  "debug",
                  "device-camera-video",
                  "device-camera",
                  "device-mobile",
                  "diff-added",
                  "diff-ignored",
                  "diff-modified",
                  "diff-removed",
                  "diff-renamed",
                  "diff",
                  "discard",
                  "editor-layout",
                  "empty-window",
                  "exclude",
                  "extensions",
                  "eye-closed",
                  "file-binary",
                  "file-code",
                  "file-media",
                  "file-pdf",
                  "file-submodule",
                  "file-symlink-directory",
                  "file-symlink-file",
                  "file-zip",
                  "files",
                  "filter",
                  "flame",
                  "fold-down",
                  "fold-up",
                  "fold",
                  "folder-active",
                  "folder-opened",
                  "gear",
                  "gift",
                  "gist-secret",
                  "gist",
                  "git-commit",
                  "git-compare",
                  "git-merge",
                  "github-action",
                  "github-alt",
                  "globe",
                  "grabber",
                  "graph",
                  "gripper",
                  "heart",
                  "home",
                  "horizontal-rule",
                  "hubot",
                  "inbox",
                  "issue-closed",
                  "issue-reopened",
                  "issues",
                  "italic",
                  "jersey",
                  "json",
                  "bracket",
                  "kebab-vertical",
                  "key",
                  "law",
                  "lightbulb-autofix",
                  "link-external",
                  "link",
                  "list-ordered",
                  "list-unordered",
                  "live-share",
                  "loading",
                  "location",
                  "mail-read",
                  "mail",
                  "markdown",
                  "megaphone",
                  "mention",
                  "milestone",
                  "mortar-board",
                  "move",
                  "multiple-windows",
                  "mute",
                  "no-newline",
                  "note",
                  "octoface",
                  "open-preview",
                  "package",
                  "paintcan",
                  "pin",
                  "play",
                  "run",
                  "plug",
                  "preserve-case",
                  "preview",
                  "project",
                  "pulse",
                  "question",
                  "quote",
                  "radio-tower",
                  "reactions",
                  "references",
                  "refresh",
                  "regex",
                  "remote-explorer",
                  "remote",
                  "remove",
                  "replace-all",
                  "replace",
                  "repo-clone",
                  "repo-force-push",
                  "repo-pull",
                  "repo-push",
                  "report",
                  "request-changes",
                  "rocket",
                  "root-folder-opened",
                  "root-folder",
                  "rss",
                  "ruby",
                  "save-all",
                  "save-as",
                  "save",
                  "screen-full",
                  "screen-normal",
                  "search-stop",
                  "server",
                  "settings-gear",
                  "settings",
                  "shield",
                  "smiley",
                  "sort-precedence",
                  "split-horizontal",
                  "split-vertical",
                  "squirrel",
                  "star-full",
                  "star-half",
                  "symbol-class",
                  "symbol-color",
                  "symbol-customcolor",
                  "symbol-constant",
                  "symbol-enum-member",
                  "symbol-field",
                  "symbol-file",
                  "symbol-interface",
                  "symbol-keyword",
                  "symbol-misc",
                  "symbol-operator",
                  "symbol-property",
                  "wrench",
                  "wrench-subaction",
                  "symbol-snippet",
                  "tasklist",
                  "telescope",
                  "text-size",
                  "three-bars",
                  "thumbsdown",
                  "thumbsup",
                  "tools",
                  "triangle-down",
                  "triangle-left",
                  "triangle-right",
                  "triangle-up",
                  "twitter",
                  "unfold",
                  "unlock",
                  "unmute",
                  "unverified",
                  "verified",
                  "versions",
                  "vm-active",
                  "vm-outline",
                  "vm-running",
                  "watch",
                  "whitespace",
                  "whole-word",
                  "window",
                  "word-wrap",
                  "zoom-in",
                  "zoom-out",
                  "list-filter",
                  "list-flat",
                  "list-selection",
                  "selection",
                  "list-tree",
                  "debug-breakpoint-function-unverified",
                  "debug-breakpoint-function",
                  "debug-breakpoint-function-disabled",
                  "debug-stackframe-active",
                  "circle-small-filled",
                  "debug-stackframe-dot",
                  "debug-stackframe",
                  "debug-stackframe-focused",
                  "debug-breakpoint-unsupported",
                  "symbol-string",
                  "debug-reverse-continue",
                  "debug-step-back",
                  "debug-restart-frame",
                  "call-incoming",
                  "call-outgoing",
                  "menu",
                  "expand-all",
                  "feedback",
                  "group-by-ref-type",
                  "ungroup-by-ref-type",
                  "account",
                  "bell-dot",
                  "debug-console",
                  "library",
                  "output",
                  "run-all",
                  "sync-ignored",
                  "pinned",
                  "github-inverted",
                  "debug-alt",
                  "server-process",
                  "server-environment",
                  "pass",
                  "stop-circle",
                  "play-circle",
                  "record",
                  "debug-alt-small",
                  "vm-connect",
                  "cloud",
                  "merge",
                  "export",
                  "graph-left",
                  "magnet",
                  "notebook",
                  "redo",
                  "check-all",
                  "pinned-dirty",
                  "pass-filled",
                  "circle-large-filled",
                  "circle-large",
                  "circle-large-outline",
                  "combine",
                  "gather",
                  "table",
                  "variable-group",
                  "type-hierarchy",
                  "type-hierarchy-sub",
                  "type-hierarchy-super",
                  "git-pull-request-create",
                  "run-above",
                  "run-below",
                  "notebook-template",
                  "debug-rerun",
                  "workspace-trusted",
                  "workspace-untrusted",
                  "workspace-unspecified",
                  "terminal-cmd",
                  "terminal-debian",
                  "terminal-linux",
                  "terminal-powershell",
                  "terminal-tmux",
                  "terminal-ubuntu",
                  "terminal-bash",
                  "arrow-swap",
                  "copy",
                  "person-add",
                  "filter-filled",
                  "wand",
                  "debug-line-by-line",
                  "inspect",
                  "layers",
                  "layers-dot",
                  "layers-active",
                  "compass",
                  "compass-dot",
                  "compass-active",
                  "azure",
                  "issue-draft",
                  "git-pull-request-closed",
                  "git-pull-request-draft",
                  "debug-all",
                  "debug-coverage",
                  "run-errors",
                  "folder-library",
                  "debug-continue-small",
                  "beaker-stop",
                  "graph-line",
                  "graph-scatter",
                  "pie-chart",
                  "bracket-dot",
                  "bracket-error",
                  "lock-small",
                  "azure-devops",
                  "verified-filled",
                  "newline",
                  "layout",
                  "layout-activitybar-left",
                  "layout-activitybar-right",
                  "layout-panel-left",
                  "layout-panel-center",
                  "layout-panel-justify",
                  "layout-panel-right",
                  "layout-panel",
                  "layout-sidebar-left",
                  "layout-sidebar-right",
                  "layout-statusbar",
                  "layout-menubar",
                  "layout-centered",
                  "layout-sidebar-right-off",
                  "layout-panel-off",
                  "layout-sidebar-left-off",
                  "target",
                  "indent",
                  "record-small",
                  "error-small",
                  "arrow-circle-down",
                  "arrow-circle-left",
                  "arrow-circle-right",
                  "arrow-circle-up",
                  "heart-filled",
                  "map",
                  "map-filled",
                  "circle-small",
                  "bell-slash",
                  "bell-slash-dot",
                  "comment-unresolved",
                  "git-pull-request-go-to-changes",
                  "git-pull-request-new-changes",
                  "search-fuzzy",
                  "comment-draft",
                  "dialog-error",
                  "dialog-warning",
                  "dialog-info",
                  "dialog-close",
                  "tree-item-expanded",
                  "tree-filter-on-type-on",
                  "tree-filter-on-type-off",
                  "tree-filter-clear",
                  "tree-item-loading",
                  "menu-selection",
                  "menu-submenu",
                  "menubar-more",
                  "scrollbar-button-left",
                  "scrollbar-button-right",
                  "scrollbar-button-up",
                  "scrollbar-button-down",
                  "toolbar-more",
                  "quick-input-back"
                ],
                "markdownEnumDescriptions": [
                  "$(add)",
                  "$(plus)",
                  "$(gist-new)",
                  "$(repo-create)",
                  "$(lightbulb)",
                  "$(light-bulb)",
                  "$(repo)",
                  "$(repo-delete)",
                  "$(gist-fork)",
                  "$(repo-forked)",
                  "$(git-pull-request)",
                  "$(git-pull-request-abandoned)",
                  "$(record-keys)",
                  "$(keyboard)",
                  "$(tag)",
                  "$(tag-add)",
                  "$(tag-remove)",
                  "$(person)",
                  "$(person-follow)",
                  "$(person-outline)",
                  "$(person-filled)",
                  "$(git-branch)",
                  "$(git-branch-create)",
                  "$(git-branch-delete)",
                  "$(source-control)",
                  "$(mirror)",
                  "$(mirror-public)",
                  "$(star)",
                  "$(star-add)",
                  "$(star-delete)",
                  "$(star-empty)",
                  "$(comment)",
                  "$(comment-add)",
                  "$(alert)",
                  "$(warning)",
                  "$(search)",
                  "$(search-save)",
                  "$(log-out)",
                  "$(sign-out)",
                  "$(log-in)",
                  "$(sign-in)",
                  "$(eye)",
                  "$(eye-unwatch)",
                  "$(eye-watch)",
                  "$(circle-filled)",
                  "$(primitive-dot)",
                  "$(close-dirty)",
                  "$(debug-breakpoint)",
                  "$(debug-breakpoint-disabled)",
                  "$(debug-hint)",
                  "$(primitive-square)",
                  "$(edit)",
                  "$(pencil)",
                  "$(info)",
                  "$(issue-opened)",
                  "$(gist-private)",
                  "$(git-fork-private)",
                  "$(lock)",
                  "$(mirror-private)",
                  "$(close)",
                  "$(remove-close)",
                  "$(x)",
                  "$(repo-sync)",
                  "$(sync)",
                  "$(clone)",
                  "$(desktop-download)",
                  "$(beaker)",
                  "$(microscope)",
                  "$(vm)",
                  "$(device-desktop)",
                  "$(file)",
                  "$(file-text)",
                  "$(more)",
                  "$(ellipsis)",
                  "$(kebab-horizontal)",
                  "$(mail-reply)",
                  "$(reply)",
                  "$(organization)",
                  "$(organization-filled)",
                  "$(organization-outline)",
                  "$(new-file)",
                  "$(file-add)",
                  "$(new-folder)",
                  "$(file-directory-create)",
                  "$(trash)",
                  "$(trashcan)",
                  "$(history)",
                  "$(clock)",
                  "$(folder)",
                  "$(file-directory)",
                  "$(symbol-folder)",
                  "$(logo-github)",
                  "$(mark-github)",
                  "$(github)",
                  "$(terminal)",
                  "$(console)",
                  "$(repl)",
                  "$(zap)",
                  "$(symbol-event)",
                  "$(error)",
                  "$(stop)",
                  "$(variable)",
                  "$(symbol-variable)",
                  "$(array)",
                  "$(symbol-array)",
                  "$(symbol-module)",
                  "$(symbol-package)",
                  "$(symbol-namespace)",
                  "$(symbol-object)",
                  "$(symbol-method)",
                  "$(symbol-function)",
                  "$(symbol-constructor)",
                  "$(symbol-boolean)",
                  "$(symbol-null)",
                  "$(symbol-numeric)",
                  "$(symbol-number)",
                  "$(symbol-structure)",
                  "$(symbol-struct)",
                  "$(symbol-parameter)",
                  "$(symbol-type-parameter)",
                  "$(symbol-key)",
                  "$(symbol-text)",
                  "$(symbol-reference)",
                  "$(go-to-file)",
                  "$(symbol-enum)",
                  "$(symbol-value)",
                  "$(symbol-ruler)",
                  "$(symbol-unit)",
                  "$(activate-breakpoints)",
                  "$(archive)",
                  "$(arrow-both)",
                  "$(arrow-down)",
                  "$(arrow-left)",
                  "$(arrow-right)",
                  "$(arrow-small-down)",
                  "$(arrow-small-left)",
                  "$(arrow-small-right)",
                  "$(arrow-small-up)",
                  "$(arrow-up)",
                  "$(bell)",
                  "$(bold)",
                  "$(book)",
                  "$(bookmark)",
                  "$(debug-breakpoint-conditional-unverified)",
                  "$(debug-breakpoint-conditional)",
                  "$(debug-breakpoint-conditional-disabled)",
                  "$(debug-breakpoint-data-unverified)",
                  "$(debug-breakpoint-data)",
                  "$(debug-breakpoint-data-disabled)",
                  "$(debug-breakpoint-log-unverified)",
                  "$(debug-breakpoint-log)",
                  "$(debug-breakpoint-log-disabled)",
                  "$(briefcase)",
                  "$(broadcast)",
                  "$(browser)",
                  "$(bug)",
                  "$(calendar)",
                  "$(case-sensitive)",
                  "$(check)",
                  "$(checklist)",
                  "$(chevron-down)",
                  "$(drop-down-button)",
                  "$(chevron-left)",
                  "$(chevron-right)",
                  "$(chevron-up)",
                  "$(chrome-close)",
                  "$(chrome-maximize)",
                  "$(chrome-minimize)",
                  "$(chrome-restore)",
                  "$(circle)",
                  "$(circle-outline)",
                  "$(debug-breakpoint-unverified)",
                  "$(circle-slash)",
                  "$(circuit-board)",
                  "$(clear-all)",
                  "$(clippy)",
                  "$(close-all)",
                  "$(cloud-download)",
                  "$(cloud-upload)",
                  "$(code)",
                  "$(collapse-all)",
                  "$(color-mode)",
                  "$(comment-discussion)",
                  "$(compare-changes)",
                  "$(credit-card)",
                  "$(dash)",
                  "$(dashboard)",
                  "$(database)",
                  "$(debug-continue)",
                  "$(debug-disconnect)",
                  "$(debug-pause)",
                  "$(debug-restart)",
                  "$(debug-start)",
                  "$(debug-step-into)",
                  "$(debug-step-out)",
                  "$(debug-step-over)",
                  "$(debug-stop)",
                  "$(debug)",
                  "$(device-camera-video)",
                  "$(device-camera)",
                  "$(device-mobile)",
                  "$(diff-added)",
                  "$(diff-ignored)",
                  "$(diff-modified)",
                  "$(diff-removed)",
                  "$(diff-renamed)",
                  "$(diff)",
                  "$(discard)",
                  "$(editor-layout)",
                  "$(empty-window)",
                  "$(exclude)",
                  "$(extensions)",
                  "$(eye-closed)",
                  "$(file-binary)",
                  "$(file-code)",
                  "$(file-media)",
                  "$(file-pdf)",
                  "$(file-submodule)",
                  "$(file-symlink-directory)",
                  "$(file-symlink-file)",
                  "$(file-zip)",
                  "$(files)",
                  "$(filter)",
                  "$(flame)",
                  "$(fold-down)",
                  "$(fold-up)",
                  "$(fold)",
                  "$(folder-active)",
                  "$(folder-opened)",
                  "$(gear)",
                  "$(gift)",
                  "$(gist-secret)",
                  "$(gist)",
                  "$(git-commit)",
                  "$(git-compare)",
                  "$(git-merge)",
                  "$(github-action)",
                  "$(github-alt)",
                  "$(globe)",
                  "$(grabber)",
                  "$(graph)",
                  "$(gripper)",
                  "$(heart)",
                  "$(home)",
                  "$(horizontal-rule)",
                  "$(hubot)",
                  "$(inbox)",
                  "$(issue-closed)",
                  "$(issue-reopened)",
                  "$(issues)",
                  "$(italic)",
                  "$(jersey)",
                  "$(json)",
                  "$(bracket)",
                  "$(kebab-vertical)",
                  "$(key)",
                  "$(law)",
                  "$(lightbulb-autofix)",
                  "$(link-external)",
                  "$(link)",
                  "$(list-ordered)",
                  "$(list-unordered)",
                  "$(live-share)",
                  "$(loading)",
                  "$(location)",
                  "$(mail-read)",
                  "$(mail)",
                  "$(markdown)",
                  "$(megaphone)",
                  "$(mention)",
                  "$(milestone)",
                  "$(mortar-board)",
                  "$(move)",
                  "$(multiple-windows)",
                  "$(mute)",
                  "$(no-newline)",
                  "$(note)",
                  "$(octoface)",
                  "$(open-preview)",
                  "$(package)",
                  "$(paintcan)",
                  "$(pin)",
                  "$(play)",
                  "$(run)",
                  "$(plug)",
                  "$(preserve-case)",
                  "$(preview)",
                  "$(project)",
                  "$(pulse)",
                  "$(question)",
                  "$(quote)",
                  "$(radio-tower)",
                  "$(reactions)",
                  "$(references)",
                  "$(refresh)",
                  "$(regex)",
                  "$(remote-explorer)",
                  "$(remote)",
                  "$(remove)",
                  "$(replace-all)",
                  "$(replace)",
                  "$(repo-clone)",
                  "$(repo-force-push)",
                  "$(repo-pull)",
                  "$(repo-push)",
                  "$(report)",
                  "$(request-changes)",
                  "$(rocket)",
                  "$(root-folder-opened)",
                  "$(root-folder)",
                  "$(rss)",
                  "$(ruby)",
                  "$(save-all)",
                  "$(save-as)",
                  "$(save)",
                  "$(screen-full)",
                  "$(screen-normal)",
                  "$(search-stop)",
                  "$(server)",
                  "$(settings-gear)",
                  "$(settings)",
                  "$(shield)",
                  "$(smiley)",
                  "$(sort-precedence)",
                  "$(split-horizontal)",
                  "$(split-vertical)",
                  "$(squirrel)",
                  "$(star-full)",
                  "$(star-half)",
                  "$(symbol-class)",
                  "$(symbol-color)",
                  "$(symbol-customcolor)",
                  "$(symbol-constant)",
                  "$(symbol-enum-member)",
                  "$(symbol-field)",
                  "$(symbol-file)",
                  "$(symbol-interface)",
                  "$(symbol-keyword)",
                  "$(symbol-misc)",
                  "$(symbol-operator)",
                  "$(symbol-property)",
                  "$(wrench)",
                  "$(wrench-subaction)",
                  "$(symbol-snippet)",
                  "$(tasklist)",
                  "$(telescope)",
                  "$(text-size)",
                  "$(three-bars)",
                  "$(thumbsdown)",
                  "$(thumbsup)",
                  "$(tools)",
                  "$(triangle-down)",
                  "$(triangle-left)",
                  "$(triangle-right)",
                  "$(triangle-up)",
                  "$(twitter)",
                  "$(unfold)",
                  "$(unlock)",
                  "$(unmute)",
                  "$(unverified)",
                  "$(verified)",
                  "$(versions)",
                  "$(vm-active)",
                  "$(vm-outline)",
                  "$(vm-running)",
                  "$(watch)",
                  "$(whitespace)",
                  "$(whole-word)",
                  "$(window)",
                  "$(word-wrap)",
                  "$(zoom-in)",
                  "$(zoom-out)",
                  "$(list-filter)",
                  "$(list-flat)",
                  "$(list-selection)",
                  "$(selection)",
                  "$(list-tree)",
                  "$(debug-breakpoint-function-unverified)",
                  "$(debug-breakpoint-function)",
                  "$(debug-breakpoint-function-disabled)",
                  "$(debug-stackframe-active)",
                  "$(circle-small-filled)",
                  "$(debug-stackframe-dot)",
                  "$(debug-stackframe)",
                  "$(debug-stackframe-focused)",
                  "$(debug-breakpoint-unsupported)",
                  "$(symbol-string)",
                  "$(debug-reverse-continue)",
                  "$(debug-step-back)",
                  "$(debug-restart-frame)",
                  "$(call-incoming)",
                  "$(call-outgoing)",
                  "$(menu)",
                  "$(expand-all)",
                  "$(feedback)",
                  "$(group-by-ref-type)",
                  "$(ungroup-by-ref-type)",
                  "$(account)",
                  "$(bell-dot)",
                  "$(debug-console)",
                  "$(library)",
                  "$(output)",
                  "$(run-all)",
                  "$(sync-ignored)",
                  "$(pinned)",
                  "$(github-inverted)",
                  "$(debug-alt)",
                  "$(server-process)",
                  "$(server-environment)",
                  "$(pass)",
                  "$(stop-circle)",
                  "$(play-circle)",
                  "$(record)",
                  "$(debug-alt-small)",
                  "$(vm-connect)",
                  "$(cloud)",
                  "$(merge)",
                  "$(export)",
                  "$(graph-left)",
                  "$(magnet)",
                  "$(notebook)",
                  "$(redo)",
                  "$(check-all)",
                  "$(pinned-dirty)",
                  "$(pass-filled)",
                  "$(circle-large-filled)",
                  "$(circle-large)",
                  "$(circle-large-outline)",
                  "$(combine)",
                  "$(gather)",
                  "$(table)",
                  "$(variable-group)",
                  "$(type-hierarchy)",
                  "$(type-hierarchy-sub)",
                  "$(type-hierarchy-super)",
                  "$(git-pull-request-create)",
                  "$(run-above)",
                  "$(run-below)",
                  "$(notebook-template)",
                  "$(debug-rerun)",
                  "$(workspace-trusted)",
                  "$(workspace-untrusted)",
                  "$(workspace-unspecified)",
                  "$(terminal-cmd)",
                  "$(terminal-debian)",
                  "$(terminal-linux)",
                  "$(terminal-powershell)",
                  "$(terminal-tmux)",
                  "$(terminal-ubuntu)",
                  "$(terminal-bash)",
                  "$(arrow-swap)",
                  "$(copy)",
                  "$(person-add)",
                  "$(filter-filled)",
                  "$(wand)",
                  "$(debug-line-by-line)",
                  "$(inspect)",
                  "$(layers)",
                  "$(layers-dot)",
                  "$(layers-active)",
                  "$(compass)",
                  "$(compass-dot)",
                  "$(compass-active)",
                  "$(azure)",
                  "$(issue-draft)",
                  "$(git-pull-request-closed)",
                  "$(git-pull-request-draft)",
                  "$(debug-all)",
                  "$(debug-coverage)",
                  "$(run-errors)",
                  "$(folder-library)",
                  "$(debug-continue-small)",
                  "$(beaker-stop)",
                  "$(graph-line)",
                  "$(graph-scatter)",
                  "$(pie-chart)",
                  "$(bracket-dot)",
                  "$(bracket-error)",
                  "$(lock-small)",
                  "$(azure-devops)",
                  "$(verified-filled)",
                  "$(newline)",
                  "$(layout)",
                  "$(layout-activitybar-left)",
                  "$(layout-activitybar-right)",
                  "$(layout-panel-left)",
                  "$(layout-panel-center)",
                  "$(layout-panel-justify)",
                  "$(layout-panel-right)",
                  "$(layout-panel)",
                  "$(layout-sidebar-left)",
                  "$(layout-sidebar-right)",
                  "$(layout-statusbar)",
                  "$(layout-menubar)",
                  "$(layout-centered)",
                  "$(layout-sidebar-right-off)",
                  "$(layout-panel-off)",
                  "$(layout-sidebar-left-off)",
                  "$(target)",
                  "$(indent)",
                  "$(record-small)",
                  "$(error-small)",
                  "$(arrow-circle-down)",
                  "$(arrow-circle-left)",
                  "$(arrow-circle-right)",
                  "$(arrow-circle-up)",
                  "$(heart-filled)",
                  "$(map)",
                  "$(map-filled)",
                  "$(circle-small)",
                  "$(bell-slash)",
                  "$(bell-slash-dot)",
                  "$(comment-unresolved)",
                  "$(git-pull-request-go-to-changes)",
                  "$(git-pull-request-new-changes)",
                  "$(search-fuzzy)",
                  "$(comment-draft)",
                  "$(dialog-error)",
                  "$(dialog-warning)",
                  "$(dialog-info)",
                  "$(dialog-close)",
                  "$(tree-item-expanded)",
                  "$(tree-filter-on-type-on)",
                  "$(tree-filter-on-type-off)",
                  "$(tree-filter-clear)",
                  "$(tree-item-loading)",
                  "$(menu-selection)",
                  "$(menu-submenu)",
                  "$(menubar-more)",
                  "$(scrollbar-button-left)",
                  "$(scrollbar-button-right)",
                  "$(scrollbar-button-up)",
                  "$(scrollbar-button-down)",
                  "$(toolbar-more)",
                  "$(quick-input-back)"
                ]
              },
              "color": {
                "description": "A theme color ID to associate with the terminal icon.",
                "type": [
                  "string",
                  "null"
                ],
                "enum": [
                  "terminal.ansiBlack",
                  "terminal.ansiRed",
                  "terminal.ansiGreen",
                  "terminal.ansiYellow",
                  "terminal.ansiBlue",
                  "terminal.ansiMagenta",
                  "terminal.ansiCyan",
                  "terminal.ansiWhite"
                ],
                "default": null
              },
              "env": {
                "markdownDescription": "An object with environment variables that will be added to the terminal profile process. Set to `null` to delete environment variables from the base environment.",
                "type": "object",
                "additionalProperties": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "default": {}
              }
            }
          },
          {
            "type": "null"
          },
          {
            "type": "object",
            "required": [
              "path"
            ],
            "properties": {
              "path": {
                "description": "A single path to a shell executable or an array of paths that will be used as fallbacks when one fails.",
                "type": [
                  "string",
                  "array"
                ],
                "items": {
                  "type": "string"
                }
              },
              "args": {
                "description": "An optional set of arguments to run the shell executable with.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "overrideName": {
                "description": "Controls whether or not the profile name overrides the auto detected one.",
                "type": "boolean"
              },
              "icon": {
                "description": "A codicon ID to associate with the terminal icon.",
                "type": "string",
                "enum": [
                  "add",
                  "plus",
                  "gist-new",
                  "repo-create",
                  "lightbulb",
                  "light-bulb",
                  "repo",
                  "repo-delete",
                  "gist-fork",
                  "repo-forked",
                  "git-pull-request",
                  "git-pull-request-abandoned",
                  "record-keys",
                  "keyboard",
                  "tag",
                  "tag-add",
                  "tag-remove",
                  "person",
                  "person-follow",
                  "person-outline",
                  "person-filled",
                  "git-branch",
                  "git-branch-create",
                  "git-branch-delete",
                  "source-control",
                  "mirror",
                  "mirror-public",
                  "star",
                  "star-add",
                  "star-delete",
                  "star-empty",
                  "comment",
                  "comment-add",
                  "alert",
                  "warning",
                  "search",
                  "search-save",
                  "log-out",
                  "sign-out",
                  "log-in",
                  "sign-in",
                  "eye",
                  "eye-unwatch",
                  "eye-watch",
                  "circle-filled",
                  "primitive-dot",
                  "close-dirty",
                  "debug-breakpoint",
                  "debug-breakpoint-disabled",
                  "debug-hint",
                  "primitive-square",
                  "edit",
                  "pencil",
                  "info",
                  "issue-opened",
                  "gist-private",
                  "git-fork-private",
                  "lock",
                  "mirror-private",
                  "close",
                  "remove-close",
                  "x",
                  "repo-sync",
                  "sync",
                  "clone",
                  "desktop-download",
                  "beaker",
                  "microscope",
                  "vm",
                  "device-desktop",
                  "file",
                  "file-text",
                  "more",
                  "ellipsis",
                  "kebab-horizontal",
                  "mail-reply",
                  "reply",
                  "organization",
                  "organization-filled",
                  "organization-outline",
                  "new-file",
                  "file-add",
                  "new-folder",
                  "file-directory-create",
                  "trash",
                  "trashcan",
                  "history",
                  "clock",
                  "folder",
                  "file-directory",
                  "symbol-folder",
                  "logo-github",
                  "mark-github",
                  "github",
                  "terminal",
                  "console",
                  "repl",
                  "zap",
                  "symbol-event",
                  "error",
                  "stop",
                  "variable",
                  "symbol-variable",
                  "array",
                  "symbol-array",
                  "symbol-module",
                  "symbol-package",
                  "symbol-namespace",
                  "symbol-object",
                  "symbol-method",
                  "symbol-function",
                  "symbol-constructor",
                  "symbol-boolean",
                  "symbol-null",
                  "symbol-numeric",
                  "symbol-number",
                  "symbol-structure",
                  "symbol-struct",
                  "symbol-parameter",
                  "symbol-type-parameter",
                  "symbol-key",
                  "symbol-text",
                  "symbol-reference",
                  "go-to-file",
                  "symbol-enum",
                  "symbol-value",
                  "symbol-ruler",
                  "symbol-unit",
                  "activate-breakpoints",
                  "archive",
                  "arrow-both",
                  "arrow-down",
                  "arrow-left",
                  "arrow-right",
                  "arrow-small-down",
                  "arrow-small-left",
                  "arrow-small-right",
                  "arrow-small-up",
                  "arrow-up",
                  "bell",
                  "bold",
                  "book",
                  "bookmark",
                  "debug-breakpoint-conditional-unverified",
                  "debug-breakpoint-conditional",
                  "debug-breakpoint-conditional-disabled",
                  "debug-breakpoint-data-unverified",
                  "debug-breakpoint-data",
                  "debug-breakpoint-data-disabled",
                  "debug-breakpoint-log-unverified",
                  "debug-breakpoint-log",
                  "debug-breakpoint-log-disabled",
                  "briefcase",
                  "broadcast",
                  "browser",
                  "bug",
                  "calendar",
                  "case-sensitive",
                  "check",
                  "checklist",
                  "chevron-down",
                  "drop-down-button",
                  "chevron-left",
                  "chevron-right",
                  "chevron-up",
                  "chrome-close",
                  "chrome-maximize",
                  "chrome-minimize",
                  "chrome-restore",
                  "circle",
                  "circle-outline",
                  "debug-breakpoint-unverified",
                  "circle-slash",
                  "circuit-board",
                  "clear-all",
                  "clippy",
                  "close-all",
                  "cloud-download",
                  "cloud-upload",
                  "code",
                  "collapse-all",
                  "color-mode",
                  "comment-discussion",
                  "compare-changes",
                  "credit-card",
                  "dash",
                  "dashboard",
                  "database",
                  "debug-continue",
                  "debug-disconnect",
                  "debug-pause",
                  "debug-restart",
                  "debug-start",
                  "debug-step-into",
                  "debug-step-out",
                  "debug-step-over",
                  "debug-stop",
                  "debug",
                  "device-camera-video",
                  "device-camera",
                  "device-mobile",
                  "diff-added",
                  "diff-ignored",
                  "diff-modified",
                  "diff-removed",
                  "diff-renamed",
                  "diff",
                  "discard",
                  "editor-layout",
                  "empty-window",
                  "exclude",
                  "extensions",
                  "eye-closed",
                  "file-binary",
                  "file-code",
                  "file-media",
                  "file-pdf",
                  "file-submodule",
                  "file-symlink-directory",
                  "file-symlink-file",
                  "file-zip",
                  "files",
                  "filter",
                  "flame",
                  "fold-down",
                  "fold-up",
                  "fold",
                  "folder-active",
                  "folder-opened",
                  "gear",
                  "gift",
                  "gist-secret",
                  "gist",
                  "git-commit",
                  "git-compare",
                  "git-merge",
                  "github-action",
                  "github-alt",
                  "globe",
                  "grabber",
                  "graph",
                  "gripper",
                  "heart",
                  "home",
                  "horizontal-rule",
                  "hubot",
                  "inbox",
                  "issue-closed",
                  "issue-reopened",
                  "issues",
                  "italic",
                  "jersey",
                  "json",
                  "bracket",
                  "kebab-vertical",
                  "key",
                  "law",
                  "lightbulb-autofix",
                  "link-external",
                  "link",
                  "list-ordered",
                  "list-unordered",
                  "live-share",
                  "loading",
                  "location",
                  "mail-read",
                  "mail",
                  "markdown",
                  "megaphone",
                  "mention",
                  "milestone",
                  "mortar-board",
                  "move",
                  "multiple-windows",
                  "mute",
                  "no-newline",
                  "note",
                  "octoface",
                  "open-preview",
                  "package",
                  "paintcan",
                  "pin",
                  "play",
                  "run",
                  "plug",
                  "preserve-case",
                  "preview",
                  "project",
                  "pulse",
                  "question",
                  "quote",
                  "radio-tower",
                  "reactions",
                  "references",
                  "refresh",
                  "regex",
                  "remote-explorer",
                  "remote",
                  "remove",
                  "replace-all",
                  "replace",
                  "repo-clone",
                  "repo-force-push",
                  "repo-pull",
                  "repo-push",
                  "report",
                  "request-changes",
                  "rocket",
                  "root-folder-opened",
                  "root-folder",
                  "rss",
                  "ruby",
                  "save-all",
                  "save-as",
                  "save",
                  "screen-full",
                  "screen-normal",
                  "search-stop",
                  "server",
                  "settings-gear",
                  "settings",
                  "shield",
                  "smiley",
                  "sort-precedence",
                  "split-horizontal",
                  "split-vertical",
                  "squirrel",
                  "star-full",
                  "star-half",
                  "symbol-class",
                  "symbol-color",
                  "symbol-customcolor",
                  "symbol-constant",
                  "symbol-enum-member",
                  "symbol-field",
                  "symbol-file",
                  "symbol-interface",
                  "symbol-keyword",
                  "symbol-misc",
                  "symbol-operator",
                  "symbol-property",
                  "wrench",
                  "wrench-subaction",
                  "symbol-snippet",
                  "tasklist",
                  "telescope",
                  "text-size",
                  "three-bars",
                  "thumbsdown",
                  "thumbsup",
                  "tools",
                  "triangle-down",
                  "triangle-left",
                  "triangle-right",
                  "triangle-up",
                  "twitter",
                  "unfold",
                  "unlock",
                  "unmute",
                  "unverified",
                  "verified",
                  "versions",
                  "vm-active",
                  "vm-outline",
                  "vm-running",
                  "watch",
                  "whitespace",
                  "whole-word",
                  "window",
                  "word-wrap",
                  "zoom-in",
                  "zoom-out",
                  "list-filter",
                  "list-flat",
                  "list-selection",
                  "selection",
                  "list-tree",
                  "debug-breakpoint-function-unverified",
                  "debug-breakpoint-function",
                  "debug-breakpoint-function-disabled",
                  "debug-stackframe-active",
                  "circle-small-filled",
                  "debug-stackframe-dot",
                  "debug-stackframe",
                  "debug-stackframe-focused",
                  "debug-breakpoint-unsupported",
                  "symbol-string",
                  "debug-reverse-continue",
                  "debug-step-back",
                  "debug-restart-frame",
                  "call-incoming",
                  "call-outgoing",
                  "menu",
                  "expand-all",
                  "feedback",
                  "group-by-ref-type",
                  "ungroup-by-ref-type",
                  "account",
                  "bell-dot",
                  "debug-console",
                  "library",
                  "output",
                  "run-all",
                  "sync-ignored",
                  "pinned",
                  "github-inverted",
                  "debug-alt",
                  "server-process",
                  "server-environment",
                  "pass",
                  "stop-circle",
                  "play-circle",
                  "record",
                  "debug-alt-small",
                  "vm-connect",
                  "cloud",
                  "merge",
                  "export",
                  "graph-left",
                  "magnet",
                  "notebook",
                  "redo",
                  "check-all",
                  "pinned-dirty",
                  "pass-filled",
                  "circle-large-filled",
                  "circle-large",
                  "circle-large-outline",
                  "combine",
                  "gather",
                  "table",
                  "variable-group",
                  "type-hierarchy",
                  "type-hierarchy-sub",
                  "type-hierarchy-super",
                  "git-pull-request-create",
                  "run-above",
                  "run-below",
                  "notebook-template",
                  "debug-rerun",
                  "workspace-trusted",
                  "workspace-untrusted",
                  "workspace-unspecified",
                  "terminal-cmd",
                  "terminal-debian",
                  "terminal-linux",
                  "terminal-powershell",
                  "terminal-tmux",
                  "terminal-ubuntu",
                  "terminal-bash",
                  "arrow-swap",
                  "copy",
                  "person-add",
                  "filter-filled",
                  "wand",
                  "debug-line-by-line",
                  "inspect",
                  "layers",
                  "layers-dot",
                  "layers-active",
                  "compass",
                  "compass-dot",
                  "compass-active",
                  "azure",
                  "issue-draft",
                  "git-pull-request-closed",
                  "git-pull-request-draft",
                  "debug-all",
                  "debug-coverage",
                  "run-errors",
                  "folder-library",
                  "debug-continue-small",
                  "beaker-stop",
                  "graph-line",
                  "graph-scatter",
                  "pie-chart",
                  "bracket-dot",
                  "bracket-error",
                  "lock-small",
                  "azure-devops",
                  "verified-filled",
                  "newline",
                  "layout",
                  "layout-activitybar-left",
                  "layout-activitybar-right",
                  "layout-panel-left",
                  "layout-panel-center",
                  "layout-panel-justify",
                  "layout-panel-right",
                  "layout-panel",
                  "layout-sidebar-left",
                  "layout-sidebar-right",
                  "layout-statusbar",
                  "layout-menubar",
                  "layout-centered",
                  "layout-sidebar-right-off",
                  "layout-panel-off",
                  "layout-sidebar-left-off",
                  "target",
                  "indent",
                  "record-small",
                  "error-small",
                  "arrow-circle-down",
                  "arrow-circle-left",
                  "arrow-circle-right",
                  "arrow-circle-up",
                  "heart-filled",
                  "map",
                  "map-filled",
                  "circle-small",
                  "bell-slash",
                  "bell-slash-dot",
                  "comment-unresolved",
                  "git-pull-request-go-to-changes",
                  "git-pull-request-new-changes",
                  "search-fuzzy",
                  "comment-draft",
                  "dialog-error",
                  "dialog-warning",
                  "dialog-info",
                  "dialog-close",
                  "tree-item-expanded",
                  "tree-filter-on-type-on",
                  "tree-filter-on-type-off",
                  "tree-filter-clear",
                  "tree-item-loading",
                  "menu-selection",
                  "menu-submenu",
                  "menubar-more",
                  "scrollbar-button-left",
                  "scrollbar-button-right",
                  "scrollbar-button-up",
                  "scrollbar-button-down",
                  "toolbar-more",
                  "quick-input-back"
                ],
                "markdownEnumDescriptions": [
                  "$(add)",
                  "$(plus)",
                  "$(gist-new)",
                  "$(repo-create)",
                  "$(lightbulb)",
                  "$(light-bulb)",
                  "$(repo)",
                  "$(repo-delete)",
                  "$(gist-fork)",
                  "$(repo-forked)",
                  "$(git-pull-request)",
                  "$(git-pull-request-abandoned)",
                  "$(record-keys)",
                  "$(keyboard)",
                  "$(tag)",
                  "$(tag-add)",
                  "$(tag-remove)",
                  "$(person)",
                  "$(person-follow)",
                  "$(person-outline)",
                  "$(person-filled)",
                  "$(git-branch)",
                  "$(git-branch-create)",
                  "$(git-branch-delete)",
                  "$(source-control)",
                  "$(mirror)",
                  "$(mirror-public)",
                  "$(star)",
                  "$(star-add)",
                  "$(star-delete)",
                  "$(star-empty)",
                  "$(comment)",
                  "$(comment-add)",
                  "$(alert)",
                  "$(warning)",
                  "$(search)",
                  "$(search-save)",
                  "$(log-out)",
                  "$(sign-out)",
                  "$(log-in)",
                  "$(sign-in)",
                  "$(eye)",
                  "$(eye-unwatch)",
                  "$(eye-watch)",
                  "$(circle-filled)",
                  "$(primitive-dot)",
                  "$(close-dirty)",
                  "$(debug-breakpoint)",
                  "$(debug-breakpoint-disabled)",
                  "$(debug-hint)",
                  "$(primitive-square)",
                  "$(edit)",
                  "$(pencil)",
                  "$(info)",
                  "$(issue-opened)",
                  "$(gist-private)",
                  "$(git-fork-private)",
                  "$(lock)",
                  "$(mirror-private)",
                  "$(close)",
                  "$(remove-close)",
                  "$(x)",
                  "$(repo-sync)",
                  "$(sync)",
                  "$(clone)",
                  "$(desktop-download)",
                  "$(beaker)",
                  "$(microscope)",
                  "$(vm)",
                  "$(device-desktop)",
                  "$(file)",
                  "$(file-text)",
                  "$(more)",
                  "$(ellipsis)",
                  "$(kebab-horizontal)",
                  "$(mail-reply)",
                  "$(reply)",
                  "$(organization)",
                  "$(organization-filled)",
                  "$(organization-outline)",
                  "$(new-file)",
                  "$(file-add)",
                  "$(new-folder)",
                  "$(file-directory-create)",
                  "$(trash)",
                  "$(trashcan)",
                  "$(history)",
                  "$(clock)",
                  "$(folder)",
                  "$(file-directory)",
                  "$(symbol-folder)",
                  "$(logo-github)",
                  "$(mark-github)",
                  "$(github)",
                  "$(terminal)",
                  "$(console)",
                  "$(repl)",
                  "$(zap)",
                  "$(symbol-event)",
                  "$(error)",
                  "$(stop)",
                  "$(variable)",
                  "$(symbol-variable)",
                  "$(array)",
                  "$(symbol-array)",
                  "$(symbol-module)",
                  "$(symbol-package)",
                  "$(symbol-namespace)",
                  "$(symbol-object)",
                  "$(symbol-method)",
                  "$(symbol-function)",
                  "$(symbol-constructor)",
                  "$(symbol-boolean)",
                  "$(symbol-null)",
                  "$(symbol-numeric)",
                  "$(symbol-number)",
                  "$(symbol-structure)",
                  "$(symbol-struct)",
                  "$(symbol-parameter)",
                  "$(symbol-type-parameter)",
                  "$(symbol-key)",
                  "$(symbol-text)",
                  "$(symbol-reference)",
                  "$(go-to-file)",
                  "$(symbol-enum)",
                  "$(symbol-value)",
                  "$(symbol-ruler)",
                  "$(symbol-unit)",
                  "$(activate-breakpoints)",
                  "$(archive)",
                  "$(arrow-both)",
                  "$(arrow-down)",
                  "$(arrow-left)",
                  "$(arrow-right)",
                  "$(arrow-small-down)",
                  "$(arrow-small-left)",
                  "$(arrow-small-right)",
                  "$(arrow-small-up)",
                  "$(arrow-up)",
                  "$(bell)",
                  "$(bold)",
                  "$(book)",
                  "$(bookmark)",
                  "$(debug-breakpoint-conditional-unverified)",
                  "$(debug-breakpoint-conditional)",
                  "$(debug-breakpoint-conditional-disabled)",
                  "$(debug-breakpoint-data-unverified)",
                  "$(debug-breakpoint-data)",
                  "$(debug-breakpoint-data-disabled)",
                  "$(debug-breakpoint-log-unverified)",
                  "$(debug-breakpoint-log)",
                  "$(debug-breakpoint-log-disabled)",
                  "$(briefcase)",
                  "$(broadcast)",
                  "$(browser)",
                  "$(bug)",
                  "$(calendar)",
                  "$(case-sensitive)",
                  "$(check)",
                  "$(checklist)",
                  "$(chevron-down)",
                  "$(drop-down-button)",
                  "$(chevron-left)",
                  "$(chevron-right)",
                  "$(chevron-up)",
                  "$(chrome-close)",
                  "$(chrome-maximize)",
                  "$(chrome-minimize)",
                  "$(chrome-restore)",
                  "$(circle)",
                  "$(circle-outline)",
                  "$(debug-breakpoint-unverified)",
                  "$(circle-slash)",
                  "$(circuit-board)",
                  "$(clear-all)",
                  "$(clippy)",
                  "$(close-all)",
                  "$(cloud-download)",
                  "$(cloud-upload)",
                  "$(code)",
                  "$(collapse-all)",
                  "$(color-mode)",
                  "$(comment-discussion)",
                  "$(compare-changes)",
                  "$(credit-card)",
                  "$(dash)",
                  "$(dashboard)",
                  "$(database)",
                  "$(debug-continue)",
                  "$(debug-disconnect)",
                  "$(debug-pause)",
                  "$(debug-restart)",
                  "$(debug-start)",
                  "$(debug-step-into)",
                  "$(debug-step-out)",
                  "$(debug-step-over)",
                  "$(debug-stop)",
                  "$(debug)",
                  "$(device-camera-video)",
                  "$(device-camera)",
                  "$(device-mobile)",
                  "$(diff-added)",
                  "$(diff-ignored)",
                  "$(diff-modified)",
                  "$(diff-removed)",
                  "$(diff-renamed)",
                  "$(diff)",
                  "$(discard)",
                  "$(editor-layout)",
                  "$(empty-window)",
                  "$(exclude)",
                  "$(extensions)",
                  "$(eye-closed)",
                  "$(file-binary)",
                  "$(file-code)",
                  "$(file-media)",
                  "$(file-pdf)",
                  "$(file-submodule)",
                  "$(file-symlink-directory)",
                  "$(file-symlink-file)",
                  "$(file-zip)",
                  "$(files)",
                  "$(filter)",
                  "$(flame)",
                  "$(fold-down)",
                  "$(fold-up)",
                  "$(fold)",
                  "$(folder-active)",
                  "$(folder-opened)",
                  "$(gear)",
                  "$(gift)",
                  "$(gist-secret)",
                  "$(gist)",
                  "$(git-commit)",
                  "$(git-compare)",
                  "$(git-merge)",
                  "$(github-action)",
                  "$(github-alt)",
                  "$(globe)",
                  "$(grabber)",
                  "$(graph)",
                  "$(gripper)",
                  "$(heart)",
                  "$(home)",
                  "$(horizontal-rule)",
                  "$(hubot)",
                  "$(inbox)",
                  "$(issue-closed)",
                  "$(issue-reopened)",
                  "$(issues)",
                  "$(italic)",
                  "$(jersey)",
                  "$(json)",
                  "$(bracket)",
                  "$(kebab-vertical)",
                  "$(key)",
                  "$(law)",
                  "$(lightbulb-autofix)",
                  "$(link-external)",
                  "$(link)",
                  "$(list-ordered)",
                  "$(list-unordered)",
                  "$(live-share)",
                  "$(loading)",
                  "$(location)",
                  "$(mail-read)",
                  "$(mail)",
                  "$(markdown)",
                  "$(megaphone)",
                  "$(mention)",
                  "$(milestone)",
                  "$(mortar-board)",
                  "$(move)",
                  "$(multiple-windows)",
                  "$(mute)",
                  "$(no-newline)",
                  "$(note)",
                  "$(octoface)",
                  "$(open-preview)",
                  "$(package)",
                  "$(paintcan)",
                  "$(pin)",
                  "$(play)",
                  "$(run)",
                  "$(plug)",
                  "$(preserve-case)",
                  "$(preview)",
                  "$(project)",
                  "$(pulse)",
                  "$(question)",
                  "$(quote)",
                  "$(radio-tower)",
                  "$(reactions)",
                  "$(references)",
                  "$(refresh)",
                  "$(regex)",
                  "$(remote-explorer)",
                  "$(remote)",
                  "$(remove)",
                  "$(replace-all)",
                  "$(replace)",
                  "$(repo-clone)",
                  "$(repo-force-push)",
                  "$(repo-pull)",
                  "$(repo-push)",
                  "$(report)",
                  "$(request-changes)",
                  "$(rocket)",
                  "$(root-folder-opened)",
                  "$(root-folder)",
                  "$(rss)",
                  "$(ruby)",
                  "$(save-all)",
                  "$(save-as)",
                  "$(save)",
                  "$(screen-full)",
                  "$(screen-normal)",
                  "$(search-stop)",
                  "$(server)",
                  "$(settings-gear)",
                  "$(settings)",
                  "$(shield)",
                  "$(smiley)",
                  "$(sort-precedence)",
                  "$(split-horizontal)",
                  "$(split-vertical)",
                  "$(squirrel)",
                  "$(star-full)",
                  "$(star-half)",
                  "$(symbol-class)",
                  "$(symbol-color)",
                  "$(symbol-customcolor)",
                  "$(symbol-constant)",
                  "$(symbol-enum-member)",
                  "$(symbol-field)",
                  "$(symbol-file)",
                  "$(symbol-interface)",
                  "$(symbol-keyword)",
                  "$(symbol-misc)",
                  "$(symbol-operator)",
                  "$(symbol-property)",
                  "$(wrench)",
                  "$(wrench-subaction)",
                  "$(symbol-snippet)",
                  "$(tasklist)",
                  "$(telescope)",
                  "$(text-size)",
                  "$(three-bars)",
                  "$(thumbsdown)",
                  "$(thumbsup)",
                  "$(tools)",
                  "$(triangle-down)",
                  "$(triangle-left)",
                  "$(triangle-right)",
                  "$(triangle-up)",
                  "$(twitter)",
                  "$(unfold)",
                  "$(unlock)",
                  "$(unmute)",
                  "$(unverified)",
                  "$(verified)",
                  "$(versions)",
                  "$(vm-active)",
                  "$(vm-outline)",
                  "$(vm-running)",
                  "$(watch)",
                  "$(whitespace)",
                  "$(whole-word)",
                  "$(window)",
                  "$(word-wrap)",
                  "$(zoom-in)",
                  "$(zoom-out)",
                  "$(list-filter)",
                  "$(list-flat)",
                  "$(list-selection)",
                  "$(selection)",
                  "$(list-tree)",
                  "$(debug-breakpoint-function-unverified)",
                  "$(debug-breakpoint-function)",
                  "$(debug-breakpoint-function-disabled)",
                  "$(debug-stackframe-active)",
                  "$(circle-small-filled)",
                  "$(debug-stackframe-dot)",
                  "$(debug-stackframe)",
                  "$(debug-stackframe-focused)",
                  "$(debug-breakpoint-unsupported)",
                  "$(symbol-string)",
                  "$(debug-reverse-continue)",
                  "$(debug-step-back)",
                  "$(debug-restart-frame)",
                  "$(call-incoming)",
                  "$(call-outgoing)",
                  "$(menu)",
                  "$(expand-all)",
                  "$(feedback)",
                  "$(group-by-ref-type)",
                  "$(ungroup-by-ref-type)",
                  "$(account)",
                  "$(bell-dot)",
                  "$(debug-console)",
                  "$(library)",
                  "$(output)",
                  "$(run-all)",
                  "$(sync-ignored)",
                  "$(pinned)",
                  "$(github-inverted)",
                  "$(debug-alt)",
                  "$(server-process)",
                  "$(server-environment)",
                  "$(pass)",
                  "$(stop-circle)",
                  "$(play-circle)",
                  "$(record)",
                  "$(debug-alt-small)",
                  "$(vm-connect)",
                  "$(cloud)",
                  "$(merge)",
                  "$(export)",
                  "$(graph-left)",
                  "$(magnet)",
                  "$(notebook)",
                  "$(redo)",
                  "$(check-all)",
                  "$(pinned-dirty)",
                  "$(pass-filled)",
                  "$(circle-large-filled)",
                  "$(circle-large)",
                  "$(circle-large-outline)",
                  "$(combine)",
                  "$(gather)",
                  "$(table)",
                  "$(variable-group)",
                  "$(type-hierarchy)",
                  "$(type-hierarchy-sub)",
                  "$(type-hierarchy-super)",
                  "$(git-pull-request-create)",
                  "$(run-above)",
                  "$(run-below)",
                  "$(notebook-template)",
                  "$(debug-rerun)",
                  "$(workspace-trusted)",
                  "$(workspace-untrusted)",
                  "$(workspace-unspecified)",
                  "$(terminal-cmd)",
                  "$(terminal-debian)",
                  "$(terminal-linux)",
                  "$(terminal-powershell)",
                  "$(terminal-tmux)",
                  "$(terminal-ubuntu)",
                  "$(terminal-bash)",
                  "$(arrow-swap)",
                  "$(copy)",
                  "$(person-add)",
                  "$(filter-filled)",
                  "$(wand)",
                  "$(debug-line-by-line)",
                  "$(inspect)",
                  "$(layers)",
                  "$(layers-dot)",
                  "$(layers-active)",
                  "$(compass)",
                  "$(compass-dot)",
                  "$(compass-active)",
                  "$(azure)",
                  "$(issue-draft)",
                  "$(git-pull-request-closed)",
                  "$(git-pull-request-draft)",
                  "$(debug-all)",
                  "$(debug-coverage)",
                  "$(run-errors)",
                  "$(folder-library)",
                  "$(debug-continue-small)",
                  "$(beaker-stop)",
                  "$(graph-line)",
                  "$(graph-scatter)",
                  "$(pie-chart)",
                  "$(bracket-dot)",
                  "$(bracket-error)",
                  "$(lock-small)",
                  "$(azure-devops)",
                  "$(verified-filled)",
                  "$(newline)",
                  "$(layout)",
                  "$(layout-activitybar-left)",
                  "$(layout-activitybar-right)",
                  "$(layout-panel-left)",
                  "$(layout-panel-center)",
                  "$(layout-panel-justify)",
                  "$(layout-panel-right)",
                  "$(layout-panel)",
                  "$(layout-sidebar-left)",
                  "$(layout-sidebar-right)",
                  "$(layout-statusbar)",
                  "$(layout-menubar)",
                  "$(layout-centered)",
                  "$(layout-sidebar-right-off)",
                  "$(layout-panel-off)",
                  "$(layout-sidebar-left-off)",
                  "$(target)",
                  "$(indent)",
                  "$(record-small)",
                  "$(error-small)",
                  "$(arrow-circle-down)",
                  "$(arrow-circle-left)",
                  "$(arrow-circle-right)",
                  "$(arrow-circle-up)",
                  "$(heart-filled)",
                  "$(map)",
                  "$(map-filled)",
                  "$(circle-small)",
                  "$(bell-slash)",
                  "$(bell-slash-dot)",
                  "$(comment-unresolved)",
                  "$(git-pull-request-go-to-changes)",
                  "$(git-pull-request-new-changes)",
                  "$(search-fuzzy)",
                  "$(comment-draft)",
                  "$(dialog-error)",
                  "$(dialog-warning)",
                  "$(dialog-info)",
                  "$(dialog-close)",
                  "$(tree-item-expanded)",
                  "$(tree-filter-on-type-on)",
                  "$(tree-filter-on-type-off)",
                  "$(tree-filter-clear)",
                  "$(tree-item-loading)",
                  "$(menu-selection)",
                  "$(menu-submenu)",
                  "$(menubar-more)",
                  "$(scrollbar-button-left)",
                  "$(scrollbar-button-right)",
                  "$(scrollbar-button-up)",
                  "$(scrollbar-button-down)",
                  "$(toolbar-more)",
                  "$(quick-input-back)"
                ]
              },
              "color": {
                "description": "A theme color ID to associate with the terminal icon.",
                "type": [
                  "string",
                  "null"
                ],
                "enum": [
                  "terminal.ansiBlack",
                  "terminal.ansiRed",
                  "terminal.ansiGreen",
                  "terminal.ansiYellow",
                  "terminal.ansiBlue",
                  "terminal.ansiMagenta",
                  "terminal.ansiCyan",
                  "terminal.ansiWhite"
                ],
                "default": null
              },
              "env": {
                "markdownDescription": "An object with environment variables that will be added to the terminal profile process. Set to `null` to delete environment variables from the base environment.",
                "type": "object",
                "additionalProperties": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "default": {}
              }
            }
          }
        ]
      },
      "defaultDefaultValue": {
        "bash": {
          "path": "bash",
          "icon": "terminal-bash"
        },
        "zsh": {
          "path": "zsh"
        },
        "fish": {
          "path": "fish"
        },
        "tmux": {
          "path": "tmux",
          "icon": "terminal-tmux"
        },
        "pwsh": {
          "path": "pwsh",
          "icon": "terminal-powershell"
        }
      },
      "scope": 3
    },
    "terminal.integrated.useWslProfiles": {
      "description": "Controls whether or not WSL distros are shown in the terminal dropdown",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.ignoreProcessNames": {
      "description": "A set of process names to ignore when using the `terminal.integrated.confirmOnKill` setting.",
      "type": "array",
      "items": {
        "type": "string",
        "uniqueItems": true
      },
      "default": [
        "starship",
        "oh-my-posh",
        "bash",
        "zsh"
      ],
      "defaultDefaultValue": [
        "starship",
        "oh-my-posh",
        "bash",
        "zsh"
      ],
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.sendKeybindingsToShell": {
      "markdownDescription": "Dispatches most keybindings to the terminal instead of the workbench, overriding `#terminal.integrated.commandsToSkipShell#`, which can be used alternatively for fine tuning.",
      "type": "boolean",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.tabs.enabled": {
      "description": "Controls whether terminal tabs display as a list to the side of the terminal. When this is disabled a dropdown will display instead.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.tabs.enableAnimation": {
      "description": "Controls whether terminal tab statuses support animation (eg. in progress tasks).",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.tabs.hideCondition": {
      "description": "Controls whether the terminal tabs view will hide under certain conditions.",
      "type": "string",
      "enum": [
        "never",
        "singleTerminal",
        "singleGroup"
      ],
      "enumDescriptions": [
        "Never hide the terminal tabs view",
        "Hide the terminal tabs view when there is only a single terminal opened",
        "Hide the terminal tabs view when there is only a single terminal group opened"
      ],
      "default": "singleTerminal",
      "defaultDefaultValue": "singleTerminal",
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.tabs.showActiveTerminal": {
      "description": "Shows the active terminal information in the view. This is particularly useful when the title within the tabs aren't visible.",
      "type": "string",
      "enum": [
        "always",
        "singleTerminal",
        "singleTerminalOrNarrow",
        "never"
      ],
      "enumDescriptions": [
        "Always show the active terminal",
        "Show the active terminal when it is the only terminal opened",
        "Show the active terminal when it is the only terminal opened or when the tabs view is in its narrow textless state",
        "Never show the active terminal"
      ],
      "default": "singleTerminalOrNarrow",
      "defaultDefaultValue": "singleTerminalOrNarrow",
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.tabs.showActions": {
      "description": "Controls whether terminal split and kill buttons are displays next to the new terminal button.",
      "type": "string",
      "enum": [
        "always",
        "singleTerminal",
        "singleTerminalOrNarrow",
        "never"
      ],
      "enumDescriptions": [
        "Always show the actions",
        "Show the actions when it is the only terminal opened",
        "Show the actions when it is the only terminal opened or when the tabs view is in its narrow textless state",
        "Never show the actions"
      ],
      "default": "singleTerminalOrNarrow",
      "defaultDefaultValue": "singleTerminalOrNarrow",
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.tabs.location": {
      "type": "string",
      "enum": [
        "left",
        "right"
      ],
      "enumDescriptions": [
        "Show the terminal tabs view to the left of the terminal",
        "Show the terminal tabs view to the right of the terminal"
      ],
      "default": "right",
      "description": "Controls the location of the terminal tabs, either to the left or right of the actual terminal(s).",
      "defaultDefaultValue": "right",
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.tabFocusMode": {
      "markdownDescription": "Controls whether the terminal receives tabs or defers them to the workbench for navigation.",
      "type": "boolean",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.defaultLocation": {
      "type": "string",
      "enum": [
        "editor",
        "view"
      ],
      "enumDescriptions": [
        "Create terminals in the editor",
        "Create terminals in the terminal view"
      ],
      "default": "view",
      "description": "Controls where newly created terminals will appear.",
      "defaultDefaultValue": "view",
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.tabs.focusMode": {
      "type": "string",
      "enum": [
        "singleClick",
        "doubleClick"
      ],
      "enumDescriptions": [
        "Focus the terminal when clicking a terminal tab",
        "Focus the terminal when double-clicking a terminal tab"
      ],
      "default": "doubleClick",
      "description": "Controls whether focusing the terminal of a tab happens on double or single click.",
      "defaultDefaultValue": "doubleClick",
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.macOptionIsMeta": {
      "description": "Controls whether to treat the option key as the meta key in the terminal on macOS.",
      "type": "boolean",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.macOptionClickForcesSelection": {
      "description": "Controls whether to force selection when using Option+click on macOS. This will force a regular (line) selection and disallow the use of column selection mode. This enables copying and pasting using the regular terminal selection, for example, when mouse mode is enabled in tmux.",
      "type": "boolean",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.altClickMovesCursor": {
      "markdownDescription": "If enabled, alt/option + click will reposition the prompt cursor to underneath the mouse when `#editor.multiCursorModifier#` is set to `'alt'` (the default value). This may not work reliably depending on your shell.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.copyOnSelection": {
      "description": "Controls whether text selected in the terminal will be copied to the clipboard.",
      "type": "boolean",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.enableMultiLinePasteWarning": {
      "markdownDescription": "Show a warning dialog when pasting multiple lines into the terminal. The dialog does not show when:\n\n- Bracketed paste mode is enabled (the shell supports multi-line paste natively)\n- The paste is handled by the shell's readline (in the case of pwsh)",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.drawBoldTextInBrightColors": {
      "description": "Controls whether bold text in the terminal will always use the \"bright\" ANSI color variant.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.fontFamily": {
      "markdownDescription": "Controls the font family of the terminal. Defaults to `#editor.fontFamily#`'s value.",
      "type": "string",
      "default": "",
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.fontSize": {
      "description": "Controls the font size in pixels of the terminal.",
      "type": "number",
      "default": 12,
      "minimum": 6,
      "maximum": 100,
      "defaultDefaultValue": 12,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.letterSpacing": {
      "description": "Controls the letter spacing of the terminal. This is an integer value which represents the number of additional pixels to add between characters.",
      "type": "number",
      "default": 0,
      "defaultDefaultValue": 0,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.lineHeight": {
      "description": "Controls the line height of the terminal. This number is multiplied by the terminal font size to get the actual line-height in pixels.",
      "type": "number",
      "default": 1,
      "defaultDefaultValue": 1,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.minimumContrastRatio": {
      "markdownDescription": "When set, the foreground color of each cell will change to try meet the contrast ratio specified. Note that this will not apply to `powerline` characters per #146406. Example values:\n\n- 1: Do nothing and use the standard theme colors.\n- 4.5: [WCAG AA compliance (minimum)](https://www.w3.org/TR/UNDERSTANDING-WCAG20/visual-audio-contrast-contrast.html) (default).\n- 7: [WCAG AAA compliance (enhanced)](https://www.w3.org/TR/UNDERSTANDING-WCAG20/visual-audio-contrast7.html).\n- 21: White on black or black on white.",
      "type": "number",
      "default": 4.5,
      "tags": [
        "accessibility"
      ],
      "defaultDefaultValue": 4.5,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.tabStopWidth": {
      "markdownDescription": "The number of cells in a tab stop.",
      "type": "number",
      "minimum": 1,
      "default": 8,
      "defaultDefaultValue": 8,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.fastScrollSensitivity": {
      "markdownDescription": "Scrolling speed multiplier when pressing `Alt`.",
      "type": "number",
      "default": 5,
      "defaultDefaultValue": 5,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.mouseWheelScrollSensitivity": {
      "markdownDescription": "A multiplier to be used on the `deltaY` of mouse wheel scroll events.",
      "type": "number",
      "default": 1,
      "defaultDefaultValue": 1,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.bellDuration": {
      "markdownDescription": "The number of milliseconds to show the bell within a terminal tab when triggered.",
      "type": "number",
      "default": 1000,
      "defaultDefaultValue": 1000,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.fontWeight": {
      "anyOf": [
        {
          "type": "number",
          "minimum": 1,
          "maximum": 1000,
          "errorMessage": "Only \"normal\" and \"bold\" keywords or numbers between 1 and 1000 are allowed."
        },
        {
          "type": "string",
          "pattern": "^(normal|bold|1000|[1-9][0-9]{0,2})$"
        },
        {
          "enum": [
            "normal",
            "bold",
            "100",
            "200",
            "300",
            "400",
            "500",
            "600",
            "700",
            "800",
            "900"
          ]
        }
      ],
      "description": "The font weight to use within the terminal for non-bold text. Accepts \"normal\" and \"bold\" keywords or numbers between 1 and 1000.",
      "default": "normal",
      "defaultDefaultValue": "normal",
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.fontWeightBold": {
      "anyOf": [
        {
          "type": "number",
          "minimum": 1,
          "maximum": 1000,
          "errorMessage": "Only \"normal\" and \"bold\" keywords or numbers between 1 and 1000 are allowed."
        },
        {
          "type": "string",
          "pattern": "^(normal|bold|1000|[1-9][0-9]{0,2})$"
        },
        {
          "enum": [
            "normal",
            "bold",
            "100",
            "200",
            "300",
            "400",
            "500",
            "600",
            "700",
            "800",
            "900"
          ]
        }
      ],
      "description": "The font weight to use within the terminal for bold text. Accepts \"normal\" and \"bold\" keywords or numbers between 1 and 1000.",
      "default": "bold",
      "defaultDefaultValue": "bold",
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.cursorBlinking": {
      "description": "Controls whether the terminal cursor blinks.",
      "type": "boolean",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.cursorStyle": {
      "description": "Controls the style of terminal cursor.",
      "enum": [
        "block",
        "line",
        "underline"
      ],
      "default": "block",
      "defaultDefaultValue": "block",
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.cursorWidth": {
      "markdownDescription": "Controls the width of the cursor when `#terminal.integrated.cursorStyle#` is set to `line`.",
      "type": "number",
      "default": 1,
      "defaultDefaultValue": 1,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.scrollback": {
      "description": "Controls the maximum number of lines the terminal keeps in its buffer.",
      "type": "number",
      "default": 1000,
      "defaultDefaultValue": 1000,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.detectLocale": {
      "markdownDescription": "Controls whether to detect and set the `$LANG` environment variable to a UTF-8 compliant option since VS Code's terminal only supports UTF-8 encoded data coming from the shell.",
      "type": "string",
      "enum": [
        "auto",
        "off",
        "on"
      ],
      "markdownEnumDescriptions": [
        "Set the `$LANG` environment variable if the existing variable does not exist or it does not end in `'.UTF-8'`.",
        "Do not set the `$LANG` environment variable.",
        "Always set the `$LANG` environment variable."
      ],
      "default": "auto",
      "defaultDefaultValue": "auto",
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.gpuAcceleration": {
      "type": "string",
      "enum": [
        "auto",
        "on",
        "off",
        "canvas"
      ],
      "markdownEnumDescriptions": [
        "Let VS Code detect which renderer will give the best experience.",
        "Enable GPU acceleration within the terminal.",
        "Disable GPU acceleration within the terminal. The terminal will render much slower when GPU acceleration is off but it should reliably work on all systems.",
        "Use the terminal's fallback canvas renderer which uses a 2d context instead of webgl which may perform better on some systems. Note that some features are limited in the canvas renderer like opaque selection."
      ],
      "default": "auto",
      "description": "Controls whether the terminal will leverage the GPU to do its rendering.",
      "defaultDefaultValue": "auto",
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.tabs.separator": {
      "type": "string",
      "default": " - ",
      "markdownDescription": "Separator used by `terminal.integrated.tabs.title` and `terminal.integrated.tabs.title`.",
      "defaultDefaultValue": " - ",
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.tabs.title": {
      "type": "string",
      "default": "${process}",
      "markdownDescription": "Controls the terminal title. Variables are substituted based on the context:\n- `${cwd}`: the terminal's current working directory\n- `${cwdFolder}`: the terminal's current working directory, displayed for multi-root workspaces or in a single root workspace when the value differs from the initial working directory. On Windows, this will only be displayed when shell integration is enabled.\n- `${workspaceFolder}`: the workspace in which the terminal was launched\n- `${local}`: indicates a local terminal in a remote workspace\n- `${process}`: the name of the terminal process\n- `${separator}`: a conditional separator (` - `) that only shows when surrounded by variables with values or static text.\n- `${sequence}`: the name provided to the terminal by the process\n- `${task}`: indicates this terminal is associated with a task",
      "defaultDefaultValue": "${process}",
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.tabs.description": {
      "type": "string",
      "default": "${task}${separator}${local}${separator}${cwdFolder}",
      "markdownDescription": "Controls the terminal description, which appears to the right of the title. Variables are substituted based on the context:\n- `${cwd}`: the terminal's current working directory\n- `${cwdFolder}`: the terminal's current working directory, displayed for multi-root workspaces or in a single root workspace when the value differs from the initial working directory. On Windows, this will only be displayed when shell integration is enabled.\n- `${workspaceFolder}`: the workspace in which the terminal was launched\n- `${local}`: indicates a local terminal in a remote workspace\n- `${process}`: the name of the terminal process\n- `${separator}`: a conditional separator (` - `) that only shows when surrounded by variables with values or static text.\n- `${sequence}`: the name provided to the terminal by the process\n- `${task}`: indicates this terminal is associated with a task",
      "defaultDefaultValue": "${task}${separator}${local}${separator}${cwdFolder}",
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.rightClickBehavior": {
      "type": "string",
      "enum": [
        "default",
        "copyPaste",
        "paste",
        "selectWord",
        "nothing"
      ],
      "enumDescriptions": [
        "Show the context menu.",
        "Copy when there is a selection, otherwise paste.",
        "Paste on right click.",
        "Select the word under the cursor and show the context menu.",
        "Do nothing and pass event to terminal."
      ],
      "default": "selectWord",
      "description": "Controls how terminal reacts to right click.",
      "defaultDefaultValue": "selectWord",
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.confirmOnExit": {
      "description": "Controls whether to confirm when the window closes if there are active terminal sessions.",
      "type": "string",
      "enum": [
        "never",
        "always",
        "hasChildProcesses"
      ],
      "enumDescriptions": [
        "Never confirm.",
        "Always confirm if there are terminals.",
        "Confirm if there are any terminals that have child processes."
      ],
      "default": "never",
      "defaultDefaultValue": "never",
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.confirmOnKill": {
      "description": "Controls whether to confirm killing terminals when they have child processes. When set to editor, terminals in the editor area will be marked as changed when they have child processes. Note that child process detection may not work well for shells like Git Bash which don't run their processes as child processes of the shell.",
      "type": "string",
      "enum": [
        "never",
        "editor",
        "panel",
        "always"
      ],
      "enumDescriptions": [
        "Never confirm.",
        "Confirm if the terminal is in the editor.",
        "Confirm if the terminal is in the panel.",
        "Confirm if the terminal is either in the editor or panel."
      ],
      "default": "editor",
      "defaultDefaultValue": "editor",
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.enableBell": {
      "description": "Controls whether the terminal bell is enabled. This shows up as a visual bell next to the terminal's name.",
      "type": "boolean",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.commandsToSkipShell": {
      "markdownDescription": "A set of command IDs whose keybindings will not be sent to the shell but instead always be handled by VS Code. This allows keybindings that would normally be consumed by the shell to act instead the same as when the terminal is not focused, for example `Ctrl+P` to launch Quick Open.\n\n&nbsp;\n\nMany commands are skipped by default. To override a default and pass that command's keybinding to the shell instead, add the command prefixed with the `-` character. For example add `-workbench.action.quickOpen` to allow `Ctrl+P` to reach the shell.\n\n&nbsp;\n\nThe following list of default skipped commands is truncated when viewed in Settings Editor. To see the full list, [open the default settings JSON](command:workbench.action.openRawDefaultSettings 'Open Default Settings (JSON)') and search for the first command from the list below.\n\n&nbsp;\n\nDefault Skipped Commands:\n\n- editor.action.toggleTabFocusMode\n- notifications.hideList\n- notifications.hideToasts\n- workbench.action.closeQuickOpen\n- workbench.action.debug.continue\n- workbench.action.debug.pause\n- workbench.action.debug.restart\n- workbench.action.debug.run\n- workbench.action.debug.start\n- workbench.action.debug.stepInto\n- workbench.action.debug.stepOut\n- workbench.action.debug.stepOver\n- workbench.action.debug.stop\n- workbench.action.firstEditorInGroup\n- workbench.action.focusActiveEditorGroup\n- workbench.action.focusEighthEditorGroup\n- workbench.action.focusFifthEditorGroup\n- workbench.action.focusFirstEditorGroup\n- workbench.action.focusFourthEditorGroup\n- workbench.action.focusLastEditorGroup\n- workbench.action.focusNextPart\n- workbench.action.focusPreviousPart\n- workbench.action.focusSecondEditorGroup\n- workbench.action.focusSeventhEditorGroup\n- workbench.action.focusSixthEditorGroup\n- workbench.action.focusThirdEditorGroup\n- workbench.action.lastEditorInGroup\n- workbench.action.navigateDown\n- workbench.action.navigateLeft\n- workbench.action.navigateRight\n- workbench.action.navigateUp\n- workbench.action.nextEditor\n- workbench.action.nextEditorInGroup\n- workbench.action.nextPanelView\n- workbench.action.nextSideBarView\n- workbench.action.openNextRecentlyUsedEditor\n- workbench.action.openNextRecentlyUsedEditorInGroup\n- workbench.action.openPreviousRecentlyUsedEditor\n- workbench.action.openPreviousRecentlyUsedEditorInGroup\n- workbench.action.previousEditor\n- workbench.action.previousEditorInGroup\n- workbench.action.previousPanelView\n- workbench.action.previousSideBarView\n- workbench.action.quickOpen\n- workbench.action.quickOpenLeastRecentlyUsedEditor\n- workbench.action.quickOpenLeastRecentlyUsedEditorInGroup\n- workbench.action.quickOpenPreviousEditor\n- workbench.action.quickOpenPreviousRecentlyUsedEditor\n- workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup\n- workbench.action.quickOpenView\n- workbench.action.showCommands\n- workbench.action.tasks.build\n- workbench.action.tasks.reRunTask\n- workbench.action.tasks.restartTask\n- workbench.action.tasks.runTask\n- workbench.action.tasks.showLog\n- workbench.action.tasks.showTasks\n- workbench.action.tasks.terminate\n- workbench.action.tasks.test\n- workbench.action.terminal.acceptSelectedSuggestion\n- workbench.action.terminal.clear\n- workbench.action.terminal.clearSelection\n- workbench.action.terminal.copyAndClearSelection\n- workbench.action.terminal.copyLastCommandOutput\n- workbench.action.terminal.copySelection\n- workbench.action.terminal.copySelectionAsHtml\n- workbench.action.terminal.deleteToLineStart\n- workbench.action.terminal.deleteWordLeft\n- workbench.action.terminal.deleteWordRight\n- workbench.action.terminal.findNext\n- workbench.action.terminal.findPrevious\n- workbench.action.terminal.focus\n- workbench.action.terminal.focusAtIndex1\n- workbench.action.terminal.focusAtIndex2\n- workbench.action.terminal.focusAtIndex3\n- workbench.action.terminal.focusAtIndex4\n- workbench.action.terminal.focusAtIndex5\n- workbench.action.terminal.focusAtIndex6\n- workbench.action.terminal.focusAtIndex7\n- workbench.action.terminal.focusAtIndex8\n- workbench.action.terminal.focusAtIndex9\n- workbench.action.terminal.focusFind\n- workbench.action.terminal.focusNext\n- workbench.action.terminal.focusNextPane\n- workbench.action.terminal.focusPrevious\n- workbench.action.terminal.focusPreviousPane\n- workbench.action.terminal.goToRecentDirectory\n- workbench.action.terminal.hideFind\n- workbench.action.terminal.hideSuggestWidget\n- workbench.action.terminal.kill\n- workbench.action.terminal.killEditor\n- workbench.action.terminal.moveToEditor\n- workbench.action.terminal.moveToLineEnd\n- workbench.action.terminal.moveToLineStart\n- workbench.action.terminal.moveToTerminalPanel\n- workbench.action.terminal.new\n- workbench.action.terminal.newInActiveWorkspace\n- workbench.action.terminal.paste\n- workbench.action.terminal.pasteSelection\n- workbench.action.terminal.quickFix\n- workbench.action.terminal.resizePaneDown\n- workbench.action.terminal.resizePaneLeft\n- workbench.action.terminal.resizePaneRight\n- workbench.action.terminal.resizePaneUp\n- workbench.action.terminal.runActiveFile\n- workbench.action.terminal.runRecentCommand\n- workbench.action.terminal.runSelectedText\n- workbench.action.terminal.scrollDown\n- workbench.action.terminal.scrollDownPage\n- workbench.action.terminal.scrollToBottom\n- workbench.action.terminal.scrollToNextCommand\n- workbench.action.terminal.scrollToPreviousCommand\n- workbench.action.terminal.scrollToTop\n- workbench.action.terminal.scrollUp\n- workbench.action.terminal.scrollUpPage\n- workbench.action.terminal.selectAll\n- workbench.action.terminal.selectNextPageSuggestion\n- workbench.action.terminal.selectNextSuggestion\n- workbench.action.terminal.selectPrevPageSuggestion\n- workbench.action.terminal.selectPrevSuggestion\n- workbench.action.terminal.selectToNextCommand\n- workbench.action.terminal.selectToNextLine\n- workbench.action.terminal.selectToPreviousCommand\n- workbench.action.terminal.selectToPreviousLine\n- workbench.action.terminal.sendSequence\n- workbench.action.terminal.showAccessibilityHelp\n- workbench.action.terminal.sizeToContentWidth\n- workbench.action.terminal.split\n- workbench.action.terminal.splitInActiveWorkspace\n- workbench.action.terminal.toggleFindCaseSensitive\n- workbench.action.terminal.toggleFindRegex\n- workbench.action.terminal.toggleFindWholeWord\n- workbench.action.terminal.toggleTerminal\n- workbench.action.toggleFullScreen\n- workbench.action.toggleMaximizedPanel\n- workbench.action.togglePanel",
      "type": "array",
      "items": {
        "type": "string"
      },
      "default": [],
      "defaultDefaultValue": [],
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.allowChords": {
      "markdownDescription": "Whether or not to allow chord keybindings in the terminal. Note that when this is true and the keystroke results in a chord it will bypass `#terminal.integrated.commandsToSkipShell#`, setting this to false is particularly useful when you want ctrl+k to go to your shell (not VS Code).",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.allowMnemonics": {
      "markdownDescription": "Whether to allow menubar mnemonics (for example Alt+F) to trigger the open of the menubar. Note that this will cause all alt keystrokes to skip the shell when true. This does nothing on macOS.",
      "type": "boolean",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.env.osx": {
      "restricted": true,
      "markdownDescription": "Object with environment variables that will be added to the VS Code process to be used by the terminal on macOS. Set to `null` to delete the environment variable.",
      "type": "object",
      "additionalProperties": {
        "type": [
          "string",
          "null"
        ]
      },
      "default": {},
      "defaultDefaultValue": {},
      "scope": 3
    },
    "terminal.integrated.env.linux": {
      "restricted": true,
      "markdownDescription": "Object with environment variables that will be added to the VS Code process to be used by the terminal on Linux. Set to `null` to delete the environment variable.",
      "type": "object",
      "additionalProperties": {
        "type": [
          "string",
          "null"
        ]
      },
      "default": {},
      "defaultDefaultValue": {},
      "scope": 3
    },
    "terminal.integrated.env.windows": {
      "restricted": true,
      "markdownDescription": "Object with environment variables that will be added to the VS Code process to be used by the terminal on Windows. Set to `null` to delete the environment variable.",
      "type": "object",
      "additionalProperties": {
        "type": [
          "string",
          "null"
        ]
      },
      "default": {},
      "defaultDefaultValue": {},
      "scope": 3
    },
    "terminal.integrated.environmentChangesIndicator": {
      "markdownDescription": "Whether to display the environment changes indicator on each terminal which explains whether extensions have made, or want to make changes to the terminal's environment.",
      "type": "string",
      "enum": [
        "off",
        "on",
        "warnonly"
      ],
      "enumDescriptions": [
        "Disable the indicator.",
        "Enable the indicator.",
        "Only show the warning indicator when a terminal's environment is 'stale', not the information indicator that shows a terminal has had its environment modified by an extension."
      ],
      "default": "warnonly",
      "defaultDefaultValue": "warnonly",
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.environmentChangesRelaunch": {
      "markdownDescription": "Whether to relaunch terminals automatically if extension want to contribute to their environment and have not been interacted with yet.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.showExitAlert": {
      "description": "Controls whether to show the alert \"The terminal process terminated with exit code\" when exit code is non-zero.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.splitCwd": {
      "description": "Controls the working directory a split terminal starts with.",
      "type": "string",
      "enum": [
        "workspaceRoot",
        "initial",
        "inherited"
      ],
      "enumDescriptions": [
        "A new split terminal will use the workspace root as the working directory. In a multi-root workspace a choice for which root folder to use is offered.",
        "A new split terminal will use the working directory that the parent terminal started with.",
        "On macOS and Linux, a new split terminal will use the working directory of the parent terminal. On Windows, this behaves the same as initial."
      ],
      "default": "inherited",
      "defaultDefaultValue": "inherited",
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.windowsEnableConpty": {
      "description": "Whether to use ConPTY for Windows terminal process communication (requires Windows 10 build number 18309+). Winpty will be used if this is false.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.wordSeparators": {
      "description": "A string containing all characters to be considered word separators by the double-click to select word feature.",
      "type": "string",
      "default": " ()[]{}',\"`─‘’",
      "defaultDefaultValue": " ()[]{}',\"`─‘’",
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.enableFileLinks": {
      "description": "Whether to enable file links in terminals. Links can be slow when working on a network drive in particular because each file link is verified against the file system. Changing this will take effect only in new terminals.",
      "type": "string",
      "enum": [
        "off",
        "on",
        "notRemote"
      ],
      "enumDescriptions": [
        "Always off.",
        "Always on.",
        "Enable only when not in a remote workspace."
      ],
      "default": "on",
      "defaultDefaultValue": "on",
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.unicodeVersion": {
      "type": "string",
      "enum": [
        "6",
        "11"
      ],
      "enumDescriptions": [
        "Version 6 of Unicode. This is an older version which should work better on older systems.",
        "Version 11 of Unicode. This version provides better support on modern systems that use modern versions of Unicode."
      ],
      "default": "11",
      "description": "Controls what version of Unicode to use when evaluating the width of characters in the terminal. If you experience emoji or other wide characters not taking up the right amount of space or backspace either deleting too much or too little then you may want to try tweaking this setting.",
      "defaultDefaultValue": "11",
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.localEchoLatencyThreshold": {
      "description": "Length of network delay, in milliseconds, where local edits will be echoed on the terminal without waiting for server acknowledgement. If '0', local echo will always be on, and if '-1' it will be disabled.",
      "type": "integer",
      "minimum": -1,
      "default": 30,
      "defaultDefaultValue": 30,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.localEchoEnabled": {
      "markdownDescription": "When local echo should be enabled. This will override `#terminal.integrated.localEchoLatencyThreshold#`",
      "type": "string",
      "enum": [
        "on",
        "off",
        "auto"
      ],
      "enumDescriptions": [
        "Always enabled",
        "Always disabled",
        "Enabled only for remote workspaces"
      ],
      "default": "auto",
      "defaultDefaultValue": "auto",
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.localEchoExcludePrograms": {
      "description": "Local echo will be disabled when any of these program names are found in the terminal title.",
      "type": "array",
      "items": {
        "type": "string",
        "uniqueItems": true
      },
      "default": [
        "vim",
        "vi",
        "nano",
        "tmux"
      ],
      "defaultDefaultValue": [
        "vim",
        "vi",
        "nano",
        "tmux"
      ],
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.localEchoStyle": {
      "description": "Terminal style of locally echoed text; either a font style or an RGB color.",
      "default": "dim",
      "oneOf": [
        {
          "type": "string",
          "default": "dim",
          "enum": [
            "bold",
            "dim",
            "italic",
            "underlined",
            "inverted"
          ]
        },
        {
          "type": "string",
          "format": "color-hex",
          "default": "#ff0000"
        }
      ],
      "defaultDefaultValue": "dim",
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.enablePersistentSessions": {
      "description": "Persist terminal sessions/history for the workspace across window reloads.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.persistentSessionReviveProcess": {
      "markdownDescription": "When the terminal process must be shut down (for example on window or application close), this determines when the previous terminal session contents/history should be restored and processes be recreated when the workspace is next opened.\n\nCaveats:\n\n- Restoring of the process current working directory depends on whether it is supported by the shell.\n- Time to persist the session during shutdown is limited, so it may be aborted when using high-latency remote connections.",
      "type": "string",
      "enum": [
        "onExit",
        "onExitAndWindowClose",
        "never"
      ],
      "markdownEnumDescriptions": [
        "Revive the processes after the last window is closed on Windows/Linux or when the `workbench.action.quit` command is triggered (command palette, keybinding, menu).",
        "Revive the processes after the last window is closed on Windows/Linux or when the `workbench.action.quit` command is triggered (command palette, keybinding, menu), or when the window is closed.",
        "Never restore the terminal buffers or recreate the process."
      ],
      "default": "onExit",
      "defaultDefaultValue": "onExit",
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.customGlyphs": {
      "description": "Whether to draw custom glyphs for block element and box drawing characters instead of using the font, which typically yields better rendering with continuous lines. Note that this doesn't work with the DOM renderer.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.autoReplies": {
      "markdownDescription": "A set of messages that, when encountered in the terminal, will be automatically responded to. Provided the message is specific enough, this can help automate away common responses.\n\nRemarks:\n\n- Use `\"Terminate batch job (Y/N)\": \"Y\\r\"` to automatically respond to the terminate batch job prompt on Windows.\n- The message includes escape sequences so the reply might not happen with styled text.\n- Each reply can only happen once every second.\n- Use `\"\\r\"` in the reply to mean the enter key.\n- To unset a default key, set the value to null.\n- Restart VS Code if new don't apply.",
      "type": "object",
      "additionalProperties": {
        "oneOf": [
          {
            "type": "string",
            "description": "The reply to send to the process."
          },
          {
            "type": "null"
          }
        ]
      },
      "default": {},
      "defaultDefaultValue": {},
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.shellIntegration.enabled": {
      "restricted": true,
      "markdownDescription": "Determines whether or not shell integration is auto-injected to support features like enhanced command tracking and current working directory detection. \n\nShell integration works by injecting the shell with a startup script. The script gives VS Code insight into what is happening within the terminal.\n\nSupported shells:\n\n- Linux/macOS: bash, fish, pwsh, zsh\n - Windows: pwsh\n\nThis setting applies only when terminals are created, so you will need to restart your terminals for it to take effect.\n\n Note that the script injection may not work if you have custom arguments defined in the terminal profile, have enabled `#editor.accessibilitySupport#`, have a [complex bash `PROMPT_COMMAND`](https://code.visualstudio.com/docs/editor/integrated-terminal#_complex-bash-promptcommand), or other unsupported setup. To disable decorations, see `#terminal.integrated.shellIntegrations.decorationsEnabled#`",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3
    },
    "terminal.integrated.shellIntegration.decorationsEnabled": {
      "restricted": true,
      "markdownDescription": "When shell integration is enabled, adds a decoration for each command.",
      "type": "string",
      "enum": [
        "both",
        "gutter",
        "overviewRuler",
        "never"
      ],
      "enumDescriptions": [
        "Show decorations in the gutter (left) and overview ruler (right)",
        "Show gutter decorations to the left of the terminal",
        "Show overview ruler decorations to the right of the terminal",
        "Do not show decorations"
      ],
      "default": "both",
      "defaultDefaultValue": "both",
      "scope": 3
    },
    "terminal.integrated.shellIntegration.history": {
      "restricted": true,
      "markdownDescription": "Controls the number of recently used commands to keep in the terminal command history. Set to 0 to disable terminal command history.",
      "type": "number",
      "default": 100,
      "defaultDefaultValue": 100,
      "scope": 3
    },
    "terminal.integrated.shellIntegration.suggestEnabled": {
      "restricted": true,
      "markdownDescription": "Enables experimental terminal Intellisense suggestions for supported shells when `#terminal.integrated.shellIntegration.enabled#` is set to `true`. If shell integration is installed manually, `VSCODE_SUGGEST` needs to be set to `1` before calling the script.",
      "type": "boolean",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3
    },
    "terminal.integrated.smoothScrolling": {
      "markdownDescription": "Controls whether the terminal will scroll using an animation.",
      "type": "boolean",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "terminal.explorerKind": {
      "type": "string",
      "enum": [
        "integrated",
        "external"
      ],
      "enumDescriptions": [
        "Use VS Code's integrated terminal.",
        "Use the configured external terminal."
      ],
      "description": "When opening a file from the Explorer in a terminal, determines what kind of terminal will be launched",
      "default": "integrated",
      "defaultDefaultValue": "integrated",
      "scope": 3,
      "restricted": false
    },
    "css.trace.server": {
      "type": "string",
      "scope": 3,
      "enum": [
        "off",
        "messages",
        "verbose"
      ],
      "default": "off",
      "description": "Traces the communication between VS Code and the CSS language server.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "off",
      "restricted": false
    },
    "css.format.enable": {
      "type": "boolean",
      "scope": 3,
      "default": true,
      "description": "Enable/disable default CSS formatter.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "scss.format.enable": {
      "type": "boolean",
      "scope": 3,
      "default": true,
      "description": "Enable/disable default SCSS formatter.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "less.format.enable": {
      "type": "boolean",
      "scope": 3,
      "default": true,
      "description": "Enable/disable default LESS formatter.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "emmet.showExpandedAbbreviation": {
      "type": [
        "string"
      ],
      "enum": [
        "never",
        "always",
        "inMarkupAndStylesheetFilesOnly"
      ],
      "default": "always",
      "markdownDescription": "Shows expanded Emmet abbreviations as suggestions.\nThe option `\"inMarkupAndStylesheetFilesOnly\"` applies to html, haml, jade, slim, xml, xsl, css, scss, sass, less and stylus.\nThe option `\"always\"` applies to all parts of the file regardless of markup/css.",
      "scope": 3,
      "source": {
        "id": "vscode.emmet",
        "displayName": "Emmet"
      },
      "defaultDefaultValue": "always",
      "restricted": false
    },
    "emmet.includeLanguages": {
      "type": "object",
      "additionalProperties": {
        "type": "string"
      },
      "default": {},
      "markdownDescription": "Enable Emmet abbreviations in languages that are not supported by default. Add a mapping here between the language and Emmet supported language.\n For example: `{\"vue-html\": \"html\", \"javascript\": \"javascriptreact\"}`",
      "scope": 3,
      "source": {
        "id": "vscode.emmet",
        "displayName": "Emmet"
      },
      "defaultDefaultValue": {},
      "restricted": false
    },
    "emmet.variables": {
      "type": "object",
      "properties": {
        "lang": {
          "type": "string",
          "default": "en"
        },
        "charset": {
          "type": "string",
          "default": "UTF-8"
        }
      },
      "additionalProperties": {
        "type": "string"
      },
      "default": {},
      "markdownDescription": "Variables to be used in Emmet snippets.",
      "scope": 3,
      "source": {
        "id": "vscode.emmet",
        "displayName": "Emmet"
      },
      "defaultDefaultValue": {},
      "restricted": false
    },
    "emmet.syntaxProfiles": {
      "type": "object",
      "default": {},
      "markdownDescription": "Define profile for specified syntax or use your own profile with specific rules.",
      "scope": 3,
      "source": {
        "id": "vscode.emmet",
        "displayName": "Emmet"
      },
      "defaultDefaultValue": {},
      "restricted": false
    },
    "emmet.excludeLanguages": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "default": [
        "markdown"
      ],
      "markdownDescription": "An array of languages where Emmet abbreviations should not be expanded.",
      "scope": 3,
      "source": {
        "id": "vscode.emmet",
        "displayName": "Emmet"
      },
      "defaultDefaultValue": [
        "markdown"
      ],
      "restricted": false
    },
    "emmet.useInlineCompletions": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "If `true`, Emmet will use inline completions to suggest expansions. To prevent the non-inline completion item provider from showing up as often while this setting is `true`, turn `#editor.quickSuggestions#` to `inline` or `off` for the `other` item.",
      "scope": 3,
      "source": {
        "id": "vscode.emmet",
        "displayName": "Emmet"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "emmet.preferences": {
      "type": "object",
      "default": {},
      "markdownDescription": "Preferences used to modify behavior of some actions and resolvers of Emmet.",
      "properties": {
        "css.intUnit": {
          "type": "string",
          "default": "px",
          "markdownDescription": "Default unit for integer values."
        },
        "css.floatUnit": {
          "type": "string",
          "default": "em",
          "markdownDescription": "Default unit for float values."
        },
        "css.propertyEnd": {
          "type": "string",
          "default": ";",
          "markdownDescription": "Symbol to be placed at the end of CSS property when expanding CSS abbreviations."
        },
        "sass.propertyEnd": {
          "type": "string",
          "default": "",
          "markdownDescription": "Symbol to be placed at the end of CSS property when expanding CSS abbreviations in Sass files."
        },
        "stylus.propertyEnd": {
          "type": "string",
          "default": "",
          "markdownDescription": "Symbol to be placed at the end of CSS property when expanding CSS abbreviations in Stylus files."
        },
        "css.valueSeparator": {
          "type": "string",
          "default": ": ",
          "markdownDescription": "Symbol to be placed at the between CSS property and value when expanding CSS abbreviations."
        },
        "sass.valueSeparator": {
          "type": "string",
          "default": ": ",
          "markdownDescription": "Symbol to be placed at the between CSS property and value when expanding CSS abbreviations in Sass files."
        },
        "stylus.valueSeparator": {
          "type": "string",
          "default": " ",
          "markdownDescription": "Symbol to be placed at the between CSS property and value when expanding CSS abbreviations in Stylus files."
        },
        "bem.elementSeparator": {
          "type": "string",
          "default": "__",
          "markdownDescription": "Element separator used for classes when using the BEM filter."
        },
        "bem.modifierSeparator": {
          "type": "string",
          "default": "_",
          "markdownDescription": "Modifier separator used for classes when using the BEM filter."
        },
        "filter.commentBefore": {
          "type": "string",
          "default": "",
          "markdownDescription": "A definition of comment that should be placed before matched element when comment filter is applied."
        },
        "filter.commentAfter": {
          "type": "string",
          "default": "\n<!-- /[#ID][.CLASS] -->",
          "markdownDescription": "A definition of comment that should be placed after matched element when comment filter is applied."
        },
        "filter.commentTrigger": {
          "type": "array",
          "default": [
            "id",
            "class"
          ],
          "markdownDescription": "A comma-separated list of attribute names that should exist in the abbreviation for the comment filter to be applied."
        },
        "format.noIndentTags": {
          "type": "array",
          "default": [
            "html"
          ],
          "markdownDescription": "An array of tag names that should never get inner indentation."
        },
        "format.forceIndentationForTags": {
          "type": "array",
          "default": [
            "body"
          ],
          "markdownDescription": "An array of tag names that should always get inner indentation."
        },
        "profile.allowCompactBoolean": {
          "type": "boolean",
          "default": false,
          "markdownDescription": "If `true`, compact notation of boolean attributes are produced."
        },
        "css.webkitProperties": {
          "type": "string",
          "default": null,
          "markdownDescription": "Comma separated CSS properties that get the 'webkit' vendor prefix when used in Emmet abbreviation that starts with `-`. Set to empty string to always avoid the 'webkit' prefix."
        },
        "css.mozProperties": {
          "type": "string",
          "default": null,
          "markdownDescription": "Comma separated CSS properties that get the 'moz' vendor prefix when used in Emmet abbreviation that starts with `-`. Set to empty string to always avoid the 'moz' prefix."
        },
        "css.oProperties": {
          "type": "string",
          "default": null,
          "markdownDescription": "Comma separated CSS properties that get the 'o' vendor prefix when used in Emmet abbreviation that starts with `-`. Set to empty string to always avoid the 'o' prefix."
        },
        "css.msProperties": {
          "type": "string",
          "default": null,
          "markdownDescription": "Comma separated CSS properties that get the 'ms' vendor prefix when used in Emmet abbreviation that starts with `-`. Set to empty string to always avoid the 'ms' prefix."
        },
        "css.fuzzySearchMinScore": {
          "type": "number",
          "default": 0.3,
          "markdownDescription": "The minimum score (from 0 to 1) that fuzzy-matched abbreviation should achieve. Lower values may produce many false-positive matches, higher values may reduce possible matches."
        },
        "output.inlineBreak": {
          "type": "number",
          "default": 0,
          "markdownDescription": "The number of sibling inline elements needed for line breaks to be placed between those elements. If `0`, inline elements are always expanded onto a single line."
        },
        "output.reverseAttributes": {
          "type": "boolean",
          "default": false,
          "markdownDescription": "If `true`, reverses attribute merging directions when resolving snippets."
        },
        "output.selfClosingStyle": {
          "type": "string",
          "enum": [
            "html",
            "xhtml",
            "xml"
          ],
          "default": "html",
          "markdownDescription": "Style of self-closing tags: html (`<br>`), xml (`<br/>`) or xhtml (`<br />`)."
        },
        "css.color.short": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "If `true`, color values like `#f` will be expanded to `#fff` instead of `#ffffff`."
        }
      },
      "scope": 3,
      "source": {
        "id": "vscode.emmet",
        "displayName": "Emmet"
      },
      "defaultDefaultValue": {},
      "restricted": false
    },
    "emmet.showSuggestionsAsSnippets": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "If `true`, then Emmet suggestions will show up as snippets allowing you to order them as per `#editor.snippetSuggestions#` setting.",
      "scope": 3,
      "source": {
        "id": "vscode.emmet",
        "displayName": "Emmet"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "emmet.optimizeStylesheetParsing": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When set to `false`, the whole file is parsed to determine if current position is valid for expanding Emmet abbreviations. When set to `true`, only the content around the current position in CSS/SCSS/Less files is parsed.",
      "scope": 3,
      "source": {
        "id": "vscode.emmet",
        "displayName": "Emmet"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "git.autoRepositoryDetection": {
      "type": [
        "boolean",
        "string"
      ],
      "enum": [
        true,
        false,
        "subFolders",
        "openEditors"
      ],
      "enumDescriptions": [
        "Scan for both subfolders of the current opened folder and parent folders of open files.",
        "Disable automatic repository scanning.",
        "Scan for subfolders of the currently opened folder.",
        "Scan for parent folders of open files."
      ],
      "description": "Configures when repositories should be automatically detected.",
      "default": true,
      "scope": 3,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "git.autorefresh": {
      "type": "boolean",
      "description": "Whether auto refreshing is enabled.",
      "default": true,
      "scope": 3,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "git.branchValidationRegex": {
      "type": "string",
      "description": "A regular expression to validate new branch names.",
      "default": "",
      "scope": 3,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": "",
      "restricted": false
    },
    "git.branchWhitespaceChar": {
      "type": "string",
      "description": "The character to replace whitespace in new branch names, and to separate segments of a randomly generated branch name.",
      "default": "-",
      "scope": 3,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": "-",
      "restricted": false
    },
    "git.confirmSync": {
      "type": "boolean",
      "description": "Confirm before synchronizing git repositories.",
      "default": true,
      "scope": 3,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "git.checkoutType": {
      "type": "array",
      "items": {
        "type": "string",
        "enum": [
          "local",
          "tags",
          "remote"
        ],
        "enumDescriptions": [
          "Local branches",
          "Tags",
          "Remote branches"
        ]
      },
      "uniqueItems": true,
      "markdownDescription": "Controls what type of git refs are listed when running `Checkout to...`.",
      "default": [
        "local",
        "remote",
        "tags"
      ],
      "scope": 3,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": [
        "local",
        "remote",
        "tags"
      ],
      "restricted": false
    },
    "git.ignoreLegacyWarning": {
      "type": "boolean",
      "description": "Ignores the legacy Git warning.",
      "default": false,
      "scope": 3,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "git.ignoreMissingGitWarning": {
      "type": "boolean",
      "description": "Ignores the warning when Git is missing.",
      "default": false,
      "scope": 3,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "git.ignoreWindowsGit27Warning": {
      "type": "boolean",
      "description": "Ignores the warning when Git 2.25 - 2.26 is installed on Windows.",
      "default": false,
      "scope": 3,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "git.ignoreLimitWarning": {
      "type": "boolean",
      "description": "Ignores the warning when there are too many changes in a repository.",
      "default": false,
      "scope": 3,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "git.ignoreRebaseWarning": {
      "type": "boolean",
      "description": "Ignores the warning when it looks like the branch might have been rebased when pulling.",
      "default": false,
      "scope": 3,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "git.useEditorAsCommitInput": {
      "type": "boolean",
      "description": "Controls whether a full text editor will be used to author commit messages, whenever no message is provided in the commit input box.",
      "default": true,
      "scope": 3,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "git.decorations.enabled": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether Git contributes colors and badges to the Explorer and the Open Editors view.",
      "scope": 3,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "git.openAfterClone": {
      "type": "string",
      "enum": [
        "always",
        "alwaysNewWindow",
        "whenNoFolderOpen",
        "prompt"
      ],
      "enumDescriptions": [
        "Always open in current window.",
        "Always open in a new window.",
        "Only open in current window when no folder is opened.",
        "Always prompt for action."
      ],
      "default": "prompt",
      "description": "Controls whether to open a repository automatically after cloning.",
      "scope": 3,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": "prompt",
      "restricted": false
    },
    "git.showInlineOpenFileAction": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether to show an inline Open File action in the Git changes view.",
      "scope": 3,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "git.showPushSuccessNotification": {
      "type": "boolean",
      "description": "Controls whether to show a notification when a push is successful.",
      "default": false,
      "scope": 3,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "git.inputValidation": {
      "type": "string",
      "enum": [
        "always",
        "warn",
        "off"
      ],
      "default": "warn",
      "description": "Controls when to show commit message input validation.",
      "scope": 3,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": "warn",
      "restricted": false
    },
    "git.inputValidationLength": {
      "type": "number",
      "default": 72,
      "description": "Controls the commit message length threshold for showing a warning.",
      "scope": 3,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": 72,
      "restricted": false
    },
    "git.inputValidationSubjectLength": {
      "type": [
        "number",
        "null"
      ],
      "default": 50,
      "description": "Controls the commit message subject length threshold for showing a warning. Unset it to inherit the value of `config.inputValidationLength`.",
      "scope": 3,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": 50,
      "restricted": false
    },
    "git.ignoredRepositories": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "default": [],
      "scope": 3,
      "description": "List of git repositories to ignore.",
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "git.allowForcePush": {
      "type": "boolean",
      "default": false,
      "description": "Controls whether force push (with or without lease) is enabled.",
      "scope": 3,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "git.useForcePushWithLease": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether force pushing uses the safer force-with-lease variant.",
      "scope": 3,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "git.confirmForcePush": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether to ask for confirmation before force-pushing.",
      "scope": 3,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "git.allowNoVerifyCommit": {
      "type": "boolean",
      "default": false,
      "description": "Controls whether commits without running pre-commit and commit-msg hooks are allowed.",
      "scope": 3,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "git.confirmNoVerifyCommit": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether to ask for confirmation before committing without verification.",
      "scope": 3,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "git.branchSortOrder": {
      "type": "string",
      "enum": [
        "committerdate",
        "alphabetically"
      ],
      "default": "committerdate",
      "description": "Controls the sort order for branches.",
      "scope": 3,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": "committerdate",
      "restricted": false
    },
    "git.terminalAuthentication": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether to enable VS Code to be the authentication handler for Git processes spawned in the Integrated Terminal. Note: Terminals need to be restarted to pick up a change in this setting.",
      "scope": 3,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "git.terminalGitEditor": {
      "type": "boolean",
      "default": false,
      "description": "Controls whether to enable VS Code to be the Git editor for Git processes spawned in the integrated terminal. Note: Terminals need to be restarted to pick up a change in this setting.",
      "scope": 3,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "git.useIntegratedAskPass": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether GIT_ASKPASS should be overwritten to use the integrated version.",
      "scope": 3,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "git.githubAuthentication": {
      "deprecationMessage": "This setting is now deprecated, please use `github.gitAuthentication` instead.",
      "scope": 3,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "default": null,
      "restricted": false
    },
    "git.timeline.date": {
      "type": "string",
      "enum": [
        "committed",
        "authored"
      ],
      "enumDescriptions": [
        "Use the committed date",
        "Use the authored date"
      ],
      "default": "committed",
      "description": "Controls which date to use for items in the Timeline view.",
      "scope": 3,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": "committed",
      "restricted": false
    },
    "git.timeline.showAuthor": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether to show the commit author in the Timeline view.",
      "scope": 3,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "git.timeline.showUncommitted": {
      "type": "boolean",
      "default": false,
      "description": "Controls whether to show uncommitted changes in the Timeline view.",
      "scope": 3,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "git.commandsToLog": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "default": [],
      "markdownDescription": "List of git commands (ex: commit, push) that would have their `stdout` logged to the [git output](command:git.showOutput). If the git command has a client-side hook configured, the client-side hook's `stdout` will also be logged to the [git output](command:git.showOutput).",
      "scope": 3,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "git.mergeEditor": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Open the merge editor for files that are currently under conflict.",
      "scope": 3,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "github.gitProtocol": {
      "type": "string",
      "enum": [
        "https",
        "ssh"
      ],
      "default": "https",
      "description": "Controls which protocol is used to clone a GitHub repository",
      "scope": 3,
      "source": {
        "id": "vscode.github",
        "displayName": "GitHub"
      },
      "defaultDefaultValue": "https",
      "restricted": false
    },
    "github-enterprise.uri": {
      "type": "string",
      "description": "GitHub Enterprise Server URI",
      "scope": 3,
      "source": {
        "id": "vscode.github-authentication",
        "displayName": "GitHub Authentication"
      },
      "default": "",
      "restricted": true
    },
    "html.format.enable": {
      "type": "boolean",
      "scope": 3,
      "default": true,
      "description": "Enable/disable default HTML formatter.",
      "source": {
        "id": "vscode.html-language-features",
        "displayName": "HTML Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "html.trace.server": {
      "type": "string",
      "scope": 3,
      "enum": [
        "off",
        "messages",
        "verbose"
      ],
      "default": "off",
      "description": "Traces the communication between VS Code and the HTML language server.",
      "source": {
        "id": "vscode.html-language-features",
        "displayName": "HTML Language Features"
      },
      "defaultDefaultValue": "off",
      "restricted": false
    },
    "json.validate.enable": {
      "type": "boolean",
      "scope": 3,
      "default": true,
      "description": "Enable/disable JSON validation.",
      "source": {
        "id": "vscode.json-language-features",
        "displayName": "JSON Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "json.format.enable": {
      "type": "boolean",
      "scope": 3,
      "default": true,
      "description": "Enable/disable default JSON formatter",
      "source": {
        "id": "vscode.json-language-features",
        "displayName": "JSON Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "json.format.keepLines": {
      "type": "boolean",
      "scope": 3,
      "default": false,
      "description": "Keep all existing new lines when formatting.",
      "source": {
        "id": "vscode.json-language-features",
        "displayName": "JSON Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "json.trace.server": {
      "type": "string",
      "scope": 3,
      "enum": [
        "off",
        "messages",
        "verbose"
      ],
      "default": "off",
      "description": "Traces the communication between VS Code and the JSON language server.",
      "source": {
        "id": "vscode.json-language-features",
        "displayName": "JSON Language Features"
      },
      "defaultDefaultValue": "off",
      "restricted": false
    },
    "json.colorDecorators.enable": {
      "type": "boolean",
      "scope": 3,
      "default": true,
      "description": "Enables or disables color decorators",
      "deprecationMessage": "The setting `json.colorDecorators.enable` has been deprecated in favor of `editor.colorDecorators`.",
      "source": {
        "id": "vscode.json-language-features",
        "displayName": "JSON Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "json.maxItemsComputed": {
      "type": "number",
      "default": 5000,
      "description": "The maximum number of outline symbols and folding regions computed (limited for performance reasons).",
      "scope": 3,
      "source": {
        "id": "vscode.json-language-features",
        "displayName": "JSON Language Features"
      },
      "defaultDefaultValue": 5000,
      "restricted": false
    },
    "json.schemaDownload.enable": {
      "type": "boolean",
      "default": true,
      "description": "When enabled, JSON schemas can be fetched from http and https locations.",
      "tags": [
        "usesOnlineServices"
      ],
      "scope": 3,
      "source": {
        "id": "vscode.json-language-features",
        "displayName": "JSON Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "markdown.trace.extension": {
      "type": "string",
      "enum": [
        "off",
        "verbose"
      ],
      "default": "off",
      "description": "Enable debug logging for the Markdown extension.",
      "scope": 3,
      "source": {
        "id": "vscode.markdown-language-features",
        "displayName": "Markdown Language Features"
      },
      "defaultDefaultValue": "off",
      "restricted": false
    },
    "markdown.trace.server": {
      "type": "string",
      "scope": 3,
      "enum": [
        "off",
        "messages",
        "verbose"
      ],
      "default": "off",
      "description": "Traces the communication between VS Code and the Markdown language server.",
      "source": {
        "id": "vscode.markdown-language-features",
        "displayName": "Markdown Language Features"
      },
      "defaultDefaultValue": "off",
      "restricted": false
    },
    "markdown.updateLinksOnFileMove.enabled": {
      "type": "string",
      "enum": [
        "prompt",
        "always",
        "never"
      ],
      "markdownEnumDescriptions": [
        "Prompt on each file move.",
        "Always update links automatically.",
        "Never try to update link and don't prompt."
      ],
      "default": "never",
      "markdownDescription": "Try to update links in Markdown files when a file is renamed/moved in the workspace. Use `#markdown.updateLinksOnFileMove.include#` to configure which files trigger link updates.",
      "scope": 3,
      "source": {
        "id": "vscode.markdown-language-features",
        "displayName": "Markdown Language Features"
      },
      "defaultDefaultValue": "never",
      "restricted": false
    },
    "markdown.updateLinksOnFileMove.include": {
      "type": "array",
      "markdownDescription": "Glob patterns that specifies files that trigger automatic link updates. See `#markdown.updateLinksOnFileMove.enabled#` for details about this feature.",
      "scope": 3,
      "items": {
        "type": "string",
        "description": "The glob pattern to match file paths against. Set to true to enable the pattern."
      },
      "default": [
        "**/*.{md,mkd,mdwn,mdown,markdown,markdn,mdtxt,mdtext,workbook}",
        "**/*.{jpg,jpe,jpeg,png,bmp,gif,ico,webp,avif,tiff,svg,mp4}"
      ],
      "source": {
        "id": "vscode.markdown-language-features",
        "displayName": "Markdown Language Features"
      },
      "defaultDefaultValue": [
        "**/*.{md,mkd,mdwn,mdown,markdown,markdn,mdtxt,mdtext,workbook}",
        "**/*.{jpg,jpe,jpeg,png,bmp,gif,ico,webp,avif,tiff,svg,mp4}"
      ],
      "restricted": false
    },
    "markdown.updateLinksOnFileMove.enableForDirectories": {
      "type": "boolean",
      "default": true,
      "description": "Enable updating links when a directory is moved or renamed in the workspace.",
      "scope": 3,
      "source": {
        "id": "vscode.markdown-language-features",
        "displayName": "Markdown Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "markdown.experimental.copyFiles.destination": {
      "type": "object",
      "markdownDescription": "Defines where files copied into a Markdown document should be created. This is a map from globs that match on the Markdown document to destinations.\n\nThe destinations may use the following variables:\n\n- `${documentFileName}` — The full filename of the Markdown document, for example `readme.md`.\n- `${documentBaseName}` — The basename of Markdown document, for example `readme`.\n- `${documentExtName}` — The extension of the Markdown document, for example `md`.\n- `${documentDirName}` — The name of the Markdown document's parent directory.\n- `${documentWorkspaceFolder}` — The workspace folder for the Markdown document, for examples, `/Users/me/myProject`. This is the same as `${documentDirName}` if the file is not part of in a workspace.\n- `${fileName}` — The file name of the dropped file, for example `image.png`.",
      "additionalProperties": {
        "type": "string"
      },
      "scope": 3,
      "source": {
        "id": "vscode.markdown-language-features",
        "displayName": "Markdown Language Features"
      },
      "default": {},
      "restricted": false
    },
    "markdown.preferredMdPathExtensionStyle": {
      "type": "string",
      "default": "auto",
      "markdownDescription": "Controls if file extensions (e.g. `.md`) are added or not for links to Markdown files. This setting is used when file paths are added by tooling such as path completions or file renames.",
      "enum": [
        "auto",
        "includeExtension",
        "removeExtension"
      ],
      "markdownEnumDescriptions": [
        "For existing paths, try to maintain the file extension style. For new paths, add file extensions.",
        "Prefer including the file extension. For example, path completions to a file named `file.md` will insert `file.md`.",
        "Prefer removing the file extension. For example, path completions to a file named `file.md` will insert `file` without the `.md`."
      ],
      "scope": 3,
      "source": {
        "id": "vscode.markdown-language-features",
        "displayName": "Markdown Language Features"
      },
      "defaultDefaultValue": "auto",
      "restricted": false
    },
    "markdown.math.enabled": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable rendering math in the built-in Markdown preview.",
      "scope": 3,
      "source": {
        "id": "vscode.markdown-math",
        "displayName": "Markdown Math"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "merge-conflict.codeLens.enabled": {
      "type": "boolean",
      "description": "Create a CodeLens for merge conflict blocks within editor.",
      "default": true,
      "scope": 3,
      "source": {
        "id": "vscode.merge-conflict",
        "displayName": "Merge Conflict"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "merge-conflict.decorators.enabled": {
      "type": "boolean",
      "description": "Create decorators for merge conflict blocks within editor.",
      "default": true,
      "scope": 3,
      "source": {
        "id": "vscode.merge-conflict",
        "displayName": "Merge Conflict"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "merge-conflict.autoNavigateNextConflict.enabled": {
      "type": "boolean",
      "description": "Whether to automatically navigate to the next merge conflict after resolving a merge conflict.",
      "default": false,
      "scope": 3,
      "source": {
        "id": "vscode.merge-conflict",
        "displayName": "Merge Conflict"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "merge-conflict.diffViewPosition": {
      "type": "string",
      "enum": [
        "Current",
        "Beside",
        "Below"
      ],
      "description": "Controls where the diff view should be opened when comparing changes in merge conflicts.",
      "enumDescriptions": [
        "Open the diff view in the current editor group.",
        "Open the diff view next to the current editor group.",
        "Open the diff view below the current editor group."
      ],
      "default": "Current",
      "scope": 3,
      "source": {
        "id": "vscode.merge-conflict",
        "displayName": "Merge Conflict"
      },
      "defaultDefaultValue": "Current",
      "restricted": false
    },
    "debug.javascript.codelens.npmScripts": {
      "enum": [
        "top",
        "all",
        "never"
      ],
      "default": "top",
      "description": "Where a \"Run\" and \"Debug\" code lens should be shown in your npm scripts. It may be on \"all\", scripts, on \"top\" of the script section, or \"never\".",
      "scope": 3,
      "source": {
        "id": "ms-vscode.js-debug",
        "displayName": "JavaScript Debugger"
      },
      "defaultDefaultValue": "top",
      "restricted": false
    },
    "debug.javascript.terminalOptions": {
      "type": "object",
      "description": "Default launch options for the JavaScript debug terminal and npm scripts.",
      "default": {},
      "properties": {
        "resolveSourceMapLocations": {
          "type": [
            "array",
            "null"
          ],
          "description": "A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.",
          "default": [
            "${workspaceFolder}/**",
            "!**/node_modules/**"
          ],
          "items": {
            "type": "string"
          }
        },
        "outFiles": {
          "type": [
            "array"
          ],
          "description": "If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.",
          "default": [
            "${workspaceFolder}/**/*.js",
            "!**/node_modules/**"
          ],
          "items": {
            "type": "string"
          }
        },
        "pauseForSourceMap": {
          "type": "boolean",
          "markdownDescription": "Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.",
          "default": false
        },
        "showAsyncStacks": {
          "description": "Show the async calls that led to the current call stack.",
          "default": true,
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "type": "object",
              "required": [
                "onAttach"
              ],
              "properties": {
                "onAttach": {
                  "type": "number",
                  "default": 32
                }
              }
            },
            {
              "type": "object",
              "required": [
                "onceBreakpointResolved"
              ],
              "properties": {
                "onceBreakpointResolved": {
                  "type": "number",
                  "default": 32
                }
              }
            }
          ]
        },
        "skipFiles": {
          "type": "array",
          "description": "An array of file or folder names, or path globs, to skip when debugging. Star patterns and negations are allowed, for example, `[\"**/node_modules/**\", \"!**/node_modules/my-module/**\"]`",
          "default": [
            "<node_internals>/**"
          ]
        },
        "smartStep": {
          "type": "boolean",
          "description": "Automatically step through generated code that cannot be mapped back to the original source.",
          "default": true
        },
        "sourceMaps": {
          "type": "boolean",
          "description": "Use JavaScript source maps (if they exist).",
          "default": true
        },
        "sourceMapRenames": {
          "type": "boolean",
          "default": true,
          "description": "Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers."
        },
        "sourceMapPathOverrides": {
          "type": "object",
          "description": "A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.",
          "default": {
            "webpack://?:*/*": "${workspaceFolder}/*",
            "webpack:///./~/*": "${workspaceFolder}/node_modules/*",
            "meteor://💻app/*": "${workspaceFolder}/*"
          }
        },
        "timeout": {
          "type": "number",
          "description": "Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.",
          "default": 10000
        },
        "timeouts": {
          "type": "object",
          "description": "Timeouts for several debugger operations.",
          "default": {},
          "properties": {
            "sourceMapMinPause": {
              "type": "number",
              "description": "Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed",
              "default": 1000
            },
            "sourceMapCumulativePause": {
              "type": "number",
              "description": "Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted",
              "default": 1000
            },
            "hoverEvaluation": {
              "type": "number",
              "description": "Time until value evaluation for hovered symbols is aborted. If set to 0, hover evaluation does never time out.",
              "default": 500
            }
          },
          "additionalProperties": false,
          "markdownDescription": "Timeouts for several debugger operations."
        },
        "trace": {
          "description": "Configures what diagnostic output is produced.",
          "default": true,
          "oneOf": [
            {
              "type": "boolean",
              "description": "Trace may be set to 'true' to write diagnostic logs to the disk."
            },
            {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "stdio": {
                  "type": "boolean",
                  "description": "Whether to return trace data from the launched application or browser."
                },
                "logFile": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "Configures where on disk logs are written."
                }
              }
            }
          ]
        },
        "outputCapture": {
          "enum": [
            "console",
            "std"
          ],
          "markdownDescription": "From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`.",
          "default": "console"
        },
        "enableContentValidation": {
          "default": true,
          "type": "boolean",
          "description": "Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example."
        },
        "customDescriptionGenerator": {
          "type": "string",
          "description": "Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      "
        },
        "customPropertiesGenerator": {
          "type": "string",
          "deprecated": true,
          "description": "Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181"
        },
        "cascadeTerminateToConfigurations": {
          "type": "array",
          "items": {
            "type": "string",
            "uniqueItems": true
          },
          "default": [],
          "description": "A list of debug sessions which, when this debug session is terminated, will also be stopped."
        },
        "cwd": {
          "type": "string",
          "description": "Absolute path to the working directory of the program being debugged. If you've set localRoot then cwd will match that value otherwise it falls back to your workspaceFolder",
          "default": "${workspaceFolder}",
          "docDefault": "localRoot || ${workspaceFolder}"
        },
        "localRoot": {
          "type": [
            "string",
            "null"
          ],
          "description": "Path to the local directory containing the program.",
          "default": null
        },
        "remoteRoot": {
          "type": [
            "string",
            "null"
          ],
          "description": "Absolute path to the remote directory containing the program.",
          "default": null
        },
        "autoAttachChildProcesses": {
          "type": "boolean",
          "description": "Attach debugger to new child processes automatically.",
          "default": true
        },
        "env": {
          "type": "object",
          "additionalProperties": {
            "type": [
              "string",
              "null"
            ]
          },
          "markdownDescription": "Environment variables passed to the program. The value `null` removes the variable from the environment.",
          "default": {}
        },
        "envFile": {
          "type": "string",
          "description": "Absolute path to a file containing environment variable definitions.",
          "default": "${workspaceFolder}/.env"
        },
        "runtimeSourcemapPausePatterns": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "markdownDescription": "A list of patterns at which to manually insert entrypoint breakpoints. This can be useful to give the debugger an opportunity to set breakpoints when using sourcemaps that don't exist or can't be detected before launch, such as [with the Serverless framework](https://github.com/microsoft/vscode-js-debug/issues/492).",
          "default": []
        },
        "nodeVersionHint": {
          "type": "number",
          "minimum": 8,
          "description": "Allows you to explicitly specify the Node version that's running, which can be used to disable or enable certain behaviors in cases where the automatic version detection does not work.",
          "default": 12
        },
        "enableTurboSourcemaps": {
          "type": "boolean",
          "default": true,
          "description": "Configures whether to use a new, faster mechanism for sourcemap discovery"
        },
        "command": {
          "type": [
            "string",
            "null"
          ],
          "description": "Command to run in the launched terminal. If not provided, the terminal will open without launching a program.",
          "default": "npm start"
        }
      },
      "scope": 3,
      "source": {
        "id": "ms-vscode.js-debug",
        "displayName": "JavaScript Debugger"
      },
      "defaultDefaultValue": {},
      "restricted": false
    },
    "debug.javascript.automaticallyTunnelRemoteServer": {
      "type": "boolean",
      "description": "When debugging a remote web app, configures whether to automatically tunnel the remote server to your local machine.",
      "default": true,
      "scope": 3,
      "source": {
        "id": "ms-vscode.js-debug",
        "displayName": "JavaScript Debugger"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "debug.javascript.debugByLinkOptions": {
      "default": "on",
      "description": "Options used when debugging open links clicked from inside the JavaScript Debug Terminal. Can be set to \"off\" to disable this behavior, or \"always\" to enable debugging in all terminals.",
      "oneOf": [
        {
          "type": "string",
          "enum": [
            "on",
            "off",
            "always"
          ]
        },
        {
          "type": "object",
          "properties": {
            "resolveSourceMapLocations": {
              "type": [
                "array",
                "null"
              ],
              "description": "A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.",
              "default": null,
              "items": {
                "type": "string"
              }
            },
            "outFiles": {
              "type": [
                "array"
              ],
              "description": "If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.",
              "default": [
                "${workspaceFolder}/**/*.js",
                "!**/node_modules/**"
              ],
              "items": {
                "type": "string"
              }
            },
            "pauseForSourceMap": {
              "type": "boolean",
              "markdownDescription": "Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.",
              "default": false
            },
            "showAsyncStacks": {
              "description": "Show the async calls that led to the current call stack.",
              "default": true,
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "object",
                  "required": [
                    "onAttach"
                  ],
                  "properties": {
                    "onAttach": {
                      "type": "number",
                      "default": 32
                    }
                  }
                },
                {
                  "type": "object",
                  "required": [
                    "onceBreakpointResolved"
                  ],
                  "properties": {
                    "onceBreakpointResolved": {
                      "type": "number",
                      "default": 32
                    }
                  }
                }
              ]
            },
            "skipFiles": {
              "type": "array",
              "description": "An array of file or folder names, or path globs, to skip when debugging. Star patterns and negations are allowed, for example, `[\"**/node_modules/**\", \"!**/node_modules/my-module/**\"]`",
              "default": [
                "<node_internals>/**"
              ]
            },
            "smartStep": {
              "type": "boolean",
              "description": "Automatically step through generated code that cannot be mapped back to the original source.",
              "default": true
            },
            "sourceMaps": {
              "type": "boolean",
              "description": "Use JavaScript source maps (if they exist).",
              "default": true
            },
            "sourceMapRenames": {
              "type": "boolean",
              "default": true,
              "description": "Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers."
            },
            "sourceMapPathOverrides": {
              "type": "object",
              "description": "A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.",
              "default": {
                "webpack://?:*/*": "${workspaceFolder}/*",
                "webpack:///./~/*": "${workspaceFolder}/node_modules/*",
                "meteor://💻app/*": "${workspaceFolder}/*"
              }
            },
            "timeout": {
              "type": "number",
              "description": "Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.",
              "default": 10000
            },
            "timeouts": {
              "type": "object",
              "description": "Timeouts for several debugger operations.",
              "default": {},
              "properties": {
                "sourceMapMinPause": {
                  "type": "number",
                  "description": "Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed",
                  "default": 1000
                },
                "sourceMapCumulativePause": {
                  "type": "number",
                  "description": "Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted",
                  "default": 1000
                },
                "hoverEvaluation": {
                  "type": "number",
                  "description": "Time until value evaluation for hovered symbols is aborted. If set to 0, hover evaluation does never time out.",
                  "default": 500
                }
              },
              "additionalProperties": false,
              "markdownDescription": "Timeouts for several debugger operations."
            },
            "trace": {
              "description": "Configures what diagnostic output is produced.",
              "default": true,
              "oneOf": [
                {
                  "type": "boolean",
                  "description": "Trace may be set to 'true' to write diagnostic logs to the disk."
                },
                {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "stdio": {
                      "type": "boolean",
                      "description": "Whether to return trace data from the launched application or browser."
                    },
                    "logFile": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "Configures where on disk logs are written."
                    }
                  }
                }
              ]
            },
            "outputCapture": {
              "enum": [
                "console",
                "std"
              ],
              "markdownDescription": "From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`.",
              "default": "console"
            },
            "enableContentValidation": {
              "default": true,
              "type": "boolean",
              "description": "Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example."
            },
            "customDescriptionGenerator": {
              "type": "string",
              "description": "Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      "
            },
            "customPropertiesGenerator": {
              "type": "string",
              "deprecated": true,
              "description": "Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181"
            },
            "cascadeTerminateToConfigurations": {
              "type": "array",
              "items": {
                "type": "string",
                "uniqueItems": true
              },
              "default": [],
              "description": "A list of debug sessions which, when this debug session is terminated, will also be stopped."
            },
            "disableNetworkCache": {
              "type": "boolean",
              "description": "Controls whether to skip the network cache for each request",
              "default": true
            },
            "pathMapping": {
              "type": "object",
              "description": "A mapping of URLs/paths to local folders, to resolve scripts in the Browser to scripts on disk",
              "default": {}
            },
            "webRoot": {
              "type": "string",
              "description": "This specifies the workspace absolute path to the webserver root. Used to resolve paths like `/app.js` to files on disk. Shorthand for a pathMapping for \"/\"",
              "default": "${workspaceFolder}"
            },
            "urlFilter": {
              "type": "string",
              "description": "Will search for a page with this url and attach to it, if found. Can have * wildcards.",
              "default": ""
            },
            "url": {
              "type": "string",
              "description": "Will search for a tab with this exact url and attach to it, if found",
              "default": "http://localhost:8080"
            },
            "inspectUri": {
              "type": [
                "string",
                "null"
              ],
              "description": "Format to use to rewrite the inspectUri: It's a template string that interpolates keys in `{curlyBraces}`. Available keys are:\n - `url.*` is the parsed address of the running application. For instance, `{url.port}`, `{url.hostname}`\n - `port` is the debug port that Chrome is listening on.\n - `browserInspectUri` is the inspector URI on the launched browser\n - `browserInspectUriPath` is the path part of the inspector URI on the launched browser (e.g.: \"/devtools/browser/e9ec0098-306e-472a-8133-5e42488929c2\").\n - `wsProtocol` is the hinted websocket protocol. This is set to `wss` if the original URL is `https`, or `ws` otherwise.\n",
              "default": null
            },
            "vueComponentPaths": {
              "type": "array",
              "description": "A list of file glob patterns to find `*.vue` components. By default, searches the entire workspace. This needs to be specified due to extra lookups that Vue's sourcemaps require in Vue CLI 4. You can disable this special handling by setting this to an empty array.",
              "default": [
                "${workspaceFolder}/**/*.vue"
              ]
            },
            "server": {
              "oneOf": [
                {
                  "type": "object",
                  "description": "Configures a web server to start up. Takes the same configuration as the 'node' launch task.",
                  "additionalProperties": false,
                  "default": {
                    "program": "node my-server.js"
                  },
                  "properties": {
                    "resolveSourceMapLocations": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "description": "A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.",
                      "default": [
                        "${workspaceFolder}/**",
                        "!**/node_modules/**"
                      ],
                      "items": {
                        "type": "string"
                      }
                    },
                    "outFiles": {
                      "type": [
                        "array"
                      ],
                      "description": "If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.",
                      "default": [
                        "${workspaceFolder}/**/*.js",
                        "!**/node_modules/**"
                      ],
                      "items": {
                        "type": "string"
                      }
                    },
                    "pauseForSourceMap": {
                      "type": "boolean",
                      "markdownDescription": "Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.",
                      "default": false
                    },
                    "showAsyncStacks": {
                      "description": "Show the async calls that led to the current call stack.",
                      "default": true,
                      "oneOf": [
                        {
                          "type": "boolean"
                        },
                        {
                          "type": "object",
                          "required": [
                            "onAttach"
                          ],
                          "properties": {
                            "onAttach": {
                              "type": "number",
                              "default": 32
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "onceBreakpointResolved"
                          ],
                          "properties": {
                            "onceBreakpointResolved": {
                              "type": "number",
                              "default": 32
                            }
                          }
                        }
                      ]
                    },
                    "skipFiles": {
                      "type": "array",
                      "description": "An array of file or folder names, or path globs, to skip when debugging. Star patterns and negations are allowed, for example, `[\"**/node_modules/**\", \"!**/node_modules/my-module/**\"]`",
                      "default": [
                        "<node_internals>/**"
                      ]
                    },
                    "smartStep": {
                      "type": "boolean",
                      "description": "Automatically step through generated code that cannot be mapped back to the original source.",
                      "default": true
                    },
                    "sourceMaps": {
                      "type": "boolean",
                      "description": "Use JavaScript source maps (if they exist).",
                      "default": true
                    },
                    "sourceMapRenames": {
                      "type": "boolean",
                      "default": true,
                      "description": "Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers."
                    },
                    "sourceMapPathOverrides": {
                      "type": "object",
                      "description": "A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.",
                      "default": {
                        "webpack://?:*/*": "${workspaceFolder}/*",
                        "webpack:///./~/*": "${workspaceFolder}/node_modules/*",
                        "meteor://💻app/*": "${workspaceFolder}/*"
                      }
                    },
                    "timeout": {
                      "type": "number",
                      "description": "Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.",
                      "default": 10000
                    },
                    "timeouts": {
                      "type": "object",
                      "description": "Timeouts for several debugger operations.",
                      "default": {},
                      "properties": {
                        "sourceMapMinPause": {
                          "type": "number",
                          "description": "Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed",
                          "default": 1000
                        },
                        "sourceMapCumulativePause": {
                          "type": "number",
                          "description": "Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted",
                          "default": 1000
                        },
                        "hoverEvaluation": {
                          "type": "number",
                          "description": "Time until value evaluation for hovered symbols is aborted. If set to 0, hover evaluation does never time out.",
                          "default": 500
                        }
                      },
                      "additionalProperties": false,
                      "markdownDescription": "Timeouts for several debugger operations."
                    },
                    "trace": {
                      "description": "Configures what diagnostic output is produced.",
                      "default": true,
                      "oneOf": [
                        {
                          "type": "boolean",
                          "description": "Trace may be set to 'true' to write diagnostic logs to the disk."
                        },
                        {
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "stdio": {
                              "type": "boolean",
                              "description": "Whether to return trace data from the launched application or browser."
                            },
                            "logFile": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "description": "Configures where on disk logs are written."
                            }
                          }
                        }
                      ]
                    },
                    "outputCapture": {
                      "enum": [
                        "console",
                        "std"
                      ],
                      "markdownDescription": "From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`.",
                      "default": "console"
                    },
                    "enableContentValidation": {
                      "default": true,
                      "type": "boolean",
                      "description": "Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example."
                    },
                    "customDescriptionGenerator": {
                      "type": "string",
                      "description": "Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      "
                    },
                    "customPropertiesGenerator": {
                      "type": "string",
                      "deprecated": true,
                      "description": "Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181"
                    },
                    "cascadeTerminateToConfigurations": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "uniqueItems": true
                      },
                      "default": [],
                      "description": "A list of debug sessions which, when this debug session is terminated, will also be stopped."
                    },
                    "cwd": {
                      "type": "string",
                      "description": "Absolute path to the working directory of the program being debugged. If you've set localRoot then cwd will match that value otherwise it falls back to your workspaceFolder",
                      "default": "${workspaceFolder}"
                    },
                    "localRoot": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "Path to the local directory containing the program.",
                      "default": null
                    },
                    "remoteRoot": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "Absolute path to the remote directory containing the program.",
                      "default": null
                    },
                    "autoAttachChildProcesses": {
                      "type": "boolean",
                      "description": "Attach debugger to new child processes automatically.",
                      "default": true
                    },
                    "env": {
                      "type": "object",
                      "additionalProperties": {
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "markdownDescription": "Environment variables passed to the program. The value `null` removes the variable from the environment.",
                      "default": {}
                    },
                    "envFile": {
                      "type": "string",
                      "description": "Absolute path to a file containing environment variable definitions.",
                      "default": "${workspaceFolder}/.env"
                    },
                    "runtimeSourcemapPausePatterns": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "markdownDescription": "A list of patterns at which to manually insert entrypoint breakpoints. This can be useful to give the debugger an opportunity to set breakpoints when using sourcemaps that don't exist or can't be detected before launch, such as [with the Serverless framework](https://github.com/microsoft/vscode-js-debug/issues/492).",
                      "default": []
                    },
                    "nodeVersionHint": {
                      "type": "number",
                      "minimum": 8,
                      "description": "Allows you to explicitly specify the Node version that's running, which can be used to disable or enable certain behaviors in cases where the automatic version detection does not work.",
                      "default": 12
                    },
                    "enableTurboSourcemaps": {
                      "type": "boolean",
                      "default": true,
                      "description": "Configures whether to use a new, faster mechanism for sourcemap discovery"
                    },
                    "program": {
                      "type": "string",
                      "description": "Absolute path to the program. Generated value is guessed by looking at package.json and opened files. Edit this attribute.",
                      "default": ""
                    },
                    "stopOnEntry": {
                      "type": [
                        "boolean",
                        "string"
                      ],
                      "description": "Automatically stop program after launch.",
                      "default": true
                    },
                    "console": {
                      "type": "string",
                      "enum": [
                        "internalConsole",
                        "integratedTerminal",
                        "externalTerminal"
                      ],
                      "enumDescriptions": [
                        "VS Code Debug Console (which doesn't support to read input from a program)",
                        "VS Code's integrated terminal",
                        "External terminal that can be configured via user settings"
                      ],
                      "description": "Where to launch the debug target.",
                      "default": "internalConsole"
                    },
                    "args": {
                      "type": [
                        "array",
                        "string"
                      ],
                      "description": "Command line arguments passed to the program.\n\nCan be an array of strings or a single string. When the program is launched in a terminal, setting this property to a single string will result in the arguments not being escaped for the shell.",
                      "items": {
                        "type": "string"
                      },
                      "default": []
                    },
                    "restart": {
                      "description": "Try to reconnect to the program if we lose connection. If set to `true`, we'll try once a second, forever. You can customize the interval and maximum number of attempts by specifying the `delay` and `maxAttempts` in an object instead.",
                      "default": true,
                      "oneOf": [
                        {
                          "type": "boolean"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "delay": {
                              "type": "number",
                              "minimum": 0,
                              "default": 1000
                            },
                            "maxAttempts": {
                              "type": "number",
                              "minimum": 0,
                              "default": 10
                            }
                          }
                        }
                      ]
                    },
                    "runtimeExecutable": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "markdownDescription": "Runtime to use. Either an absolute path or the name of a runtime available on the PATH. If omitted `node` is assumed.",
                      "default": "node"
                    },
                    "runtimeVersion": {
                      "type": "string",
                      "markdownDescription": "Version of `node` runtime to use. Requires `nvm`.",
                      "default": "default"
                    },
                    "runtimeArgs": {
                      "type": "array",
                      "description": "Optional arguments passed to the runtime executable.",
                      "items": {
                        "type": "string"
                      },
                      "default": []
                    },
                    "profileStartup": {
                      "type": "boolean",
                      "description": "If true, will start profiling as soon as the process launches",
                      "default": true
                    },
                    "attachSimplePort": {
                      "type": "integer",
                      "description": "If set, attaches to the process via the given port. This is generally no longer necessary for Node.js programs and loses the ability to debug child processes, but can be useful in more esoteric scenarios such as with Deno and Docker launches. If set to 0, a random port will be chosen and --inspect-brk added to the launch arguments automatically.",
                      "default": 9229
                    },
                    "killBehavior": {
                      "type": "string",
                      "enum": [
                        "forceful",
                        "polite",
                        "none"
                      ],
                      "default": "forceful",
                      "markdownDescription": "Configures how debug processes are killed when stopping the session. Can be:\n\n- forceful (default): forcefully tears down the process tree. Sends SIGKILL on posix, or `taskkill.exe /F` on Windows.\n- polite: gracefully tears down the process tree. It's possible that misbehaving processes continue to run after shutdown in this way. Sends SIGTERM on posix, or `taskkill.exe` with no `/F` (force) flag on Windows.\n- none: no termination will happen."
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "JavaScript Debug Terminal",
                  "additionalProperties": false,
                  "default": {
                    "program": "npm start"
                  },
                  "properties": {
                    "resolveSourceMapLocations": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "description": "A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.",
                      "default": [
                        "${workspaceFolder}/**",
                        "!**/node_modules/**"
                      ],
                      "items": {
                        "type": "string"
                      }
                    },
                    "outFiles": {
                      "type": [
                        "array"
                      ],
                      "description": "If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.",
                      "default": [
                        "${workspaceFolder}/**/*.js",
                        "!**/node_modules/**"
                      ],
                      "items": {
                        "type": "string"
                      }
                    },
                    "pauseForSourceMap": {
                      "type": "boolean",
                      "markdownDescription": "Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.",
                      "default": false
                    },
                    "showAsyncStacks": {
                      "description": "Show the async calls that led to the current call stack.",
                      "default": true,
                      "oneOf": [
                        {
                          "type": "boolean"
                        },
                        {
                          "type": "object",
                          "required": [
                            "onAttach"
                          ],
                          "properties": {
                            "onAttach": {
                              "type": "number",
                              "default": 32
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "onceBreakpointResolved"
                          ],
                          "properties": {
                            "onceBreakpointResolved": {
                              "type": "number",
                              "default": 32
                            }
                          }
                        }
                      ]
                    },
                    "skipFiles": {
                      "type": "array",
                      "description": "An array of file or folder names, or path globs, to skip when debugging. Star patterns and negations are allowed, for example, `[\"**/node_modules/**\", \"!**/node_modules/my-module/**\"]`",
                      "default": [
                        "<node_internals>/**"
                      ]
                    },
                    "smartStep": {
                      "type": "boolean",
                      "description": "Automatically step through generated code that cannot be mapped back to the original source.",
                      "default": true
                    },
                    "sourceMaps": {
                      "type": "boolean",
                      "description": "Use JavaScript source maps (if they exist).",
                      "default": true
                    },
                    "sourceMapRenames": {
                      "type": "boolean",
                      "default": true,
                      "description": "Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers."
                    },
                    "sourceMapPathOverrides": {
                      "type": "object",
                      "description": "A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.",
                      "default": {
                        "webpack://?:*/*": "${workspaceFolder}/*",
                        "webpack:///./~/*": "${workspaceFolder}/node_modules/*",
                        "meteor://💻app/*": "${workspaceFolder}/*"
                      }
                    },
                    "timeout": {
                      "type": "number",
                      "description": "Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.",
                      "default": 10000
                    },
                    "timeouts": {
                      "type": "object",
                      "description": "Timeouts for several debugger operations.",
                      "default": {},
                      "properties": {
                        "sourceMapMinPause": {
                          "type": "number",
                          "description": "Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed",
                          "default": 1000
                        },
                        "sourceMapCumulativePause": {
                          "type": "number",
                          "description": "Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted",
                          "default": 1000
                        },
                        "hoverEvaluation": {
                          "type": "number",
                          "description": "Time until value evaluation for hovered symbols is aborted. If set to 0, hover evaluation does never time out.",
                          "default": 500
                        }
                      },
                      "additionalProperties": false,
                      "markdownDescription": "Timeouts for several debugger operations."
                    },
                    "trace": {
                      "description": "Configures what diagnostic output is produced.",
                      "default": true,
                      "oneOf": [
                        {
                          "type": "boolean",
                          "description": "Trace may be set to 'true' to write diagnostic logs to the disk."
                        },
                        {
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "stdio": {
                              "type": "boolean",
                              "description": "Whether to return trace data from the launched application or browser."
                            },
                            "logFile": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "description": "Configures where on disk logs are written."
                            }
                          }
                        }
                      ]
                    },
                    "outputCapture": {
                      "enum": [
                        "console",
                        "std"
                      ],
                      "markdownDescription": "From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`.",
                      "default": "console"
                    },
                    "enableContentValidation": {
                      "default": true,
                      "type": "boolean",
                      "description": "Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example."
                    },
                    "customDescriptionGenerator": {
                      "type": "string",
                      "description": "Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      "
                    },
                    "customPropertiesGenerator": {
                      "type": "string",
                      "deprecated": true,
                      "description": "Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181"
                    },
                    "cascadeTerminateToConfigurations": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "uniqueItems": true
                      },
                      "default": [],
                      "description": "A list of debug sessions which, when this debug session is terminated, will also be stopped."
                    },
                    "cwd": {
                      "type": "string",
                      "description": "Absolute path to the working directory of the program being debugged. If you've set localRoot then cwd will match that value otherwise it falls back to your workspaceFolder",
                      "default": "${workspaceFolder}",
                      "docDefault": "localRoot || ${workspaceFolder}"
                    },
                    "localRoot": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "Path to the local directory containing the program.",
                      "default": null
                    },
                    "remoteRoot": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "Absolute path to the remote directory containing the program.",
                      "default": null
                    },
                    "autoAttachChildProcesses": {
                      "type": "boolean",
                      "description": "Attach debugger to new child processes automatically.",
                      "default": true
                    },
                    "env": {
                      "type": "object",
                      "additionalProperties": {
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "markdownDescription": "Environment variables passed to the program. The value `null` removes the variable from the environment.",
                      "default": {}
                    },
                    "envFile": {
                      "type": "string",
                      "description": "Absolute path to a file containing environment variable definitions.",
                      "default": "${workspaceFolder}/.env"
                    },
                    "runtimeSourcemapPausePatterns": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "markdownDescription": "A list of patterns at which to manually insert entrypoint breakpoints. This can be useful to give the debugger an opportunity to set breakpoints when using sourcemaps that don't exist or can't be detected before launch, such as [with the Serverless framework](https://github.com/microsoft/vscode-js-debug/issues/492).",
                      "default": []
                    },
                    "nodeVersionHint": {
                      "type": "number",
                      "minimum": 8,
                      "description": "Allows you to explicitly specify the Node version that's running, which can be used to disable or enable certain behaviors in cases where the automatic version detection does not work.",
                      "default": 12
                    },
                    "enableTurboSourcemaps": {
                      "type": "boolean",
                      "default": true,
                      "description": "Configures whether to use a new, faster mechanism for sourcemap discovery"
                    },
                    "command": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "Command to run in the launched terminal. If not provided, the terminal will open without launching a program.",
                      "default": "npm start"
                    }
                  }
                }
              ]
            },
            "perScriptSourcemaps": {
              "type": "string",
              "default": "auto",
              "enum": [
                "yes",
                "no",
                "auto"
              ],
              "description": "Whether scripts are loaded individually with unique sourcemaps containing the basename of the source file. This can be set to optimize sourcemap handling when dealing with lots of small scripts. If set to \"auto\", we'll detect known cases where this is appropriate."
            },
            "port": {
              "type": "number",
              "description": "Port for the browser to listen on. Defaults to \"0\", which will cause the browser to be debugged via pipes, which is generally more secure and should be chosen unless you need to attach to the browser from another tool.",
              "default": 0
            },
            "file": {
              "type": "string",
              "description": "A local html file to open in the browser",
              "default": "${workspaceFolder}/index.html"
            },
            "userDataDir": {
              "type": [
                "string",
                "boolean"
              ],
              "description": "By default, the browser is launched with a separate user profile in a temp folder. Use this option to override it. Set to false to launch with your default user profile. A new browser can't be launched if an instance is already running from `userDataDir`.",
              "default": true
            },
            "includeDefaultArgs": {
              "type": "boolean",
              "description": "Whether default browser launch arguments (to disable features that may make debugging harder) will be included in the launch.",
              "default": true
            },
            "includeLaunchArgs": {
              "type": "boolean",
              "description": "Advanced: whether any default launch/debugging arguments are set on the browser. The debugger will assume the browser will use pipe debugging such as that which is provided with `--remote-debugging-pipe`.",
              "default": true
            },
            "runtimeExecutable": {
              "type": [
                "string",
                "null"
              ],
              "description": "Either 'canary', 'stable', 'custom' or path to the browser executable. Custom means a custom wrapper, custom build or CHROME_PATH environment variable.",
              "default": "stable"
            },
            "runtimeArgs": {
              "type": "array",
              "description": "Optional arguments passed to the runtime executable.",
              "items": {
                "type": "string"
              },
              "default": []
            },
            "env": {
              "type": "object",
              "description": "Optional dictionary of environment key/value pairs for the browser.",
              "default": {}
            },
            "cwd": {
              "type": "string",
              "description": "Optional working directory for the runtime executable.",
              "default": null
            },
            "profileStartup": {
              "type": "boolean",
              "description": "If true, will start profiling soon as the process launches",
              "default": true
            },
            "cleanUp": {
              "type": "string",
              "enum": [
                "wholeBrowser",
                "onlyTab"
              ],
              "description": "What clean-up to do after the debugging session finishes. Close only the tab being debug, vs. close the whole browser.",
              "default": "wholeBrowser"
            },
            "browserLaunchLocation": {
              "description": "Forces the browser to be launched in one location. In a remote workspace (through ssh or WSL, for example) this can be used to open the browser on the remote machine rather than locally.",
              "default": null,
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "string",
                  "enum": [
                    "ui",
                    "workspace"
                  ]
                }
              ]
            },
            "enabled": {
              "type": "string",
              "enum": [
                "on",
                "off",
                "always"
              ]
            }
          }
        }
      ],
      "scope": 3,
      "source": {
        "id": "ms-vscode.js-debug",
        "displayName": "JavaScript Debugger"
      },
      "defaultDefaultValue": "on",
      "restricted": false
    },
    "debug.javascript.pickAndAttachOptions": {
      "type": "object",
      "default": {},
      "markdownDescription": "Default options used when debugging a process through the `Debug: Attach to Node.js Process` command",
      "properties": {
        "resolveSourceMapLocations": {
          "type": [
            "array",
            "null"
          ],
          "description": "A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.",
          "default": [
            "${workspaceFolder}/**",
            "!**/node_modules/**"
          ],
          "items": {
            "type": "string"
          }
        },
        "outFiles": {
          "type": [
            "array"
          ],
          "description": "If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.",
          "default": [
            "${workspaceFolder}/**/*.js",
            "!**/node_modules/**"
          ],
          "items": {
            "type": "string"
          }
        },
        "pauseForSourceMap": {
          "type": "boolean",
          "markdownDescription": "Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.",
          "default": false
        },
        "showAsyncStacks": {
          "description": "Show the async calls that led to the current call stack.",
          "default": true,
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "type": "object",
              "required": [
                "onAttach"
              ],
              "properties": {
                "onAttach": {
                  "type": "number",
                  "default": 32
                }
              }
            },
            {
              "type": "object",
              "required": [
                "onceBreakpointResolved"
              ],
              "properties": {
                "onceBreakpointResolved": {
                  "type": "number",
                  "default": 32
                }
              }
            }
          ]
        },
        "skipFiles": {
          "type": "array",
          "description": "An array of file or folder names, or path globs, to skip when debugging. Star patterns and negations are allowed, for example, `[\"**/node_modules/**\", \"!**/node_modules/my-module/**\"]`",
          "default": [
            "<node_internals>/**"
          ]
        },
        "smartStep": {
          "type": "boolean",
          "description": "Automatically step through generated code that cannot be mapped back to the original source.",
          "default": true
        },
        "sourceMaps": {
          "type": "boolean",
          "description": "Use JavaScript source maps (if they exist).",
          "default": true
        },
        "sourceMapRenames": {
          "type": "boolean",
          "default": true,
          "description": "Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers."
        },
        "sourceMapPathOverrides": {
          "type": "object",
          "description": "A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.",
          "default": {
            "webpack://?:*/*": "${workspaceFolder}/*",
            "webpack:///./~/*": "${workspaceFolder}/node_modules/*",
            "meteor://💻app/*": "${workspaceFolder}/*"
          }
        },
        "timeout": {
          "type": "number",
          "description": "Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.",
          "default": 10000
        },
        "timeouts": {
          "type": "object",
          "description": "Timeouts for several debugger operations.",
          "default": {},
          "properties": {
            "sourceMapMinPause": {
              "type": "number",
              "description": "Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed",
              "default": 1000
            },
            "sourceMapCumulativePause": {
              "type": "number",
              "description": "Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted",
              "default": 1000
            },
            "hoverEvaluation": {
              "type": "number",
              "description": "Time until value evaluation for hovered symbols is aborted. If set to 0, hover evaluation does never time out.",
              "default": 500
            }
          },
          "additionalProperties": false,
          "markdownDescription": "Timeouts for several debugger operations."
        },
        "trace": {
          "description": "Configures what diagnostic output is produced.",
          "default": true,
          "oneOf": [
            {
              "type": "boolean",
              "description": "Trace may be set to 'true' to write diagnostic logs to the disk."
            },
            {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "stdio": {
                  "type": "boolean",
                  "description": "Whether to return trace data from the launched application or browser."
                },
                "logFile": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "Configures where on disk logs are written."
                }
              }
            }
          ]
        },
        "outputCapture": {
          "enum": [
            "console",
            "std"
          ],
          "markdownDescription": "From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`.",
          "default": "console"
        },
        "enableContentValidation": {
          "default": true,
          "type": "boolean",
          "description": "Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example."
        },
        "customDescriptionGenerator": {
          "type": "string",
          "description": "Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      "
        },
        "customPropertiesGenerator": {
          "type": "string",
          "deprecated": true,
          "description": "Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181"
        },
        "cascadeTerminateToConfigurations": {
          "type": "array",
          "items": {
            "type": "string",
            "uniqueItems": true
          },
          "default": [],
          "description": "A list of debug sessions which, when this debug session is terminated, will also be stopped."
        },
        "cwd": {
          "type": "string",
          "description": "Absolute path to the working directory of the program being debugged. If you've set localRoot then cwd will match that value otherwise it falls back to your workspaceFolder",
          "default": "${workspaceFolder}",
          "docDefault": "localRoot || ${workspaceFolder}"
        },
        "localRoot": {
          "type": [
            "string",
            "null"
          ],
          "description": "Path to the local directory containing the program.",
          "default": null
        },
        "remoteRoot": {
          "type": [
            "string",
            "null"
          ],
          "description": "Absolute path to the remote directory containing the program.",
          "default": null
        },
        "autoAttachChildProcesses": {
          "type": "boolean",
          "description": "Attach debugger to new child processes automatically.",
          "default": true
        },
        "env": {
          "type": "object",
          "additionalProperties": {
            "type": [
              "string",
              "null"
            ]
          },
          "markdownDescription": "Environment variables passed to the program. The value `null` removes the variable from the environment.",
          "default": {}
        },
        "envFile": {
          "type": "string",
          "description": "Absolute path to a file containing environment variable definitions.",
          "default": "${workspaceFolder}/.env"
        },
        "runtimeSourcemapPausePatterns": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "markdownDescription": "A list of patterns at which to manually insert entrypoint breakpoints. This can be useful to give the debugger an opportunity to set breakpoints when using sourcemaps that don't exist or can't be detected before launch, such as [with the Serverless framework](https://github.com/microsoft/vscode-js-debug/issues/492).",
          "default": []
        },
        "nodeVersionHint": {
          "type": "number",
          "minimum": 8,
          "description": "Allows you to explicitly specify the Node version that's running, which can be used to disable or enable certain behaviors in cases where the automatic version detection does not work.",
          "default": 12
        },
        "enableTurboSourcemaps": {
          "type": "boolean",
          "default": true,
          "description": "Configures whether to use a new, faster mechanism for sourcemap discovery"
        },
        "address": {
          "type": "string",
          "description": "TCP/IP address of process to be debugged. Default is 'localhost'.",
          "default": "localhost"
        },
        "port": {
          "type": "number",
          "description": "Debug port to attach to. Default is 9229.",
          "default": 9229
        },
        "websocketAddress": {
          "type": "string",
          "description": "Exact websocket address to attach to. If unspecified, it will be discovered from the address and port."
        },
        "restart": {
          "description": "Try to reconnect to the program if we lose connection. If set to `true`, we'll try once a second, forever. You can customize the interval and maximum number of attempts by specifying the `delay` and `maxAttempts` in an object instead.",
          "default": true,
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "type": "object",
              "properties": {
                "delay": {
                  "type": "number",
                  "minimum": 0,
                  "default": 1000
                },
                "maxAttempts": {
                  "type": "number",
                  "minimum": 0,
                  "default": 10
                }
              }
            }
          ]
        },
        "processId": {
          "type": "string",
          "description": "ID of process to attach to.",
          "default": "${command:PickProcess}"
        },
        "attachExistingChildren": {
          "type": "boolean",
          "description": "Whether to attempt to attach to already-spawned child processes.",
          "default": false
        },
        "continueOnAttach": {
          "type": "boolean",
          "markdownDescription": "If true, we'll automatically resume programs launched and waiting on `--inspect-brk`",
          "default": true
        }
      },
      "scope": 3,
      "source": {
        "id": "ms-vscode.js-debug",
        "displayName": "JavaScript Debugger"
      },
      "defaultDefaultValue": {},
      "restricted": false
    },
    "debug.javascript.autoAttachFilter": {
      "type": "string",
      "default": "disabled",
      "enum": [
        "always",
        "smart",
        "onlyWithFlag",
        "disabled"
      ],
      "enumDescriptions": [
        "Auto attach to every Node.js process launched in the terminal.",
        "Auto attach when running scripts that aren't in a node_modules folder.",
        "Only auto attach when the `--inspect` is given.",
        "Auto attach is disabled and not shown in status bar."
      ],
      "markdownDescription": "Configures which processes to automatically attach and debug when `#debug.node.autoAttach#` is on. A Node process launched with the `--inspect` flag will always be attached to, regardless of this setting.",
      "scope": 3,
      "source": {
        "id": "ms-vscode.js-debug",
        "displayName": "JavaScript Debugger"
      },
      "defaultDefaultValue": "disabled",
      "restricted": false
    },
    "debug.javascript.autoAttachSmartPattern": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "default": [
        "${workspaceFolder}/**",
        "!**/node_modules/**",
        "**/$KNOWN_TOOLS$/**"
      ],
      "markdownDescription": "Configures glob patterns for determining when to attach in \"smart\" `#debug.javascript.autoAttachFilter#` mode. `$KNOWN_TOOLS$` is replaced with a list of names of common test and code runners. [Read more on the VS Code docs](https://code.visualstudio.com/docs/nodejs/nodejs-debugging#_auto-attach-smart-patterns).",
      "scope": 3,
      "source": {
        "id": "ms-vscode.js-debug",
        "displayName": "JavaScript Debugger"
      },
      "defaultDefaultValue": [
        "${workspaceFolder}/**",
        "!**/node_modules/**",
        "**/$KNOWN_TOOLS$/**"
      ],
      "restricted": false
    },
    "debug.javascript.breakOnConditionalError": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Whether to stop when conditional breakpoints throw an error.",
      "scope": 3,
      "source": {
        "id": "ms-vscode.js-debug",
        "displayName": "JavaScript Debugger"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "debug.javascript.unmapMissingSources": {
      "type": "boolean",
      "default": false,
      "description": "Configures whether sourcemapped file where the original file can't be read will automatically be unmapped. If this is false (default), a prompt is shown.",
      "scope": 3,
      "source": {
        "id": "ms-vscode.js-debug",
        "displayName": "JavaScript Debugger"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "debug.javascript.defaultRuntimeExecutable": {
      "type": "object",
      "default": {
        "pwa-node": "node"
      },
      "markdownDescription": "The default `runtimeExecutable` used for launch configurations, if unspecified. This can be used to config custom paths to Node.js or browser installations.",
      "properties": {
        "pwa-node": {
          "type": "string"
        },
        "pwa-chrome": {
          "type": "string"
        },
        "pwa-msedge": {
          "type": "string"
        }
      },
      "scope": 3,
      "source": {
        "id": "ms-vscode.js-debug",
        "displayName": "JavaScript Debugger"
      },
      "defaultDefaultValue": {
        "pwa-node": "node"
      },
      "restricted": false
    },
    "debug.javascript.resourceRequestOptions": {
      "type": "object",
      "default": {},
      "markdownDescription": "Request options to use when loading resources, such as source maps, in the debugger. You may need to configure this if your sourcemaps require authentication or use a self-signed certificate, for instance. Options are used to create a request using the [`got`](https://github.com/sindresorhus/got) library.\n\nA common case to disable certificate verification can be done by passing `{ \"https\": { \"rejectUnauthorized\": false } }`.",
      "scope": 3,
      "source": {
        "id": "ms-vscode.js-debug",
        "displayName": "JavaScript Debugger"
      },
      "defaultDefaultValue": {},
      "restricted": false
    },
    "npm.scriptExplorerAction": {
      "type": "string",
      "enum": [
        "open",
        "run"
      ],
      "markdownDescription": "The default click action used in the NPM Scripts Explorer: `open` or `run`, the default is `open`.",
      "scope": 3,
      "default": "open",
      "source": {
        "id": "vscode.npm",
        "displayName": "NPM support for VS Code"
      },
      "defaultDefaultValue": "open",
      "restricted": false
    },
    "npm.fetchOnlinePackageInfo": {
      "type": "boolean",
      "description": "Fetch data from https://registry.npmjs.org and https://registry.bower.io to provide auto-completion and information on hover features on npm dependencies.",
      "default": true,
      "scope": 3,
      "tags": [
        "usesOnlineServices"
      ],
      "source": {
        "id": "vscode.npm",
        "displayName": "NPM support for VS Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "npm.scriptHover": {
      "type": "boolean",
      "description": "Display hover with 'Run' and 'Debug' commands for scripts.",
      "default": true,
      "scope": 3,
      "source": {
        "id": "vscode.npm",
        "displayName": "NPM support for VS Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "php.suggest.basic": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether the built-in PHP language suggestions are enabled. The support suggests PHP globals and variables.",
      "scope": 3,
      "source": {
        "id": "vscode.php-language-features",
        "displayName": "PHP Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "php.validate.enable": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable built-in PHP validation.",
      "scope": 3,
      "source": {
        "id": "vscode.php-language-features",
        "displayName": "PHP Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "php.validate.run": {
      "type": "string",
      "enum": [
        "onSave",
        "onType"
      ],
      "default": "onSave",
      "description": "Whether the linter is run on save or on type.",
      "scope": 3,
      "source": {
        "id": "vscode.php-language-features",
        "displayName": "PHP Language Features"
      },
      "defaultDefaultValue": "onSave",
      "restricted": false
    },
    "references.preferredLocation": {
      "description": "Controls whether 'Peek References' or 'Find References' is invoked when selecting CodeLens references.",
      "type": "string",
      "default": "peek",
      "enum": [
        "peek",
        "view"
      ],
      "enumDescriptions": [
        "Show references in peek editor.",
        "Show references in separate view."
      ],
      "scope": 3,
      "source": {
        "id": "vscode.references-view",
        "displayName": "Reference Search View"
      },
      "defaultDefaultValue": "peek",
      "restricted": false
    },
    "simpleBrowser.focusLockIndicator.enabled": {
      "type": "boolean",
      "default": true,
      "title": "Focus Lock Indicator Enabled",
      "description": "Enable/disable the floating indicator that shows when focused in the simple browser.",
      "scope": 3,
      "source": {
        "id": "vscode.simple-browser",
        "displayName": "Simple Browser"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescript.tsdk": {
      "type": "string",
      "markdownDescription": "Specifies the folder path to the tsserver and `lib*.d.ts` files under a TypeScript install to use for IntelliSense, for example: `./node_modules/typescript/lib`.\n\n- When specified as a user setting, the TypeScript version from `typescript.tsdk` automatically replaces the built-in TypeScript version.\n- When specified as a workspace setting, `typescript.tsdk` allows you to switch to use that workspace version of TypeScript for IntelliSense with the `TypeScript: Select TypeScript version` command.\n\nSee the [TypeScript documentation](https://code.visualstudio.com/docs/typescript/typescript-compiling#_using-newer-typescript-versions) for more detail about managing TypeScript versions.",
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "default": "",
      "restricted": true
    },
    "typescript.disableAutomaticTypeAcquisition": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Disables [automatic type acquisition](https://code.visualstudio.com/docs/nodejs/working-with-javascript#_typings-and-automatic-type-acquisition). Automatic type acquisition fetches `@types` packages from npm to improve IntelliSense for external libraries.",
      "scope": 3,
      "tags": [
        "usesOnlineServices"
      ],
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "typescript.enablePromptUseWorkspaceTsdk": {
      "type": "boolean",
      "default": false,
      "description": "Enables prompting of users to use the TypeScript version configured in the workspace for Intellisense.",
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "typescript.check.npmIsInstalled": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Check if npm is installed for [Automatic Type Acquisition](https://code.visualstudio.com/docs/nodejs/working-with-javascript#_typings-and-automatic-type-acquisition).",
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "javascript.referencesCodeLens.enabled": {
      "type": "boolean",
      "default": false,
      "description": "Enable/disable references CodeLens in JavaScript files.",
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "javascript.referencesCodeLens.showOnAllFunctions": {
      "type": "boolean",
      "default": false,
      "description": "Enable/disable references CodeLens on all functions in JavaScript files.",
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "typescript.referencesCodeLens.enabled": {
      "type": "boolean",
      "default": false,
      "description": "Enable/disable references CodeLens in TypeScript files.",
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "typescript.referencesCodeLens.showOnAllFunctions": {
      "type": "boolean",
      "default": false,
      "description": "Enable/disable references CodeLens on all functions in TypeScript files.",
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "typescript.implementationsCodeLens.enabled": {
      "type": "boolean",
      "default": false,
      "description": "Enable/disable implementations CodeLens. This CodeLens shows the implementers of an interface.",
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "typescript.tsserver.enableTracing": {
      "type": "boolean",
      "default": false,
      "description": "Enables tracing TS server performance to a directory. These trace files can be used to diagnose TS Server performance issues. The log may contain file paths, source code, and other potentially sensitive information from your project.",
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "typescript.tsserver.log": {
      "type": "string",
      "enum": [
        "off",
        "terse",
        "normal",
        "verbose"
      ],
      "default": "off",
      "description": "Enables logging of the TS server to a file. This log can be used to diagnose TS Server issues. The log may contain file paths, source code, and other potentially sensitive information from your project.",
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": "off",
      "restricted": false
    },
    "typescript.tsserver.trace": {
      "type": "string",
      "enum": [
        "off",
        "messages",
        "verbose"
      ],
      "default": "off",
      "description": "Enables tracing of messages sent to the TS server. This trace can be used to diagnose TS Server issues. The trace may contain file paths, source code, and other potentially sensitive information from your project.",
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": "off",
      "restricted": false
    },
    "typescript.reportStyleChecksAsWarnings": {
      "type": "boolean",
      "default": true,
      "description": "Report style checks as warnings.",
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescript.validate.enable": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable TypeScript validation.",
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescript.format.enable": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable default TypeScript formatter.",
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "javascript.validate.enable": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable JavaScript validation.",
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "javascript.format.enable": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable default JavaScript formatter.",
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "js/ts.implicitProjectConfig.module": {
      "type": "string",
      "markdownDescription": "Sets the module system for the program. See more: https://www.typescriptlang.org/tsconfig#module.",
      "default": "ESNext",
      "enum": [
        "CommonJS",
        "AMD",
        "System",
        "UMD",
        "ES6",
        "ES2015",
        "ES2020",
        "ESNext",
        "None",
        "ES2022",
        "Node12",
        "NodeNext"
      ],
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": "ESNext",
      "restricted": false
    },
    "js/ts.implicitProjectConfig.target": {
      "type": "string",
      "default": "ES2020",
      "markdownDescription": "Set target JavaScript language version for emitted JavaScript and include library declarations. See more: https://www.typescriptlang.org/tsconfig#target.",
      "enum": [
        "ES3",
        "ES5",
        "ES6",
        "ES2015",
        "ES2016",
        "ES2017",
        "ES2018",
        "ES2019",
        "ES2020",
        "ES2021",
        "ES2022",
        "ESNext"
      ],
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": "ES2020",
      "restricted": false
    },
    "javascript.implicitProjectConfig.checkJs": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Enable/disable semantic checking of JavaScript files. Existing `jsconfig.json` or `tsconfig.json` files override this setting.",
      "markdownDeprecationMessage": "This setting has been deprecated in favor of `js/ts.implicitProjectConfig.checkJs`.",
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false,
      "deprecationMessage": "This setting has been deprecated in favor of `js/ts.implicitProjectConfig.checkJs`."
    },
    "js/ts.implicitProjectConfig.checkJs": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Enable/disable semantic checking of JavaScript files. Existing `jsconfig.json` or `tsconfig.json` files override this setting.",
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "javascript.implicitProjectConfig.experimentalDecorators": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Enable/disable `experimentalDecorators` in JavaScript files that are not part of a project. Existing `jsconfig.json` or `tsconfig.json` files override this setting.",
      "markdownDeprecationMessage": "This setting has been deprecated in favor of `js/ts.implicitProjectConfig.experimentalDecorators`.",
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false,
      "deprecationMessage": "This setting has been deprecated in favor of `js/ts.implicitProjectConfig.experimentalDecorators`."
    },
    "js/ts.implicitProjectConfig.experimentalDecorators": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Enable/disable `experimentalDecorators` in JavaScript files that are not part of a project. Existing `jsconfig.json` or `tsconfig.json` files override this setting.",
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "js/ts.implicitProjectConfig.strictNullChecks": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Enable/disable [strict null checks](https://www.typescriptlang.org/tsconfig#strictNullChecks) in JavaScript and TypeScript files that are not part of a project. Existing `jsconfig.json` or `tsconfig.json` files override this setting.",
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "js/ts.implicitProjectConfig.strictFunctionTypes": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Enable/disable [strict function types](https://www.typescriptlang.org/tsconfig#strictFunctionTypes) in JavaScript and TypeScript files that are not part of a project. Existing `jsconfig.json` or `tsconfig.json` files override this setting.",
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescript.tsc.autoDetect": {
      "type": "string",
      "default": "on",
      "enum": [
        "on",
        "off",
        "build",
        "watch"
      ],
      "markdownEnumDescriptions": [
        "Create both build and watch tasks.",
        "Disable this feature.",
        "Only create single run compile tasks.",
        "Only create compile and watch tasks."
      ],
      "description": "Controls auto detection of tsc tasks.",
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": "on",
      "restricted": false
    },
    "typescript.locale": {
      "type": "string",
      "default": "auto",
      "enum": [
        "auto",
        "de",
        "es",
        "en",
        "fr",
        "it",
        "ja",
        "ko",
        "ru",
        "zh-CN",
        "zh-TW"
      ],
      "markdownDescription": "Sets the locale used to report JavaScript and TypeScript errors. Defaults to use VS Code's locale.",
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": "auto",
      "restricted": false
    },
    "typescript.preferences.includePackageJsonAutoImports": {
      "type": "string",
      "enum": [
        "auto",
        "on",
        "off"
      ],
      "enumDescriptions": [
        "Search dependencies based on estimated performance impact.",
        "Always search dependencies.",
        "Never search dependencies."
      ],
      "default": "auto",
      "markdownDescription": "Enable/disable searching `package.json` dependencies for available auto imports.",
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": "auto",
      "restricted": false
    },
    "typescript.surveys.enabled": {
      "type": "boolean",
      "default": true,
      "description": "Enabled/disable occasional surveys that help us improve VS Code's JavaScript and TypeScript support.",
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescript.tsserver.useSeparateSyntaxServer": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable spawning a separate TypeScript server that can more quickly respond to syntax related operations, such as calculating folding or computing document symbols.",
      "markdownDeprecationMessage": "This setting has been deprecated in favor of `typescript.tsserver.useSyntaxServer`.",
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false,
      "deprecationMessage": "This setting has been deprecated in favor of `typescript.tsserver.useSyntaxServer`."
    },
    "typescript.tsserver.useSyntaxServer": {
      "type": "string",
      "scope": 3,
      "description": "Controls if TypeScript launches a dedicated server to more quickly handle syntax related operations, such as computing code folding.",
      "default": "auto",
      "enum": [
        "always",
        "never",
        "auto"
      ],
      "enumDescriptions": [
        "Use a lighter weight syntax server to handle all IntelliSense operations. This syntax server can only provide IntelliSense for opened files.",
        "Don't use a dedicated syntax server. Use a single server to handle all IntelliSense operations.",
        "Spawn both a full server and a lighter weight server dedicated to syntax operations. The syntax server is used to speed up syntax operations and provide IntelliSense while projects are loading."
      ],
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": "auto",
      "restricted": false
    },
    "typescript.tsserver.maxTsServerMemory": {
      "type": "number",
      "default": 3072,
      "description": "The maximum amount of memory (in MB) to allocate to the TypeScript server process.",
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": 3072,
      "restricted": false
    },
    "typescript.tsserver.experimental.enableProjectDiagnostics": {
      "type": "boolean",
      "default": false,
      "description": "(Experimental) Enables project wide error reporting.",
      "scope": 3,
      "tags": [
        "experimental"
      ],
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "typescript.tsserver.watchOptions": {
      "type": "object",
      "description": "Configure which watching strategies should be used to keep track of files and directories.",
      "scope": 3,
      "properties": {
        "watchFile": {
          "type": "string",
          "description": "Strategy for how individual files are watched.",
          "enum": [
            "fixedChunkSizePolling",
            "fixedPollingInterval",
            "priorityPollingInterval",
            "dynamicPriorityPolling",
            "useFsEvents",
            "useFsEventsOnParentDirectory"
          ],
          "enumDescriptions": [
            "Polls files in chunks at regular interval.",
            "Check every file for changes several times a second at a fixed interval.",
            "Check every file for changes several times a second, but use heuristics to check certain types of files less frequently than others.",
            "Use a dynamic queue where less-frequently modified files will be checked less often.",
            "Attempt to use the operating system/file system's native events for file changes.",
            "Attempt to use the operating system/file system's native events to listen for changes on a file's containing directories. This can use fewer file watchers, but might be less accurate."
          ],
          "default": "useFsEvents"
        },
        "watchDirectory": {
          "type": "string",
          "description": "Strategy for how entire directory trees are watched under systems that lack recursive file-watching functionality.",
          "enum": [
            "fixedChunkSizePolling",
            "fixedPollingInterval",
            "dynamicPriorityPolling",
            "useFsEvents"
          ],
          "enumDescriptions": [
            "Polls directories in chunks at regular interval.",
            "Check every directory for changes several times a second at a fixed interval.",
            "Use a dynamic queue where less-frequently modified directories will be checked less often.",
            "Attempt to use the operating system/file system's native events for directory changes."
          ],
          "default": "useFsEvents"
        },
        "fallbackPolling": {
          "type": "string",
          "description": "When using file system events, this option specifies the polling strategy that gets used when the system runs out of native file watchers and/or doesn't support native file watchers.",
          "enum": [
            "fixedPollingInterval",
            "priorityPollingInterval",
            "dynamicPriorityPolling"
          ],
          "enumDescriptions": [
            "configuration.tsserver.watchOptions.fallbackPolling.fixedPollingInterval",
            "configuration.tsserver.watchOptions.fallbackPolling.priorityPollingInterval",
            "configuration.tsserver.watchOptions.fallbackPolling.dynamicPriorityPolling"
          ]
        },
        "synchronousWatchDirectory": {
          "type": "boolean",
          "description": "Disable deferred watching on directories. Deferred watching is useful when lots of file changes might occur at once (e.g. a change in node_modules from running npm install), but you might want to disable it with this flag for some less-common setups."
        }
      },
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "default": {},
      "restricted": false
    },
    "typescript.workspaceSymbols.scope": {
      "type": "string",
      "enum": [
        "allOpenProjects",
        "currentProject"
      ],
      "enumDescriptions": [
        "Search all open JavaScript or TypeScript projects for symbols.",
        "Only search for symbols in the current JavaScript or TypeScript project."
      ],
      "default": "allOpenProjects",
      "markdownDescription": "Controls which files are searched by [Go to Symbol in Workspace](https://code.visualstudio.com/docs/editor/editingevolved#_open-symbol-by-name).",
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": "allOpenProjects",
      "restricted": false
    },
    "typescript.experimental.tsserver.web.enableProjectWideIntellisense": {
      "type": "boolean",
      "default": false,
      "description": "Enable/disable project-wide IntelliSense on web. Requires that VS Code is running in a trusted context.",
      "scope": 3,
      "tags": [
        "experimental"
      ],
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "better-comments.multilineComments": {
      "type": "boolean",
      "description": "Whether the multiline comment highlighter should be active",
      "default": true,
      "scope": 3,
      "source": {
        "id": "aaron-bond.better-comments",
        "displayName": "Better Comments"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "better-comments.highlightPlainText": {
      "type": "boolean",
      "description": "Whether the plaintext comment highlighter should be active",
      "default": false,
      "scope": 3,
      "source": {
        "id": "aaron-bond.better-comments",
        "displayName": "Better Comments"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "better-comments.tags": {
      "type": "array",
      "description": "Tags which are used to color the comments. Changes require a restart of VS Code to take effect",
      "default": [
        {
          "tag": "!",
          "color": "#FF2D00",
          "strikethrough": false,
          "underline": false,
          "backgroundColor": "transparent",
          "bold": false,
          "italic": false
        },
        {
          "tag": "?",
          "color": "#3498DB",
          "strikethrough": false,
          "underline": false,
          "backgroundColor": "transparent",
          "bold": false,
          "italic": false
        },
        {
          "tag": "//",
          "color": "#474747",
          "strikethrough": true,
          "underline": false,
          "backgroundColor": "transparent",
          "bold": false,
          "italic": false
        },
        {
          "tag": "todo",
          "color": "#FF8C00",
          "strikethrough": false,
          "underline": false,
          "backgroundColor": "transparent",
          "bold": false,
          "italic": false
        },
        {
          "tag": "*",
          "color": "#98C379",
          "strikethrough": false,
          "underline": false,
          "backgroundColor": "transparent",
          "bold": false,
          "italic": false
        }
      ],
      "scope": 3,
      "source": {
        "id": "aaron-bond.better-comments",
        "displayName": "Better Comments"
      },
      "defaultDefaultValue": [
        {
          "tag": "!",
          "color": "#FF2D00",
          "strikethrough": false,
          "underline": false,
          "backgroundColor": "transparent",
          "bold": false,
          "italic": false
        },
        {
          "tag": "?",
          "color": "#3498DB",
          "strikethrough": false,
          "underline": false,
          "backgroundColor": "transparent",
          "bold": false,
          "italic": false
        },
        {
          "tag": "//",
          "color": "#474747",
          "strikethrough": true,
          "underline": false,
          "backgroundColor": "transparent",
          "bold": false,
          "italic": false
        },
        {
          "tag": "todo",
          "color": "#FF8C00",
          "strikethrough": false,
          "underline": false,
          "backgroundColor": "transparent",
          "bold": false,
          "italic": false
        },
        {
          "tag": "*",
          "color": "#98C379",
          "strikethrough": false,
          "underline": false,
          "backgroundColor": "transparent",
          "bold": false,
          "italic": false
        }
      ],
      "restricted": false
    },
    "bookmarks.saveBookmarksInProject": {
      "type": "boolean",
      "default": false,
      "description": "Allow bookmarks to be saved (and restored) locally in the opened Project/Folder instead of VS Code",
      "scope": 3,
      "source": {
        "id": "alefragnani.Bookmarks",
        "displayName": "Bookmarks"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "bookmarks.backgroundLineColor": {
      "type": "string",
      "default": "",
      "description": "Background color of the decoration. Use rgba() and define transparent background colors to play well with other decorations. Ex.: rgba(21, 126, 251, 0.1)",
      "deprecationMessage": "Use `bookmarks.lineBackground` in `workbench.colorCustomizations` instead",
      "scope": 3,
      "source": {
        "id": "alefragnani.Bookmarks",
        "displayName": "Bookmarks"
      },
      "defaultDefaultValue": "",
      "restricted": false
    },
    "bookmarks.navigateThroughAllFiles": {
      "type": "boolean",
      "default": true,
      "description": "Allow navigation look for bookmarks in all files in the project, instead of only the current",
      "scope": 3,
      "source": {
        "id": "alefragnani.Bookmarks",
        "displayName": "Bookmarks"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "bookmarks.wrapNavigation": {
      "type": "boolean",
      "default": true,
      "description": "Allow navigation to wrap around at the first and last bookmarks in scope (current file or all files)",
      "scope": 3,
      "source": {
        "id": "alefragnani.Bookmarks",
        "displayName": "Bookmarks"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "bookmarks.useWorkaroundForFormatters": {
      "type": "boolean",
      "default": false,
      "description": "Use a workaround for formatters like Prettier, which does not notify on document changes and messes Bookmark's Sticky behavior",
      "scope": 3,
      "source": {
        "id": "alefragnani.Bookmarks",
        "displayName": "Bookmarks"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "bookmarks.experimental.enableNewStickyEngine": {
      "type": "boolean",
      "default": true,
      "description": "Experimental. Enables the new Sticky engine with support for Formatters, improved source change detections and undo operations",
      "scope": 3,
      "source": {
        "id": "alefragnani.Bookmarks",
        "displayName": "Bookmarks"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "bookmarks.keepBookmarksOnLineDelete": {
      "type": "boolean",
      "default": false,
      "description": "Specifies whether bookmarks on deleted line should be kept on file, moving it down to the next line, instead of deleting it with the line where it was toggled.",
      "scope": 3,
      "source": {
        "id": "alefragnani.Bookmarks",
        "displayName": "Bookmarks"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "bookmarks.showNoMoreBookmarksWarning": {
      "type": "boolean",
      "default": true,
      "description": "Specifies whether a notification will be shown when attempting to navigate between bookmarks when no more exist.",
      "scope": 3,
      "source": {
        "id": "alefragnani.Bookmarks",
        "displayName": "Bookmarks"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "bookmarks.showCommandsInContextMenu": {
      "type": "boolean",
      "default": true,
      "description": "Specifies whether Bookmarks commands are displayed on the context menu",
      "scope": 3,
      "source": {
        "id": "alefragnani.Bookmarks",
        "displayName": "Bookmarks"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "bookmarks.sideBar.expanded": {
      "type": "boolean",
      "default": false,
      "description": "Specifies whether the Side Bar show be displayed expanded",
      "scope": 3,
      "source": {
        "id": "alefragnani.Bookmarks",
        "displayName": "Bookmarks"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "bookmarks.multicursor.toggleMode": {
      "type": "string",
      "default": "allLinesAtOnce",
      "enum": [
        "allLinesAtOnce",
        "eachLineIndependently"
      ],
      "enumDescriptions": [
        "Creates bookmarks in all selected lines at once, if at least one of the lines don't have a bookmark",
        "Literally toggles a bookmark in each line, instead of making all lines equal"
      ],
      "description": "Specifies how multi cursor handles already bookmarked lines",
      "scope": 3,
      "source": {
        "id": "alefragnani.Bookmarks",
        "displayName": "Bookmarks"
      },
      "defaultDefaultValue": "allLinesAtOnce",
      "restricted": false
    },
    "bookmarks.label.suggestion": {
      "type": "string",
      "default": "dontUse",
      "description": "Specifies how labels are suggested when creating bookmarks",
      "enum": [
        "dontUse",
        "useWhenSelected",
        "suggestWhenSelected",
        "suggestWhenSelectedOrLineWhenNoSelected"
      ],
      "enumDescriptions": [
        "Don't use the selection (original behavior)",
        "Use the selected text (if available) directly, no confirmation required",
        "Suggests the selected text (if available). You still need to confirm.",
        "Suggests the selected text (if available) or the entire line (when has no selection). You still need to confirm."
      ],
      "scope": 3,
      "source": {
        "id": "alefragnani.Bookmarks",
        "displayName": "Bookmarks"
      },
      "defaultDefaultValue": "dontUse",
      "restricted": false
    },
    "hediet.vscode-drawio.offline": {
      "type": "boolean",
      "default": true,
      "title": "Use Offline Mode",
      "description": "When enabled, the bundled instance of Draw.io is used.",
      "scope": 3,
      "source": {
        "id": "hediet.vscode-drawio",
        "displayName": "Draw.io Integration"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "hediet.vscode-drawio.codeLinkActivated": {
      "type": "boolean",
      "default": false,
      "title": "Code Link Enabled",
      "description": "When activated, selecting a node will navigate to an associated code section.",
      "scope": 3,
      "source": {
        "id": "hediet.vscode-drawio",
        "displayName": "Draw.io Integration"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "hediet.vscode-drawio.local-storage": {
      "anyOf": [
        {
          "type": "object"
        },
        {
          "type": "string"
        }
      ],
      "default": {},
      "readOnly": true,
      "title": "Draw.io Local Storage",
      "description": "Only change this property if you know what you are doing. Manual changes to this property are not supported!",
      "scope": 3,
      "source": {
        "id": "hediet.vscode-drawio",
        "displayName": "Draw.io Integration"
      },
      "defaultDefaultValue": {},
      "restricted": false
    },
    "hediet.vscode-drawio.styles": {
      "title": "Styles",
      "description": "Defines an array of objects that contain the colours (fontColor, fillColor, strokeColor and gradientColor) for the Style tab of the format panel if the selection is empty. These objects can have a commonStyle (which is applied to both vertices and edges), vertexStyle (applied to vertices) and edgeStyle (applied to edges), and a graph with background and gridColor. An empty object means apply the default colors",
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "commonStyle": {
            "type": "object",
            "properties": {
              "fontColor": {
                "type": "string"
              },
              "strokeColor": {
                "type": "string"
              },
              "fillColor": {
                "type": "string"
              }
            }
          },
          "graph": {
            "type": "object",
            "properties": {
              "background": {
                "type": "string"
              },
              "gridColor": {
                "type": "string"
              }
            }
          }
        }
      },
      "scope": 3,
      "source": {
        "id": "hediet.vscode-drawio",
        "displayName": "Draw.io Integration"
      },
      "default": [],
      "restricted": false
    },
    "hediet.vscode-drawio.defaultVertexStyle": {
      "title": "Default Vertex Style",
      "description": "Default styling of vertices (shapes).",
      "type": "object",
      "scope": 3,
      "source": {
        "id": "hediet.vscode-drawio",
        "displayName": "Draw.io Integration"
      },
      "default": {},
      "restricted": false
    },
    "hediet.vscode-drawio.defaultEdgeStyle": {
      "title": "Default Edge Style",
      "description": "Default styling of edges.",
      "type": "object",
      "scope": 3,
      "source": {
        "id": "hediet.vscode-drawio",
        "displayName": "Draw.io Integration"
      },
      "default": {},
      "restricted": false
    },
    "hediet.vscode-drawio.simpleLabels": {
      "type": "boolean",
      "default": false,
      "title": "Use SimpleLabels",
      "description": "When enabled, no ForeignObjects are used in the svg.",
      "scope": 3,
      "source": {
        "id": "hediet.vscode-drawio",
        "displayName": "Draw.io Integration"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "hediet.vscode-drawio.colorNames": {
      "title": "Color Names",
      "description": "Names for colors, eg. {‘FFFFFF’: ‘White’, ‘000000’: ‘Black’} that are used as tooltips (uppercase, no leading # for the colour codes)",
      "type": "object",
      "scope": 3,
      "source": {
        "id": "hediet.vscode-drawio",
        "displayName": "Draw.io Integration"
      },
      "default": {},
      "restricted": false
    },
    "hediet.vscode-drawio.presetColors": {
      "title": "Preset Colors",
      "description": "Color codes for the upper palette in the color dialog.",
      "type": "array",
      "items": {
        "type": "string",
        "description": "Use hex codes without # at the beginning only (FFFFFF for absolute white, for example)."
      },
      "scope": 3,
      "source": {
        "id": "hediet.vscode-drawio",
        "displayName": "Draw.io Integration"
      },
      "default": [],
      "restricted": false
    },
    "hediet.vscode-drawio.customColorSchemes": {
      "title": "Custom Color Schemes",
      "markdownDescription": "Available color schemes in the style section at the top of the format panel. See example [here](https://www.diagrams.net/doc/faq/custom-colours-confluence-cloud#default-colour-schemes---format-panel)",
      "type": "array",
      "items": {
        "type": "array",
        "description": "Represents a page of color schemes.",
        "items": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string",
              "description": "Title of the color used in tooltips."
            },
            "fill": {
              "type": "string",
              "description": "Use hex codes with # at the beginning (#FFFFFF for absolute white, for example)."
            },
            "stroke": {
              "type": "string",
              "description": "Use hex codes with # at the beginning (#FFFFFF for absolute white, for example)."
            },
            "gradient": {
              "type": "string",
              "description": "Use hex codes with # at the beginning (#FFFFFF for absolute white, for example)."
            },
            "font": {
              "type": "string",
              "description": "Use hex codes with # at the beginning (#FFFFFF for absolute white, for example)."
            }
          }
        }
      },
      "scope": 3,
      "source": {
        "id": "hediet.vscode-drawio",
        "displayName": "Draw.io Integration"
      },
      "default": [],
      "restricted": false
    },
    "hediet.vscode-drawio.customFonts": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "default": [],
      "title": "Custom Fonts",
      "description": "Configures the Draw.io editor to use custom fonts.",
      "scope": 3,
      "source": {
        "id": "hediet.vscode-drawio",
        "displayName": "Draw.io Integration"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "hediet.vscode-drawio.customLibraries": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "entryId": {
            "type": "string",
            "description": "The id of the entry. A specfic entry can be enabled or deactivated in the editor."
          },
          "libName": {
            "type": "string",
            "description": "The name of the library in the shape overview."
          }
        },
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "url": {
                "type": "string"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "xml": {
                "type": "string"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "json": {}
            }
          },
          {
            "type": "object",
            "properties": {
              "file": {
                "type": "string",
                "description": "The file path to the library. Must be absolute. You can use ${workspaceFolder}."
              }
            }
          }
        ]
      },
      "default": [],
      "title": "Custom Libraries",
      "description": "Configures the Draw.io editor to use custom libraries.",
      "scope": 3,
      "source": {
        "id": "hediet.vscode-drawio",
        "displayName": "Draw.io Integration"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "hediet.vscode-drawio.plugins": {
      "type": "array",
      "items": {
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "file": {
                "type": "string",
                "description": "The file path to the library. Must be absolute. You can use ${workspaceFolder}."
              }
            }
          }
        ]
      },
      "default": [],
      "title": "Plugins",
      "description": "Loads Draw.io plugins.",
      "scope": 3,
      "source": {
        "id": "hediet.vscode-drawio",
        "displayName": "Draw.io Integration"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "hediet.vscode-drawio.knownPlugins": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "pluginId": {
            "type": "string"
          },
          "fingerprint": {
            "type": "string"
          },
          "allowed": {
            "type": "boolean"
          }
        }
      },
      "default": [],
      "title": "Known Plugins",
      "scope": 3,
      "source": {
        "id": "hediet.vscode-drawio",
        "displayName": "Draw.io Integration"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "hediet.vscode-drawio.online-url": {
      "type": "string",
      "default": "https://embed.diagrams.net/",
      "title": "Online URL",
      "description": "The app to use when offline mode is disabled.",
      "scope": 3,
      "source": {
        "id": "hediet.vscode-drawio",
        "displayName": "Draw.io Integration"
      },
      "defaultDefaultValue": "https://embed.diagrams.net/",
      "restricted": false
    },
    "hediet.vscode-drawio.theme": {
      "title": "Draw.io Theme",
      "type": "string",
      "default": "automatic",
      "enum": [
        "automatic",
        "min",
        "atlas",
        "dark",
        "Kennedy",
        "sketch"
      ],
      "description": "The theme to use for the Draw.io editor. Use \"automatic\" to automatically choose a Draw.io theme that matches your current VS Code theme.",
      "scope": 3,
      "source": {
        "id": "hediet.vscode-drawio",
        "displayName": "Draw.io Integration"
      },
      "defaultDefaultValue": "automatic",
      "restricted": false
    },
    "hediet.vscode-drawio.zoomFactor": {
      "type": "number",
      "default": 1.2,
      "title": "Draw.io zoom factor",
      "description": "Defines the zoom factor for mouse wheel and trackpad zoom.",
      "scope": 3,
      "source": {
        "id": "hediet.vscode-drawio",
        "displayName": "Draw.io Integration"
      },
      "defaultDefaultValue": 1.2,
      "restricted": false
    },
    "hediet.vscode-drawio.globalVars": {
      "type": "object",
      "title": "Draw.io global variables.",
      "description": "Defines global variables for system-wide placeholders using a JSON structure with key, value pairs. Keep the number of global variables small.",
      "scope": 3,
      "source": {
        "id": "hediet.vscode-drawio",
        "displayName": "Draw.io Integration"
      },
      "default": {},
      "restricted": false
    },
    "hediet.vscode-drawio.resizeImages": {
      "type": [
        "boolean",
        "null"
      ],
      "title": "Draw.io resize images.",
      "description": "If set to true, images are resized automatically on paste. If not defined, the user will be asked to confirm the resize.",
      "default": null,
      "scope": 3,
      "source": {
        "id": "hediet.vscode-drawio",
        "displayName": "Draw.io Integration"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "pythonIndent.useTabOnHangingIndent": {
      "type": "boolean",
      "default": false,
      "description": "After creating a hanging indent, press tab to leave the indented section and go to the ending bracket.",
      "scope": 3,
      "source": {
        "id": "KevinRose.vsc-python-indent",
        "displayName": "Python Indent"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "pythonIndent.trimLinesWithOnlyWhitespace": {
      "type": "boolean",
      "default": false,
      "description": "Trims lines that contain only whitespace after pressing Enter on them.",
      "scope": 3,
      "source": {
        "id": "KevinRose.vsc-python-indent",
        "displayName": "Python Indent"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "pythonIndent.keepHangingBracketOnLine": {
      "type": "boolean",
      "default": false,
      "description": "When creating a hanging indent, do not put the closing bracket on its own line.",
      "scope": 3,
      "source": {
        "id": "KevinRose.vsc-python-indent",
        "displayName": "Python Indent"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "remote.SSH.defaultForwardedPorts": {
      "type": "array",
      "items": {
        "type": "object",
        "required": [
          "remotePort"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "remotePort": {
            "type": "number"
          },
          "localPort": {
            "type": "number"
          }
        }
      },
      "description": "A list of ports to forward when the connection is established.",
      "default": [],
      "scope": 3,
      "source": {
        "id": "ms-vscode-remote.remote-ssh",
        "displayName": "Remote - SSH"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "remote.SSH.remoteServerListenOnSocket": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "When true, the remote VS Code server will listen on a socket path instead of opening a port. Only valid for Linux and macOS remotes. After toggling this setting, run the command \"Kill VS Code Server on Host...\" for it to take effect. Requires OpenSSH 6.7+. Disables the \"local server\" connection multiplexing mode. Requires `AllowStreamLocalForwarding` to be enabled for the SSH server.",
      "scope": 3,
      "source": {
        "id": "ms-vscode-remote.remote-ssh",
        "displayName": "Remote - SSH"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "workbench.editor.autoLockGroups": {
      "type": "object",
      "description": "If an editor matching one of the listed types is opened as the first in an editor group and more than one group is open, the group is automatically locked. Locked groups will only be used for opening editors when explicitly chosen by a user gesture (for example drag and drop), but not by default. Consequently, the active editor in a locked group is less likely to be replaced accidentally with a different editor.",
      "properties": {
        "default": {
          "type": "boolean",
          "default": false,
          "description": "Text Editor"
        },
        "workbench.editorinputs.searchEditorInput": {
          "type": "boolean",
          "default": false,
          "description": "Search Editor"
        },
        "imagePreview.previewEditor": {
          "type": "boolean",
          "default": false,
          "description": "Image Preview"
        },
        "vscode.audioPreview": {
          "type": "boolean",
          "default": false,
          "description": "Audio Preview"
        },
        "vscode.videoPreview": {
          "type": "boolean",
          "default": false,
          "description": "Video Preview"
        },
        "jsProfileVisualizer.cpuprofile.table": {
          "type": "boolean",
          "default": false,
          "description": "CPU Profile Table Visualizer"
        },
        "jsProfileVisualizer.heapprofile.table": {
          "type": "boolean",
          "default": false,
          "description": "Heap Profile Table Visualizer"
        },
        "hediet.vscode-drawio": {
          "type": "boolean",
          "default": false,
          "description": "Draw.io (Binary)"
        },
        "hediet.vscode-drawio-text": {
          "type": "boolean",
          "default": false,
          "description": "Draw.io"
        },
        "terminalEditor": {
          "type": "boolean",
          "default": true,
          "description": "Terminal"
        },
        "jupyter-notebook": {
          "type": "boolean",
          "default": false,
          "description": "Jupyter Notebook"
        },
        "workbench.input.interactive": {
          "type": "boolean",
          "default": false,
          "description": "Interactive Window"
        },
        "mainThreadWebview-markdown.preview": {
          "type": "boolean",
          "default": false,
          "description": "Markdown Preview"
        }
      },
      "default": {
        "default": false,
        "workbench.editorinputs.searchEditorInput": false,
        "imagePreview.previewEditor": false,
        "vscode.audioPreview": false,
        "vscode.videoPreview": false,
        "jsProfileVisualizer.cpuprofile.table": false,
        "jsProfileVisualizer.heapprofile.table": false,
        "hediet.vscode-drawio": false,
        "hediet.vscode-drawio-text": false,
        "terminalEditor": true,
        "jupyter-notebook": false,
        "workbench.input.interactive": false,
        "mainThreadWebview-markdown.preview": false
      },
      "additionalProperties": false,
      "defaultDefaultValue": {
        "default": false,
        "workbench.editorinputs.searchEditorInput": false,
        "imagePreview.previewEditor": false,
        "vscode.audioPreview": false,
        "vscode.videoPreview": false,
        "jsProfileVisualizer.cpuprofile.table": false,
        "jsProfileVisualizer.heapprofile.table": false,
        "hediet.vscode-drawio": false,
        "hediet.vscode-drawio-text": false,
        "terminalEditor": true,
        "jupyter-notebook": false,
        "workbench.input.interactive": false,
        "mainThreadWebview-markdown.preview": false
      },
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.defaultBinaryEditor": {
      "type": "string",
      "default": "",
      "enum": [
        "default",
        "workbench.editorinputs.searchEditorInput",
        "vscode.markdown.preview.editor",
        "imagePreview.previewEditor",
        "vscode.audioPreview",
        "vscode.videoPreview",
        "jsProfileVisualizer.cpuprofile.table",
        "jsProfileVisualizer.heapprofile.table",
        "hediet.vscode-drawio",
        "hediet.vscode-drawio-text",
        "jupyter-notebook",
        ""
      ],
      "description": "The default editor for files detected as binary. If undefined, the user will be presented with a picker.",
      "defaultDefaultValue": "",
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.defaultProfile.linux": {
      "restricted": true,
      "markdownDescription": "The default profile used on Linux. This setting will currently be ignored if either `terminal.integrated.shell.linux` or `terminal.integrated.shellArgs.linux` are set.",
      "type": [
        "string",
        "null"
      ],
      "default": null,
      "enum": [
        null,
        "bash",
        "zsh",
        "fish",
        "JavaScript Debug Terminal"
      ],
      "markdownEnumDescriptions": [
        "Automatically detect the default",
        "$(terminal-bash) bash\n- path: /usr/bin/bash",
        "$(terminal) zsh\n- path: /usr/bin/zsh",
        "$(terminal) fish\n- path: /usr/bin/fish",
        "$($(debug)) JavaScript Debug Terminal\n- extensionIdentifier: ms-vscode.js-debug"
      ],
      "defaultDefaultValue": null,
      "scope": 3
    },
    "terminal.integrated.defaultProfile.osx": {
      "restricted": true,
      "markdownDescription": "The default profile used on macOS. This setting will currently be ignored if either `terminal.integrated.shell.osx` or `terminal.integrated.shellArgs.osx` are set.",
      "type": [
        "string",
        "null"
      ],
      "default": null,
      "defaultDefaultValue": null,
      "scope": 3
    },
    "terminal.integrated.defaultProfile.windows": {
      "restricted": true,
      "markdownDescription": "The default profile used on Windows. This setting will currently be ignored if either `terminal.integrated.shell.windows` or `terminal.integrated.shellArgs.windows` are set.",
      "type": [
        "string",
        "null"
      ],
      "default": null,
      "defaultDefaultValue": null,
      "scope": 3
    },
    "tailwindCSS.emmetCompletions": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Enable class name completions when using Emmet-style syntax, for example `div.bg-red-500.uppercase`",
      "scope": 3,
      "source": {
        "id": "bradlc.vscode-tailwindcss",
        "displayName": "Tailwind CSS IntelliSense"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "tailwindCSS.includeLanguages": {
      "type": "object",
      "additionalProperties": {
        "type": "string"
      },
      "default": {},
      "markdownDescription": "Enable features in languages that are not supported by default. Add a mapping here between the new language and an already supported language.\n E.g.: `{\"plaintext\": \"html\"}`",
      "scope": 3,
      "source": {
        "id": "bradlc.vscode-tailwindcss",
        "displayName": "Tailwind CSS IntelliSense"
      },
      "defaultDefaultValue": {},
      "restricted": false
    },
    "tailwindCSS.files.exclude": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "default": [
        "**/.git/**",
        "**/node_modules/**",
        "**/.hg/**",
        "**/.svn/**"
      ],
      "markdownDescription": "Configure glob patterns to exclude from all IntelliSense features. Inherits all glob patterns from the `#files.exclude#` setting.",
      "scope": 3,
      "source": {
        "id": "bradlc.vscode-tailwindcss",
        "displayName": "Tailwind CSS IntelliSense"
      },
      "defaultDefaultValue": [
        "**/.git/**",
        "**/node_modules/**",
        "**/.hg/**",
        "**/.svn/**"
      ],
      "restricted": false
    },
    "tailwindCSS.classAttributes": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "default": [
        "class",
        "className",
        "ngClass"
      ],
      "markdownDescription": "The HTML attributes for which to provide class completions, hover previews, linting etc.",
      "scope": 3,
      "source": {
        "id": "bradlc.vscode-tailwindcss",
        "displayName": "Tailwind CSS IntelliSense"
      },
      "defaultDefaultValue": [
        "class",
        "className",
        "ngClass"
      ],
      "restricted": false
    },
    "tailwindCSS.experimental.configFile": {
      "type": [
        "null",
        "string",
        "object"
      ],
      "default": null,
      "markdownDescription": "Manually specify the Tailwind config file or files that should be read to provide IntelliSense features. Can either be a single string value, or an object where each key is a config file path and each value is a glob or array of globs representing the set of files that the config file applies to.",
      "scope": 3,
      "source": {
        "id": "bradlc.vscode-tailwindcss",
        "displayName": "Tailwind CSS IntelliSense"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "tailwindCSS.showPixelEquivalents": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Show `px` equivalents for `rem` CSS values.",
      "scope": 3,
      "source": {
        "id": "bradlc.vscode-tailwindcss",
        "displayName": "Tailwind CSS IntelliSense"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "tailwindCSS.rootFontSize": {
      "type": "number",
      "default": 16,
      "markdownDescription": "Root font size in pixels. Used to convert `rem` CSS values to their `px` equivalents. See `#tailwindCSS.showPixelEquivalents#`.",
      "scope": 3,
      "source": {
        "id": "bradlc.vscode-tailwindcss",
        "displayName": "Tailwind CSS IntelliSense"
      },
      "defaultDefaultValue": 16,
      "restricted": false
    },
    "tailwindCSS.inspectPort": {
      "type": [
        "number",
        "null"
      ],
      "default": null,
      "markdownDescription": "Enable the Node.js inspector agent for the language server and listen on the specified port.",
      "scope": 3,
      "source": {
        "id": "bradlc.vscode-tailwindcss",
        "displayName": "Tailwind CSS IntelliSense"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "githubPullRequests.pullRequestTitle": {
      "deprecationMessage": "The pull request title now uses the same defaults as GitHub, and can be edited before create.",
      "type": "string",
      "enum": [
        "commit",
        "branch",
        "custom",
        "ask"
      ],
      "enumDescriptions": [
        "Use the latest commit message",
        "Use the branch name",
        "Specify a custom title",
        "Ask which of the above methods to use"
      ],
      "default": "ask",
      "description": "The title used when creating pull requests.",
      "scope": 3,
      "source": {
        "id": "GitHub.vscode-pull-request-github",
        "displayName": "GitHub Pull Requests and Issues"
      },
      "defaultDefaultValue": "ask",
      "restricted": false
    },
    "githubPullRequests.pullRequestDescription": {
      "type": "string",
      "enum": [
        "template",
        "commit"
      ],
      "enumDescriptions": [
        "Use a pull request template and commit description, or just use the commit description if no templates were found",
        "Use the latest commit message only"
      ],
      "default": "template",
      "description": "The description used when creating pull requests.",
      "scope": 3,
      "source": {
        "id": "GitHub.vscode-pull-request-github",
        "displayName": "GitHub Pull Requests and Issues"
      },
      "defaultDefaultValue": "template",
      "restricted": false
    },
    "githubPullRequests.createDraft": {
      "type": "boolean",
      "default": false,
      "description": "Whether the \"Draft\" checkbox will be checked by default when creating a pull request.",
      "scope": 3,
      "source": {
        "id": "GitHub.vscode-pull-request-github",
        "displayName": "GitHub Pull Requests and Issues"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "githubPullRequests.logLevel": {
      "type": "string",
      "enum": [
        "info",
        "debug",
        "off"
      ],
      "default": "info",
      "description": "Logging for GitHub Pull Request extension. The log is emitted to the output channel named as GitHub Pull Request.",
      "markdownDeprecationMessage": "Log level is now controlled by the [Developer: Set Log Level...](command:workbench.action.setLogLevel) command. You can set the log level for the current session and also the default log level from there.",
      "scope": 3,
      "source": {
        "id": "GitHub.vscode-pull-request-github",
        "displayName": "GitHub Pull Requests and Issues"
      },
      "defaultDefaultValue": "info",
      "restricted": false,
      "deprecationMessage": "Log level is now controlled by the [Developer: Set Log Level...](command:workbench.action.setLogLevel) command. You can set the log level for the current session and also the default log level from there."
    },
    "githubPullRequests.remotes": {
      "type": "array",
      "default": [
        "origin",
        "upstream"
      ],
      "items": {
        "type": "string"
      },
      "markdownDescription": "List of remotes, by name, to fetch pull requests from.",
      "scope": 3,
      "source": {
        "id": "GitHub.vscode-pull-request-github",
        "displayName": "GitHub Pull Requests and Issues"
      },
      "defaultDefaultValue": [
        "origin",
        "upstream"
      ],
      "restricted": false
    },
    "githubPullRequests.includeRemotes": {
      "type": "string",
      "enum": [
        "default",
        "all"
      ],
      "default": "default",
      "deprecationMessage": "The setting `githubPullRequests.includeRemotes` has been deprecated. Use `githubPullRequests.remotes` to configure what remotes are shown.",
      "description": "By default we only support remotes created by users. If you want to see pull requests from remotes this extension created for pull requests, change this setting to 'all'.",
      "scope": 3,
      "source": {
        "id": "GitHub.vscode-pull-request-github",
        "displayName": "GitHub Pull Requests and Issues"
      },
      "defaultDefaultValue": "default",
      "restricted": false
    },
    "githubPullRequests.defaultMergeMethod": {
      "type": "string",
      "enum": [
        "merge",
        "squash",
        "rebase"
      ],
      "default": "merge",
      "description": "The method to use when merging pull requests.",
      "scope": 3,
      "source": {
        "id": "GitHub.vscode-pull-request-github",
        "displayName": "GitHub Pull Requests and Issues"
      },
      "defaultDefaultValue": "merge",
      "restricted": false
    },
    "githubPullRequests.showInSCM": {
      "type": "boolean",
      "default": false,
      "deprecationMessage": "This setting is deprecated. Views can now be dragged to any location.",
      "description": "When true, show GitHub Pull Requests within the SCM viewlet. Otherwise show a separate view container for them.",
      "scope": 3,
      "source": {
        "id": "GitHub.vscode-pull-request-github",
        "displayName": "GitHub Pull Requests and Issues"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "githubPullRequests.notifications": {
      "type": "string",
      "enum": [
        "pullRequests",
        "off"
      ],
      "default": "off",
      "description": "If GitHub notifications should be shown to the user.",
      "scope": 3,
      "source": {
        "id": "GitHub.vscode-pull-request-github",
        "displayName": "GitHub Pull Requests and Issues"
      },
      "defaultDefaultValue": "off",
      "restricted": false
    },
    "githubPullRequests.fileListLayout": {
      "type": "string",
      "enum": [
        "flat",
        "tree"
      ],
      "default": "tree",
      "description": "The layout to use when displaying changed files list.",
      "scope": 3,
      "source": {
        "id": "GitHub.vscode-pull-request-github",
        "displayName": "GitHub Pull Requests and Issues"
      },
      "defaultDefaultValue": "tree",
      "restricted": false
    },
    "githubPullRequests.defaultDeletionMethod.selectLocalBranch": {
      "type": "boolean",
      "default": true,
      "description": "When true, the option to delete the local branch will be selected by default when deleting a branch from a pull request.",
      "scope": 3,
      "source": {
        "id": "GitHub.vscode-pull-request-github",
        "displayName": "GitHub Pull Requests and Issues"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "githubPullRequests.defaultDeletionMethod.selectRemote": {
      "type": "boolean",
      "default": true,
      "description": "When true, the option to delete the remote will be selected by default when deleting a branch from a pull request.",
      "scope": 3,
      "source": {
        "id": "GitHub.vscode-pull-request-github",
        "displayName": "GitHub Pull Requests and Issues"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "githubPullRequests.terminalLinksHandler": {
      "type": "string",
      "enum": [
        "github",
        "vscode",
        "ask"
      ],
      "enumDescriptions": [
        "Create the pull request on GitHub",
        "Create the pull request in VS Code",
        "Ask which method to use"
      ],
      "default": "ask",
      "description": "Default handler for terminal links.",
      "scope": 3,
      "source": {
        "id": "GitHub.vscode-pull-request-github",
        "displayName": "GitHub Pull Requests and Issues"
      },
      "defaultDefaultValue": "ask",
      "restricted": false
    },
    "githubPullRequests.createOnPublishBranch": {
      "type": "string",
      "enum": [
        "never",
        "ask"
      ],
      "enumDescriptions": [
        "Never create a pull request when a branch is published.",
        "Ask if you want to create a pull request when a branch is published."
      ],
      "default": "ask",
      "description": "Create a pull request when a branch is published.",
      "scope": 3,
      "source": {
        "id": "GitHub.vscode-pull-request-github",
        "displayName": "GitHub Pull Requests and Issues"
      },
      "defaultDefaultValue": "ask",
      "restricted": false
    },
    "githubPullRequests.commentExpandState": {
      "type": "string",
      "enum": [
        "expandUnresolved",
        "collapseAll"
      ],
      "enumDescriptions": [
        "All unresolved comments will be expanded.",
        "All comments will be collapsed"
      ],
      "default": "expandUnresolved",
      "description": "Controls whether comments are expanded when a document with comments is opened.",
      "scope": 3,
      "source": {
        "id": "GitHub.vscode-pull-request-github",
        "displayName": "GitHub Pull Requests and Issues"
      },
      "defaultDefaultValue": "expandUnresolved",
      "restricted": false
    },
    "githubPullRequests.useReviewMode": {
      "type": "object",
      "description": "Choose which pull request states will use review mode. \"Open\" pull requests will always use review mode.",
      "additionalProperties": false,
      "properties": {
        "merged": {
          "type": "boolean",
          "description": "Use review mode for merged pull requests.",
          "default": true
        },
        "closed": {
          "type": "boolean",
          "description": "Use review mode for closed pull requests. Merged pull requests are not considered \"closed\".",
          "default": false
        }
      },
      "required": [
        "merged",
        "closed"
      ],
      "default": {
        "merged": true,
        "closed": false
      },
      "scope": 3,
      "source": {
        "id": "GitHub.vscode-pull-request-github",
        "displayName": "GitHub Pull Requests and Issues"
      },
      "defaultDefaultValue": {
        "merged": true,
        "closed": false
      },
      "restricted": false
    },
    "githubPullRequests.assignCreated": {
      "type": "string",
      "description": "All pull requests created with this extension will be assigned to this user. To assign to yourself, use the '${user}' variable.",
      "scope": 3,
      "source": {
        "id": "GitHub.vscode-pull-request-github",
        "displayName": "GitHub Pull Requests and Issues"
      },
      "default": "",
      "restricted": false
    },
    "githubPullRequests.pushBranch": {
      "type": "string",
      "enum": [
        "prompt",
        "always"
      ],
      "default": "prompt",
      "enumDescriptions": [
        "Prompt to push the branch when creating a PR and the \"from\" branch is not available on the remote.",
        "Always push the branch when creating a PR and the \"from\" branch is not available on the remote."
      ],
      "description": "Push the \"from\" branch when creating a PR and the \"from\" branch is not available on the remote.",
      "scope": 3,
      "source": {
        "id": "GitHub.vscode-pull-request-github",
        "displayName": "GitHub Pull Requests and Issues"
      },
      "defaultDefaultValue": "prompt",
      "restricted": false
    },
    "githubPullRequests.pullBranch": {
      "type": "string",
      "enum": [
        "prompt",
        "never",
        "always"
      ],
      "default": "prompt",
      "markdownEnumDescriptions": [
        "Prompt to pull a PR branch when changes are detected in the PR.",
        "Never pull a PR branch when changes are detected in the PR.",
        "Always pull a PR branch when changes are detected in the PR. When `\"git.autoStash\": true` this will instead `prompt` to prevent unexpected file changes."
      ],
      "description": "Pull changes from the remote when a PR branch is checked out locally. Changes are detected when the PR is manually refreshed and during periodic background updates.",
      "scope": 3,
      "source": {
        "id": "GitHub.vscode-pull-request-github",
        "displayName": "GitHub Pull Requests and Issues"
      },
      "defaultDefaultValue": "prompt",
      "restricted": false
    },
    "githubPullRequests.ignoredPullRequestBranches": {
      "type": "array",
      "default": [],
      "items": {
        "type": "string",
        "description": "Branch name"
      },
      "description": "Prevents branches that are associated with a pull request from being automatically detected. This will prevent review mode from being entered on these branches.",
      "scope": 3,
      "source": {
        "id": "GitHub.vscode-pull-request-github",
        "displayName": "GitHub Pull Requests and Issues"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "githubPullRequests.overrideDefaultBranch": {
      "type": "string",
      "description": "The default branch for a repository is set on github.com. With this setting, you can override that default with another branch.",
      "scope": 3,
      "source": {
        "id": "GitHub.vscode-pull-request-github",
        "displayName": "GitHub Pull Requests and Issues"
      },
      "default": "",
      "restricted": false
    },
    "githubPullRequests.postCreate": {
      "type": "string",
      "enum": [
        "none",
        "openOverview",
        "checkoutDefaultBranch"
      ],
      "description": "The action to take after creating a pull request.",
      "default": "openOverview",
      "enumDescriptions": [
        "No action",
        "Open the overview page of the pull request",
        "Checkout the default branch of the repository"
      ],
      "scope": 3,
      "source": {
        "id": "GitHub.vscode-pull-request-github",
        "displayName": "GitHub Pull Requests and Issues"
      },
      "defaultDefaultValue": "openOverview",
      "restricted": false
    },
    "githubPullRequests.defaultCommentType": {
      "type": "string",
      "enum": [
        "single",
        "review"
      ],
      "default": "single",
      "description": "The default comment type to use when submitting a comment and there is no active review",
      "enumDescriptions": [
        "Submits the comment as a single comment that will be immediately visible to other users",
        "Submits the comment as a review comment that will be visible to other users once the review is submitted"
      ],
      "scope": 3,
      "source": {
        "id": "GitHub.vscode-pull-request-github",
        "displayName": "GitHub Pull Requests and Issues"
      },
      "defaultDefaultValue": "single",
      "restricted": false
    },
    "githubPullRequests.quickDiff": {
      "type": "boolean",
      "description": "Enables quick diff in the editor gutter for checked-out pull requests. Requires a reload to take effect",
      "default": false,
      "scope": 3,
      "source": {
        "id": "GitHub.vscode-pull-request-github",
        "displayName": "GitHub Pull Requests and Issues"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "githubIssues.ignoreMilestones": {
      "type": "array",
      "default": [],
      "description": "An array of milestones titles to never show issues from.",
      "scope": 3,
      "source": {
        "id": "GitHub.vscode-pull-request-github",
        "displayName": "GitHub Pull Requests and Issues"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "githubIssues.createIssueTriggers": {
      "type": "array",
      "items": {
        "type": "string",
        "description": "String that enables the 'Create issue from comment' code action. Should not contain whitespace."
      },
      "default": [
        "TODO",
        "todo",
        "BUG",
        "FIXME",
        "ISSUE",
        "HACK"
      ],
      "description": "Strings that will cause the 'Create issue from comment' code action to show.",
      "scope": 3,
      "source": {
        "id": "GitHub.vscode-pull-request-github",
        "displayName": "GitHub Pull Requests and Issues"
      },
      "defaultDefaultValue": [
        "TODO",
        "todo",
        "BUG",
        "FIXME",
        "ISSUE",
        "HACK"
      ],
      "restricted": false
    },
    "githubIssues.createInsertFormat": {
      "type": "string",
      "enum": [
        "number",
        "url"
      ],
      "default": "number",
      "description": "Controls whether an issue number (ex. #1234) or a full url (ex. https://github.com/owner/name/issues/1234) is inserted when the Create Issue code action is run.",
      "scope": 3,
      "source": {
        "id": "GitHub.vscode-pull-request-github",
        "displayName": "GitHub Pull Requests and Issues"
      },
      "defaultDefaultValue": "number",
      "restricted": false
    },
    "githubIssues.issueCompletions.enabled": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether completion suggestions are shown for issues.",
      "scope": 3,
      "source": {
        "id": "GitHub.vscode-pull-request-github",
        "displayName": "GitHub Pull Requests and Issues"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "githubIssues.userCompletions.enabled": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether completion suggestions are shown for users.",
      "scope": 3,
      "source": {
        "id": "GitHub.vscode-pull-request-github",
        "displayName": "GitHub Pull Requests and Issues"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "githubIssues.ignoreCompletionTrigger": {
      "type": "array",
      "items": {
        "type": "string",
        "description": "Language that issue completions should not trigger on '#'."
      },
      "default": [
        "coffeescript",
        "diff",
        "dockerfile",
        "dockercompose",
        "ignore",
        "ini",
        "julia",
        "makefile",
        "perl",
        "powershell",
        "python",
        "r",
        "ruby",
        "shellscript",
        "yaml"
      ],
      "description": "Languages that the '#' character should not be used to trigger issue completion suggestions.",
      "scope": 3,
      "source": {
        "id": "GitHub.vscode-pull-request-github",
        "displayName": "GitHub Pull Requests and Issues"
      },
      "defaultDefaultValue": [
        "coffeescript",
        "diff",
        "dockerfile",
        "dockercompose",
        "ignore",
        "ini",
        "julia",
        "makefile",
        "perl",
        "powershell",
        "python",
        "r",
        "ruby",
        "shellscript",
        "yaml"
      ],
      "restricted": false
    },
    "githubIssues.ignoreUserCompletionTrigger": {
      "type": "array",
      "items": {
        "type": "string",
        "description": "Language that user completions should not trigger on '@'."
      },
      "default": [
        "python"
      ],
      "description": "Languages that the '@' character should not be used to trigger user completion suggestions.",
      "scope": 3,
      "source": {
        "id": "GitHub.vscode-pull-request-github",
        "displayName": "GitHub Pull Requests and Issues"
      },
      "defaultDefaultValue": [
        "python"
      ],
      "restricted": false
    },
    "githubIssues.issueBranchTitle": {
      "type": "string",
      "default": "${user}/issue${issueNumber}",
      "markdownDescription": "Advanced settings for the name of the branch that is created when you start working on an issue. \n- `${user}` will be replace with the currently logged in username \n- `${issueNumber}` will be replaced with the current issue number \n- `${sanitizedIssueTitle}` will be replaced with the issue title, with all spaces and unsupported characters (https://git-scm.com/docs/git-check-ref-format) removed",
      "scope": 3,
      "source": {
        "id": "GitHub.vscode-pull-request-github",
        "displayName": "GitHub Pull Requests and Issues"
      },
      "defaultDefaultValue": "${user}/issue${issueNumber}",
      "restricted": false
    },
    "githubIssues.useBranchForIssues": {
      "type": "string",
      "enum": [
        "on",
        "off",
        "prompt"
      ],
      "enumDescriptions": [
        "A branch will always be checked out when you start working on an issue. If the branch doesn't exist, it will be created.",
        "A branch will not be created when you start working on an issue. If you have worked on an issue before and a branch was created for it, that same branch will be checked out.",
        "A prompt will show for setting the name of the branch that will be created and checked out."
      ],
      "default": "on",
      "description": "Determines whether a branch should be checked out when working on an issue. To configure the name of the branch, set `githubIssues.issueBranchTitle`.",
      "scope": 3,
      "source": {
        "id": "GitHub.vscode-pull-request-github",
        "displayName": "GitHub Pull Requests and Issues"
      },
      "defaultDefaultValue": "on",
      "restricted": false
    },
    "githubIssues.issueCompletionFormatScm": {
      "type": "string",
      "default": "${issueTitle} ${issueNumberLabel}",
      "markdownDescription": "Sets the format of issue completions in the SCM inputbox. \n- `${user}` will be replace with the currently logged in username \n- `${issueNumber}` will be replaced with the current issue number \n- `${issueNumberLabel}` will be replaced with a label formatted as #number or owner/repository#number, depending on whether the issue is in the current repository",
      "scope": 3,
      "source": {
        "id": "GitHub.vscode-pull-request-github",
        "displayName": "GitHub Pull Requests and Issues"
      },
      "defaultDefaultValue": "${issueTitle} ${issueNumberLabel}",
      "restricted": false
    },
    "githubIssues.workingIssueFormatScm": {
      "type": "string",
      "default": "${issueTitle} \nFixes ${issueNumberLabel}",
      "markdownDescription": "Sets the format of the commit message that is set in the SCM inputbox when you **Start Working on an Issue**. Defaults to `${issueTitle} \nFixes #${issueNumber}`",
      "editPresentation": "multilineText",
      "scope": 3,
      "source": {
        "id": "GitHub.vscode-pull-request-github",
        "displayName": "GitHub Pull Requests and Issues"
      },
      "defaultDefaultValue": "${issueTitle} \nFixes ${issueNumberLabel}",
      "restricted": false
    },
    "githubIssues.assignWhenWorking": {
      "type": "boolean",
      "default": true,
      "description": "Assigns the issue you're working on to you. Only applies when the issue you're working on is in a repo you currently have open.",
      "scope": 3,
      "source": {
        "id": "GitHub.vscode-pull-request-github",
        "displayName": "GitHub Pull Requests and Issues"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "githubPullRequests.focusedMode": {
      "properties": {
        "oneOf": [
          {
            "type": "boolean"
          },
          {
            "type": "string"
          }
        ]
      },
      "enum": [
        "firstDiff",
        "overview",
        false
      ],
      "default": "firstDiff",
      "description": "The layout to use when a pull request is checked out. Set to false to prevent layout changes.",
      "scope": 3,
      "source": {
        "id": "GitHub.vscode-pull-request-github",
        "displayName": "GitHub Pull Requests and Issues"
      },
      "defaultDefaultValue": "firstDiff",
      "restricted": false
    },
    "redhat.telemetry.enabled": {
      "type": "boolean",
      "default": null,
      "markdownDescription": "Enable usage data and errors to be sent to Red Hat servers. Read our [privacy statement](https://developers.redhat.com/article/tool-data-collection).",
      "scope": 3,
      "tags": [
        "telemetry",
        "usesOnlineServices"
      ],
      "source": {
        "id": "redhat.vscode-yaml",
        "displayName": "YAML"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "yaml.yamlVersion": {
      "type": "string",
      "default": "1.2",
      "enum": [
        "1.1",
        "1.2"
      ],
      "markdownDescription": "Default YAML spec version",
      "scope": 3,
      "source": {
        "id": "redhat.vscode-yaml",
        "displayName": "YAML"
      },
      "defaultDefaultValue": "1.2",
      "restricted": false
    },
    "yaml.trace.server": {
      "type": "string",
      "enum": [
        "off",
        "messages",
        "verbose"
      ],
      "default": "off",
      "description": "Traces the communication between VSCode and the YAML language service.",
      "scope": 3,
      "source": {
        "id": "redhat.vscode-yaml",
        "displayName": "YAML"
      },
      "defaultDefaultValue": "off",
      "restricted": false
    },
    "yaml.schemas": {
      "type": "object",
      "default": {},
      "description": "Associate schemas to YAML files in the current workspace",
      "scope": 3,
      "source": {
        "id": "redhat.vscode-yaml",
        "displayName": "YAML"
      },
      "defaultDefaultValue": {},
      "restricted": false
    },
    "yaml.format.enable": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable default YAML formatter",
      "scope": 3,
      "source": {
        "id": "redhat.vscode-yaml",
        "displayName": "YAML"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "yaml.format.singleQuote": {
      "type": "boolean",
      "default": false,
      "description": "Use single quotes instead of double quotes",
      "scope": 3,
      "source": {
        "id": "redhat.vscode-yaml",
        "displayName": "YAML"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "yaml.format.bracketSpacing": {
      "type": "boolean",
      "default": true,
      "description": "Print spaces between brackets in objects",
      "scope": 3,
      "source": {
        "id": "redhat.vscode-yaml",
        "displayName": "YAML"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "yaml.format.proseWrap": {
      "type": "string",
      "default": "preserve",
      "enum": [
        "preserve",
        "never",
        "always"
      ],
      "description": "Always: wrap prose if it exceeds the print width, Never: never wrap the prose, Preserve: wrap prose as-is",
      "scope": 3,
      "source": {
        "id": "redhat.vscode-yaml",
        "displayName": "YAML"
      },
      "defaultDefaultValue": "preserve",
      "restricted": false
    },
    "yaml.format.printWidth": {
      "type": "integer",
      "default": 80,
      "description": "Specify the line length that the printer will wrap on",
      "scope": 3,
      "source": {
        "id": "redhat.vscode-yaml",
        "displayName": "YAML"
      },
      "defaultDefaultValue": 80,
      "restricted": false
    },
    "yaml.validate": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable validation feature",
      "scope": 3,
      "source": {
        "id": "redhat.vscode-yaml",
        "displayName": "YAML"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "yaml.hover": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable hover feature",
      "scope": 3,
      "source": {
        "id": "redhat.vscode-yaml",
        "displayName": "YAML"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "yaml.completion": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable completion feature",
      "scope": 3,
      "source": {
        "id": "redhat.vscode-yaml",
        "displayName": "YAML"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "yaml.customTags": {
      "type": "array",
      "default": [],
      "description": "Custom tags for the parser to use",
      "scope": 3,
      "source": {
        "id": "redhat.vscode-yaml",
        "displayName": "YAML"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "yaml.schemaStore.enable": {
      "type": "boolean",
      "default": true,
      "description": "Automatically pull available YAML schemas from JSON Schema Store",
      "scope": 3,
      "source": {
        "id": "redhat.vscode-yaml",
        "displayName": "YAML"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "yaml.schemaStore.url": {
      "type": "string",
      "default": "https://www.schemastore.org/api/json/catalog.json",
      "description": "URL of schema store catalog to use",
      "scope": 3,
      "source": {
        "id": "redhat.vscode-yaml",
        "displayName": "YAML"
      },
      "defaultDefaultValue": "https://www.schemastore.org/api/json/catalog.json",
      "restricted": false
    },
    "yaml.disableAdditionalProperties": {
      "type": "boolean",
      "default": false,
      "description": "Globally set additionalProperties to false for all objects. So if its true, no extra properties are allowed inside yaml.",
      "scope": 3,
      "source": {
        "id": "redhat.vscode-yaml",
        "displayName": "YAML"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "yaml.disableDefaultProperties": {
      "type": "boolean",
      "default": false,
      "description": "Disable adding not required properties with default values into completion text.",
      "scope": 3,
      "source": {
        "id": "redhat.vscode-yaml",
        "displayName": "YAML"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "yaml.maxItemsComputed": {
      "type": "integer",
      "default": 5000,
      "description": "The maximum number of outline symbols and folding regions computed (limited for performance reasons).",
      "scope": 3,
      "source": {
        "id": "redhat.vscode-yaml",
        "displayName": "YAML"
      },
      "defaultDefaultValue": 5000,
      "restricted": false
    },
    "yaml.suggest.parentSkeletonSelectedFirst": {
      "type": "boolean",
      "default": false,
      "description": "If true, the user must select some parent skeleton first before autocompletion starts to suggest the rest of the properties. When yaml object is not empty, autocompletion ignores this setting and returns all properties and skeletons",
      "scope": 3,
      "source": {
        "id": "redhat.vscode-yaml",
        "displayName": "YAML"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "yaml.style.flowMapping": {
      "type": "string",
      "enum": [
        "allow",
        "forbid"
      ],
      "default": "allow",
      "description": "Forbid flow style mappings",
      "scope": 3,
      "source": {
        "id": "redhat.vscode-yaml",
        "displayName": "YAML"
      },
      "defaultDefaultValue": "allow",
      "restricted": false
    },
    "yaml.style.flowSequence": {
      "type": "string",
      "enum": [
        "allow",
        "forbid"
      ],
      "default": "allow",
      "description": "Forbid flow style sequences",
      "scope": 3,
      "source": {
        "id": "redhat.vscode-yaml",
        "displayName": "YAML"
      },
      "defaultDefaultValue": "allow",
      "restricted": false
    },
    "yaml.keyOrdering": {
      "type": "boolean",
      "default": false,
      "description": "Enforces alphabetical ordering of keys in mappings when set to true",
      "scope": 3,
      "source": {
        "id": "redhat.vscode-yaml",
        "displayName": "YAML"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "yaml.recommendations.show": {
      "type": "boolean",
      "default": "true",
      "description": "Suggest additional extensions based on YAML usage.",
      "scope": 3,
      "source": {
        "id": "redhat.vscode-yaml",
        "displayName": "YAML"
      },
      "defaultDefaultValue": "true",
      "restricted": false
    },
    "svelte.enable-ts-plugin": {
      "type": "boolean",
      "default": false,
      "title": "Enable TypeScript Svelte plugin",
      "description": "Enables a TypeScript plugin which provides intellisense for Svelte files inside TS/JS files.",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "svelte.ask-to-enable-ts-plugin": {
      "type": "boolean",
      "default": true,
      "title": "Ask to enable TypeScript Svelte plugin",
      "description": "Ask on startup to enable the TypeScript plugin.",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svelte.language-server.port": {
      "type": "number",
      "title": "Language Server Port",
      "description": "- You normally don't set this - At which port to spawn the language server. Can be used for attaching to the process for debugging / profiling. If you experience crashes due to \"port already in use\", try setting the port. -1 = default port is used.",
      "default": -1,
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": -1,
      "restricted": false
    },
    "svelte.language-server.debug": {
      "type": "boolean",
      "title": "Language Server Debug Mode",
      "description": "- You normally don't set this - Enable more verbose logging for the language server useful for debugging language server execution.",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "default": false,
      "restricted": false
    },
    "svelte.trace.server": {
      "type": "string",
      "enum": [
        "off",
        "messages",
        "verbose"
      ],
      "default": "off",
      "description": "Traces the communication between VS Code and the Svelte Language Server.",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": "off",
      "restricted": false
    },
    "svelte.ui.svelteKitFilesContextMenu.enable": {
      "type": "string",
      "default": "auto",
      "enum": [
        "auto",
        "never",
        "always"
      ],
      "description": "Show a context menu to generate SvelteKit files. \"always\" to always show it. \"never\" to always disable it. \"auto\" to show it when in a SvelteKit project. ",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": "auto",
      "restricted": false
    },
    "svelte.plugin.typescript.enable": {
      "type": "boolean",
      "default": true,
      "title": "TypeScript",
      "description": "Enable the TypeScript plugin",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svelte.plugin.typescript.diagnostics.enable": {
      "type": "boolean",
      "default": true,
      "title": "TypeScript: Diagnostics",
      "description": "Enable diagnostic messages for TypeScript",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svelte.plugin.typescript.hover.enable": {
      "type": "boolean",
      "default": true,
      "title": "TypeScript: Hover Info",
      "description": "Enable hover info for TypeScript",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svelte.plugin.typescript.documentSymbols.enable": {
      "type": "boolean",
      "default": true,
      "title": "TypeScript: Symbols in Outline",
      "description": "Enable document symbols for TypeScript",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svelte.plugin.typescript.completions.enable": {
      "type": "boolean",
      "default": true,
      "title": "TypeScript: Completions",
      "description": "Enable completions for TypeScript",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svelte.plugin.typescript.codeActions.enable": {
      "type": "boolean",
      "default": true,
      "title": "TypeScript: Code Actions",
      "description": "Enable code actions for TypeScript",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svelte.plugin.typescript.selectionRange.enable": {
      "type": "boolean",
      "default": true,
      "title": "TypeScript: Selection Range",
      "description": "Enable selection range for TypeScript",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svelte.plugin.typescript.signatureHelp.enable": {
      "type": "boolean",
      "default": true,
      "title": "TypeScript: Signature Help",
      "description": "Enable signature help (parameter hints) for TypeScript",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svelte.plugin.typescript.semanticTokens.enable": {
      "type": "boolean",
      "default": true,
      "title": "TypeScript: Semantic Tokens",
      "description": "Enable semantic tokens (semantic highlight) for TypeScript.",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svelte.plugin.css.enable": {
      "type": "boolean",
      "default": true,
      "title": "CSS",
      "description": "Enable the CSS plugin",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svelte.plugin.css.globals": {
      "type": "string",
      "default": "",
      "title": "CSS: Global Files",
      "description": "Which css files should be checked for global variables (`--global-var: value;`). These variables are added to the css completions. String of comma-separated file paths or globs relative to workspace root.",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": "",
      "restricted": false
    },
    "svelte.plugin.css.diagnostics.enable": {
      "type": "boolean",
      "default": true,
      "title": "CSS: Diagnostics",
      "description": "Enable diagnostic messages for CSS",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svelte.plugin.css.hover.enable": {
      "type": "boolean",
      "default": true,
      "title": "CSS: Hover Info",
      "description": "Enable hover info for CSS",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svelte.plugin.css.completions.enable": {
      "type": "boolean",
      "default": true,
      "title": "CSS: Auto Complete",
      "description": "Enable auto completions for CSS",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svelte.plugin.css.completions.emmet": {
      "type": "boolean",
      "default": true,
      "title": "CSS: Include Emmet Completions",
      "description": "Enable emmet auto completions for CSS",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svelte.plugin.css.documentColors.enable": {
      "type": "boolean",
      "default": true,
      "title": "CSS: Document Colors",
      "description": "Enable document colors for CSS",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svelte.plugin.css.colorPresentations.enable": {
      "type": "boolean",
      "default": true,
      "title": "CSS: Color Picker",
      "description": "Enable color picker for CSS",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svelte.plugin.css.documentSymbols.enable": {
      "type": "boolean",
      "default": true,
      "title": "CSS: Symbols in Outline",
      "description": "Enable document symbols for CSS",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svelte.plugin.css.selectionRange.enable": {
      "type": "boolean",
      "default": true,
      "title": "CSS: SelectionRange",
      "description": "Enable selection range for CSS",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svelte.plugin.html.enable": {
      "type": "boolean",
      "default": true,
      "title": "HTML",
      "description": "Enable the HTML plugin",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svelte.plugin.html.hover.enable": {
      "type": "boolean",
      "default": true,
      "title": "HTML: Hover Info",
      "description": "Enable hover info for HTML",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svelte.plugin.html.completions.enable": {
      "type": "boolean",
      "default": true,
      "title": "HTML: Auto Complete",
      "description": "Enable auto completions for HTML",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svelte.plugin.html.completions.emmet": {
      "type": "boolean",
      "default": true,
      "title": "HTML: Include Emmet Completions",
      "description": "Enable emmet auto completions for HTML",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svelte.plugin.html.tagComplete.enable": {
      "type": "boolean",
      "default": true,
      "title": "HTML: Tag Auto Closing",
      "description": "Enable HTML tag auto closing",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svelte.plugin.html.documentSymbols.enable": {
      "type": "boolean",
      "default": true,
      "title": "HTML: Symbols in Outline",
      "description": "Enable document symbols for HTML",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svelte.plugin.html.linkedEditing.enable": {
      "type": "boolean",
      "default": true,
      "title": "HTML: Linked Editing",
      "description": "Enable Linked Editing for HTML",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svelte.plugin.svelte.enable": {
      "type": "boolean",
      "default": true,
      "title": "Svelte",
      "description": "Enable the Svelte plugin",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svelte.plugin.svelte.diagnostics.enable": {
      "type": "boolean",
      "default": true,
      "title": "Svelte: Diagnostics",
      "description": "Enable diagnostic messages for Svelte",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svelte.plugin.svelte.compilerWarnings": {
      "type": "object",
      "additionalProperties": {
        "type": "string",
        "enum": [
          "ignore",
          "error"
        ]
      },
      "default": {},
      "title": "Svelte: Compiler Warnings Settings",
      "description": "Svelte compiler warning codes to ignore or to treat as errors. Example: { 'css-unused-selector': 'ignore', 'unused-export-let': 'error'}",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": {},
      "restricted": false
    },
    "svelte.plugin.svelte.format.enable": {
      "type": "boolean",
      "default": true,
      "title": "Svelte: Format",
      "description": "Enable formatting for Svelte (includes css & js). You can set some formatting options through this extension. They will be ignored if there's any kind of configuration file, for example a `.prettierrc` file.",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svelte.plugin.svelte.format.config.svelteSortOrder": {
      "type": "string",
      "default": "options-scripts-markup-styles",
      "title": "Svelte Format: Sort Order",
      "description": "Format: join the keys `options`, `scripts`, `markup`, `styles` with a - in the order you want. This option is ignored if there's any kind of configuration file, for example a `.prettierrc` file.",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": "options-scripts-markup-styles",
      "restricted": false
    },
    "svelte.plugin.svelte.format.config.svelteStrictMode": {
      "type": "boolean",
      "default": false,
      "title": "Svelte Format: Strict Mode",
      "description": "More strict HTML syntax. This option is ignored if there's any kind of configuration file, for example a `.prettierrc` file.",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "svelte.plugin.svelte.format.config.svelteAllowShorthand": {
      "type": "boolean",
      "default": true,
      "title": "Svelte Format: Allow Shorthand",
      "description": "Option to enable/disable component attribute shorthand if attribute name and expression are the same. This option is ignored if there's any kind of configuration file, for example a `.prettierrc` file.",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svelte.plugin.svelte.format.config.svelteBracketNewLine": {
      "type": "boolean",
      "default": true,
      "title": "Svelte Format: Bracket New Line",
      "description": "Put the `>` of a multiline element on a new line. This option is ignored if there's any kind of configuration file, for example a `.prettierrc` file.",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svelte.plugin.svelte.format.config.svelteIndentScriptAndStyle": {
      "type": "boolean",
      "default": true,
      "title": "Svelte Format: Indent Script And Style",
      "description": "Whether or not to indent code inside `<script>` and `<style>` tags. This option is ignored if there's any kind of configuration file, for example a `.prettierrc` file.",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svelte.plugin.svelte.format.config.printWidth": {
      "type": "number",
      "default": 80,
      "title": "Svelte Format: Print Width",
      "description": "Maximum line width after which code is tried to be broken up. This is a Prettier core option. If you have the Prettier extension installed, this option is ignored and the corresponding option of that extension is used instead. This option is also ignored if there's any kind of configuration file, for example a `.prettierrc` file.",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": 80,
      "restricted": false
    },
    "svelte.plugin.svelte.format.config.singleQuote": {
      "type": "boolean",
      "default": false,
      "title": "Svelte Format: Quotes",
      "description": "Use single quotes instead of double quotes, where possible. This is a Prettier core option. If you have the Prettier extension installed, this option is ignored and the corresponding option of that extension is used instead. This option is also ignored if there's any kind of configuration file, for example a `.prettierrc` file.",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "svelte.plugin.svelte.completions.enable": {
      "type": "boolean",
      "default": true,
      "title": "Svelte: Completions",
      "description": "Enable auto completions for Svelte",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svelte.plugin.svelte.hover.enable": {
      "type": "boolean",
      "default": true,
      "title": "Svelte: Hover",
      "description": "Enable hover information for Svelte",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svelte.plugin.svelte.codeActions.enable": {
      "type": "boolean",
      "default": true,
      "title": "Svelte: Code Actions",
      "description": "Enable Code Actions for Svelte",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svelte.plugin.svelte.selectionRange.enable": {
      "type": "boolean",
      "default": true,
      "title": "Svelte: Selection Range",
      "description": "Enable selection range for Svelte",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svelte.plugin.svelte.rename.enable": {
      "type": "boolean",
      "default": true,
      "title": "Svelte: Rename",
      "description": "Enable rename/move Svelte files functionality",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svelte.plugin.svelte.defaultScriptLanguage": {
      "type": "string",
      "default": "none",
      "title": "Svelte: Default Script Language",
      "description": "The default language to use when generating new script tags",
      "enum": [
        "none",
        "ts"
      ],
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": "none",
      "restricted": false
    },
    "python.languageServer": {
      "default": "Default",
      "description": "Defines type of the language server.",
      "enum": [
        "Default",
        "Jedi",
        "Pylance",
        "None"
      ],
      "enumDescriptions": [
        "Automatically select a language server: Pylance if installed and available, otherwise fallback to Jedi.",
        "Use Jedi behind the Language Server Protocol (LSP) as a language server.",
        "Use Pylance as a language server.",
        "Disable language server capabilities."
      ],
      "scope": 3,
      "type": "string",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": "Default",
      "restricted": false
    },
    "python.analysis.logLevel": {
      "type": "string",
      "default": "Information",
      "description": "Specifies the level of logging for the Output panel",
      "enum": [
        "Error",
        "Warning",
        "Information",
        "Trace"
      ],
      "scope": 3,
      "source": {
        "id": "ms-python.vscode-pylance",
        "displayName": "Pylance"
      },
      "defaultDefaultValue": "Information",
      "restricted": false
    },
    "jupyter.logging.level": {
      "type": "string",
      "default": "debug",
      "enum": [
        "off",
        "error",
        "warn",
        "info",
        "debug",
        "verbose",
        "everything"
      ],
      "description": "The logging level the extension logs at.",
      "scope": 3,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": "debug",
      "restricted": false
    },
    "jupyter.askForKernelRestart": {
      "type": "boolean",
      "default": true,
      "description": "Warn the user before restarting a kernel.",
      "scope": 3,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "jupyter.jupyterLaunchTimeout": {
      "type": "number",
      "default": 60000,
      "description": "Amount of time (in ms) to wait for the Jupyter Notebook server to start.",
      "scope": 3,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": 60000,
      "restricted": false
    },
    "jupyter.jupyterLaunchRetries": {
      "type": "number",
      "default": 3,
      "description": "Number of times to attempt to connect to the Jupyter Notebook",
      "scope": 3,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": 3,
      "restricted": false
    },
    "jupyter.useDefaultConfigForJupyter": {
      "type": "boolean",
      "default": true,
      "description": "When running Jupyter locally, create a default empty Jupyter config",
      "scope": 3,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "jupyter.jupyterInterruptTimeout": {
      "type": "number",
      "default": 10000,
      "description": "Amount of time (in ms) to wait for an interrupt before asking to restart the Jupyter kernel.",
      "scope": 3,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": 10000,
      "restricted": false
    },
    "jupyter.ignoreVscodeTheme": {
      "type": "boolean",
      "default": false,
      "deprecationMessage": "This setting is deprecated and will be removed in the next release.",
      "description": "Don't use the VS Code theme in the Interactive window (requires reload of VS Code). This forces the Interactive window to use 'Light +(default light)' and disables matplotlib defaults.",
      "scope": 3,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "jupyter.themeMatplotlibPlots": {
      "type": "boolean",
      "default": false,
      "description": "In the Interactive window and Notebook Editor theme matplotlib outputs to match the VS Code editor theme.",
      "scope": 3,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "jupyter.allowUnauthorizedRemoteConnection": {
      "type": "boolean",
      "default": false,
      "description": "Allow for connecting the Interactive window to a https Jupyter server that does not have valid certificates. This can be a security risk, so only use for known and trusted servers.",
      "scope": 3,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "jupyter.disableJupyterAutoStart": {
      "type": "boolean",
      "default": false,
      "description": "When true, disables Jupyter from being automatically started for you. You must instead run a cell to start Jupyter.",
      "scope": 3,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "jupyter.magicCommandsAsComments": {
      "type": "boolean",
      "default": false,
      "description": "Uncomment shell assignments (#!), line magic (#!%) and cell magic (#!%%) when parsing code cells.",
      "deprecationMessage": "This setting has been deprecated in favor of jupyter.interactiveWindow.textEditor.magicCommandsAsComments.",
      "scope": 3,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "jupyter.interactiveWindow.textEditor.magicCommandsAsComments": {
      "type": "boolean",
      "default": false,
      "description": "Uncomment shell assignments (#!), line magic (#!%) and cell magic (#!%%) when parsing code cells.",
      "scope": 3,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "jupyter.showOutlineButtonInNotebookToolbar": {
      "type": "boolean",
      "default": true,
      "description": "Show the Outline button in the Jupyter notebook toolbar.",
      "scope": 3,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "jupyter.logKernelOutputSeparately": {
      "type": "boolean",
      "default": false,
      "description": "Creates separate output panels for kernels/jupyter server console output",
      "scope": 3,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "github.copilot.advanced": {
      "type": "object",
      "title": "Advanced Settings",
      "properties": {
        "secret_key": {
          "type": "string",
          "default": "",
          "description": "Secret API key"
        },
        "length": {
          "type": "integer",
          "default": 500,
          "description": "Length of code to generate in tokens"
        },
        "temperature": {
          "type": "string",
          "default": "",
          "description": "Override sampling temperature (range 0.0 - 1.0)"
        },
        "top_p": {
          "type": "number",
          "default": 1,
          "description": "Top probability mass to consider"
        },
        "stops": {
          "type": "object",
          "default": {
            "*": [
              "\n\n\n"
            ],
            "python": [
              "\ndef ",
              "\nclass ",
              "\nif ",
              "\n\n#"
            ]
          },
          "description": "Configure per-language stop sequences"
        },
        "indentationMode": {
          "type": "object",
          "default": {
            "python": false,
            "javascript": false,
            "javascriptreact": false,
            "jsx": false,
            "typescript": false,
            "typescriptreact": false,
            "go": false,
            "ruby": false,
            "*": true
          },
          "markdownDescription": "Enable or disable indentation block termination for specified [languages](https://code.visualstudio.com/docs/languages/identifiers). Set to 'clientandserver' to run both parser-based and indent-based termination."
        },
        "inlineSuggestCount": {
          "type": "integer",
          "default": 3,
          "description": "Number of inline suggestions to fetch"
        },
        "listCount": {
          "type": "integer",
          "default": 10,
          "description": "Number of solutions to list in Open GitHub Copilot"
        },
        "debug.showScores": {
          "type": "boolean",
          "default": false,
          "description": "Show scores in sorted solutions"
        },
        "debug.overrideEngine": {
          "type": "string",
          "default": "",
          "description": "Override engine name"
        },
        "debug.overrideProxyUrl": {
          "type": "string",
          "default": "",
          "description": "Override GitHub authentication proxy full URL"
        },
        "debug.testOverrideProxyUrl": {
          "type": "string",
          "default": "",
          "description": "Override GitHub authentication proxy URL when running tests"
        },
        "debug.filterLogCategories": {
          "type": "array",
          "default": [],
          "description": "Show only log categories listed in this setting. If an array is empty, show all loggers"
        }
      },
      "scope": 3,
      "source": {
        "id": "GitHub.copilot",
        "displayName": "GitHub Copilot"
      },
      "default": {},
      "restricted": false
    },
    "github.copilot.enable": {
      "type": "object",
      "default": {
        "*": true,
        "yaml": false,
        "plaintext": false,
        "markdown": false
      },
      "markdownDescription": "Enable or disable Copilot for specified [languages](https://code.visualstudio.com/docs/languages/identifiers)",
      "scope": 3,
      "source": {
        "id": "GitHub.copilot",
        "displayName": "GitHub Copilot"
      },
      "defaultDefaultValue": {
        "*": true,
        "yaml": false,
        "plaintext": false,
        "markdown": false
      },
      "restricted": false
    },
    "github.copilot.inlineSuggest.enable": {
      "type": "boolean",
      "default": true,
      "description": "Show inline suggestions",
      "scope": 3,
      "source": {
        "id": "GitHub.copilot",
        "displayName": "GitHub Copilot"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "github.copilot-labs.advanced": {
      "type": "object",
      "title": "Advanced Settings",
      "properties": {
        "secret_key": {
          "type": "string",
          "default": "",
          "description": "Secret API key"
        },
        "length": {
          "type": "integer",
          "default": 500,
          "description": "Length of code to generate in tokens"
        },
        "temperature": {
          "type": "string",
          "default": "",
          "description": "Override sampling temperature (range 0.0 - 1.0)"
        },
        "top_p": {
          "type": "number",
          "default": 1,
          "description": "Top probability mass to consider"
        },
        "stops": {
          "type": "object",
          "default": {
            "*": [
              "\n\n\n"
            ],
            "python": [
              "\ndef ",
              "\nclass ",
              "\nif ",
              "\n\n#"
            ]
          },
          "description": "Configure per-language stop sequences"
        },
        "indentationMode": {
          "type": "object",
          "default": {
            "python": false,
            "javascript": false,
            "javascriptreact": false,
            "jsx": false,
            "typescript": false,
            "typescriptreact": false,
            "go": false,
            "ruby": false,
            "*": true
          },
          "markdownDescription": "Enable or disable indentation block termination for specified [languages](https://code.visualstudio.com/docs/languages/identifiers). Set to 'client', 'server' or false to disable."
        },
        "debug.showScores": {
          "type": "boolean",
          "default": false,
          "description": "Show scores in sorted solutions"
        },
        "debug.overrideEngine": {
          "type": "string",
          "default": "",
          "description": "Override engine name"
        },
        "debug.overrideProxyUrl": {
          "type": "string",
          "default": "",
          "description": "Override GitHub authentication proxy full URL"
        },
        "debug.testOverrideProxyUrl": {
          "type": "string",
          "default": "",
          "description": "Override GitHub authentication proxy URL when running tests"
        },
        "debug.filterLogCategories": {
          "type": "array",
          "default": [],
          "description": "Show only log categories listed in this setting. If an array is empty, show all loggers"
        },
        "debug.limitPrompts": {
          "type": "boolean",
          "default": false,
          "description": "Temporary debug option to do less work to construct prompts"
        },
        "debug.ignoreRepo": {
          "type": "boolean",
          "default": false,
          "description": "Temporary debug option to ignore the repo"
        }
      },
      "scope": 3,
      "source": {
        "id": "GitHub.copilot-labs",
        "displayName": "GitHub Copilot Labs"
      },
      "default": {},
      "restricted": false
    },
    "github.copilot-labs.showBrushesLenses": {
      "type": "boolean",
      "default": false,
      "description": "Brushes will be triggerable with buttons above the focused function and selected code",
      "scope": 3,
      "source": {
        "id": "GitHub.copilot-labs",
        "displayName": "GitHub Copilot Labs"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "github.copilot-labs.showTestGenerationLenses": {
      "type": "boolean",
      "default": false,
      "description": "Functions to generate tests for can be selected with a code lens",
      "scope": 3,
      "source": {
        "id": "GitHub.copilot-labs",
        "displayName": "GitHub Copilot Labs"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "schema-extractor.releaseList": {
      "type": "string",
      "default": "https://raw.githubusercontent.com/luxass/vscode-schemas/main/schemas/.vscode-schemas.json",
      "description": "The URI to the list of releases",
      "scope": 3,
      "source": {
        "id": "luxass.vscode-schema-extractor",
        "displayName": "Schema Extractor"
      },
      "defaultDefaultValue": "https://raw.githubusercontent.com/luxass/vscode-schemas/main/schemas/.vscode-schemas.json",
      "restricted": false
    },
    "schema-extractor.output": {
      "type": "string",
      "default": "./extracted-schemas",
      "description": "Output path for the extracted schemas",
      "scope": 3,
      "source": {
        "id": "luxass.vscode-schema-extractor",
        "displayName": "Schema Extractor"
      },
      "defaultDefaultValue": "./extracted-schemas",
      "restricted": false
    },
    "editor.tabSize": {
      "type": "number",
      "default": 4,
      "minimum": 1,
      "markdownDescription": "The number of spaces a tab is equal to. This setting is overridden based on the file contents when `#editor.detectIndentation#` is on.",
      "defaultDefaultValue": 4,
      "scope": 5,
      "restricted": false
    },
    "editor.indentSize": {
      "anyOf": [
        {
          "type": "string",
          "enum": [
            "tabSize"
          ]
        },
        {
          "type": "number",
          "minimum": 1
        }
      ],
      "default": "tabSize",
      "markdownDescription": "The number of spaces used for indentation or `\"tabSize\"` to use the value from `#editor.tabSize#`. This setting is overridden based on the file contents when `#editor.detectIndentation#` is on.",
      "defaultDefaultValue": "tabSize",
      "scope": 5,
      "restricted": false
    },
    "editor.insertSpaces": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Insert spaces when pressing `Tab`. This setting is overridden based on the file contents when `#editor.detectIndentation#` is on.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.detectIndentation": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Controls whether `#editor.tabSize#` and `#editor.insertSpaces#` will be automatically detected when a file is opened based on the file contents.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.trimAutoWhitespace": {
      "type": "boolean",
      "default": true,
      "description": "Remove trailing auto inserted whitespace.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.largeFileOptimizations": {
      "type": "boolean",
      "default": true,
      "description": "Special handling for large files to disable certain memory intensive features.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.wordBasedSuggestions": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether completions should be computed based on words in the document.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.wordBasedSuggestionsMode": {
      "enum": [
        "currentDocument",
        "matchingDocuments",
        "allDocuments"
      ],
      "default": "matchingDocuments",
      "enumDescriptions": [
        "Only suggest words from the active document.",
        "Suggest words from all open documents of the same language.",
        "Suggest words from all open documents."
      ],
      "description": "Controls from which documents word based completions are computed.",
      "defaultDefaultValue": "matchingDocuments",
      "scope": 5,
      "restricted": false
    },
    "editor.semanticHighlighting.enabled": {
      "enum": [
        true,
        false,
        "configuredByTheme"
      ],
      "enumDescriptions": [
        "Semantic highlighting enabled for all color themes.",
        "Semantic highlighting disabled for all color themes.",
        "Semantic highlighting is configured by the current color theme's `semanticHighlighting` setting."
      ],
      "default": "configuredByTheme",
      "description": "Controls whether the semanticHighlighting is shown for the languages that support it.",
      "defaultDefaultValue": "configuredByTheme",
      "scope": 5,
      "restricted": false
    },
    "editor.stablePeek": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Keep peek editors open even when double-clicking their content or when hitting `Escape`.",
      "defaultDefaultValue": false,
      "scope": 5,
      "restricted": false
    },
    "editor.maxTokenizationLineLength": {
      "type": "integer",
      "default": 20000,
      "description": "Lines above this length will not be tokenized for performance reasons",
      "defaultDefaultValue": 20000,
      "scope": 5,
      "restricted": false
    },
    "editor.experimental.asyncTokenization": {
      "type": "boolean",
      "default": false,
      "description": "Controls whether the tokenization should happen asynchronously on a web worker.",
      "tags": [
        "experimental"
      ],
      "defaultDefaultValue": false,
      "scope": 5,
      "restricted": false
    },
    "editor.language.brackets": {
      "type": [
        "array",
        "null"
      ],
      "default": null,
      "description": "Defines the bracket symbols that increase or decrease the indentation.",
      "items": {
        "type": "array",
        "items": [
          {
            "type": "string",
            "description": "The opening bracket character or string sequence."
          },
          {
            "type": "string",
            "description": "The closing bracket character or string sequence."
          }
        ]
      },
      "defaultDefaultValue": null,
      "scope": 5,
      "restricted": false
    },
    "editor.language.colorizedBracketPairs": {
      "type": [
        "array",
        "null"
      ],
      "default": null,
      "description": "Defines the bracket pairs that are colorized by their nesting level if bracket pair colorization is enabled.",
      "items": {
        "type": "array",
        "items": [
          {
            "type": "string",
            "description": "The opening bracket character or string sequence."
          },
          {
            "type": "string",
            "description": "The closing bracket character or string sequence."
          }
        ]
      },
      "defaultDefaultValue": null,
      "scope": 5,
      "restricted": false
    },
    "diffEditor.maxComputationTime": {
      "type": "number",
      "default": 5000,
      "description": "Timeout in milliseconds after which diff computation is cancelled. Use 0 for no timeout.",
      "defaultDefaultValue": 5000,
      "scope": 5,
      "restricted": false
    },
    "diffEditor.maxFileSize": {
      "type": "number",
      "default": 50,
      "description": "Maximum file size in MB for which to compute diffs. Use 0 for no limit.",
      "defaultDefaultValue": 50,
      "scope": 5,
      "restricted": false
    },
    "diffEditor.renderSideBySide": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether the diff editor shows the diff side by side or inline.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "diffEditor.renderMarginRevertIcon": {
      "type": "boolean",
      "default": true,
      "description": "When enabled, the diff editor shows arrows in its glyph margin to revert changes.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "diffEditor.ignoreTrimWhitespace": {
      "type": "boolean",
      "default": true,
      "description": "When enabled, the diff editor ignores changes in leading or trailing whitespace.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "diffEditor.renderIndicators": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether the diff editor shows +/- indicators for added/removed changes.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "diffEditor.codeLens": {
      "type": "boolean",
      "default": false,
      "description": "Controls whether the editor shows CodeLens.",
      "defaultDefaultValue": false,
      "scope": 5,
      "restricted": false
    },
    "diffEditor.wordWrap": {
      "type": "string",
      "enum": [
        "off",
        "on",
        "inherit"
      ],
      "default": "inherit",
      "markdownEnumDescriptions": [
        "Lines will never wrap.",
        "Lines will wrap at the viewport width.",
        "Lines will wrap according to the `#editor.wordWrap#` setting."
      ],
      "defaultDefaultValue": "inherit",
      "scope": 5,
      "restricted": false
    },
    "diffEditor.diffAlgorithm": {
      "type": "string",
      "enum": [
        "smart",
        "experimental"
      ],
      "default": "smart",
      "markdownEnumDescriptions": [
        "Uses the default diffing algorithm.",
        "Uses an experimental diffing algorithm."
      ],
      "defaultDefaultValue": "smart",
      "scope": 5,
      "restricted": false
    },
    "editor.acceptSuggestionOnCommitCharacter": {
      "markdownDescription": "Controls whether suggestions should be accepted on commit characters. For example, in JavaScript, the semi-colon (`;`) can be a commit character that accepts a suggestion and types that character.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.acceptSuggestionOnEnter": {
      "markdownEnumDescriptions": [
        "",
        "Only accept a suggestion with `Enter` when it makes a textual change.",
        ""
      ],
      "markdownDescription": "Controls whether suggestions should be accepted on `Enter`, in addition to `Tab`. Helps to avoid ambiguity between inserting new lines or accepting suggestions.",
      "type": "string",
      "enum": [
        "on",
        "smart",
        "off"
      ],
      "default": "on",
      "defaultDefaultValue": "on",
      "scope": 5,
      "restricted": false
    },
    "editor.accessibilitySupport": {
      "type": "string",
      "enum": [
        "auto",
        "on",
        "off"
      ],
      "enumDescriptions": [
        "Use platform APIs to detect when a Screen Reader is attached",
        "Optimize for usage with a Screen Reader",
        "Assume a screen reader is not attached"
      ],
      "default": "auto",
      "tags": [
        "accessibility"
      ],
      "description": "Controls if the UI should run in a mode where it is optimized for screen readers.",
      "defaultDefaultValue": "auto",
      "scope": 5,
      "restricted": false
    },
    "editor.accessibilityPageSize": {
      "description": "Controls the number of lines in the editor that can be read out by a screen reader at once. When we detect a screen reader we automatically set the default to be 500. Warning: this has a performance implication for numbers larger than the default.",
      "tags": [
        "accessibility"
      ],
      "type": "integer",
      "default": 10,
      "minimum": 1,
      "maximum": 1073741824,
      "defaultDefaultValue": 10,
      "scope": 5,
      "restricted": false
    },
    "editor.autoClosingBrackets": {
      "enumDescriptions": [
        "",
        "Use language configurations to determine when to autoclose brackets.",
        "Autoclose brackets only when the cursor is to the left of whitespace.",
        ""
      ],
      "description": "Controls whether the editor should automatically close brackets after the user adds an opening bracket.",
      "type": "string",
      "enum": [
        "always",
        "languageDefined",
        "beforeWhitespace",
        "never"
      ],
      "default": "languageDefined",
      "defaultDefaultValue": "languageDefined",
      "scope": 5,
      "restricted": false
    },
    "editor.autoClosingDelete": {
      "enumDescriptions": [
        "",
        "Remove adjacent closing quotes or brackets only if they were automatically inserted.",
        ""
      ],
      "description": "Controls whether the editor should remove adjacent closing quotes or brackets when deleting.",
      "type": "string",
      "enum": [
        "always",
        "auto",
        "never"
      ],
      "default": "auto",
      "defaultDefaultValue": "auto",
      "scope": 5,
      "restricted": false
    },
    "editor.autoClosingOvertype": {
      "enumDescriptions": [
        "",
        "Type over closing quotes or brackets only if they were automatically inserted.",
        ""
      ],
      "description": "Controls whether the editor should type over closing quotes or brackets.",
      "type": "string",
      "enum": [
        "always",
        "auto",
        "never"
      ],
      "default": "auto",
      "defaultDefaultValue": "auto",
      "scope": 5,
      "restricted": false
    },
    "editor.autoClosingQuotes": {
      "enumDescriptions": [
        "",
        "Use language configurations to determine when to autoclose quotes.",
        "Autoclose quotes only when the cursor is to the left of whitespace.",
        ""
      ],
      "description": "Controls whether the editor should automatically close quotes after the user adds an opening quote.",
      "type": "string",
      "enum": [
        "always",
        "languageDefined",
        "beforeWhitespace",
        "never"
      ],
      "default": "languageDefined",
      "defaultDefaultValue": "languageDefined",
      "scope": 5,
      "restricted": false
    },
    "editor.autoIndent": {
      "enumDescriptions": [
        "The editor will not insert indentation automatically.",
        "The editor will keep the current line's indentation.",
        "The editor will keep the current line's indentation and honor language defined brackets.",
        "The editor will keep the current line's indentation, honor language defined brackets and invoke special onEnterRules defined by languages.",
        "The editor will keep the current line's indentation, honor language defined brackets, invoke special onEnterRules defined by languages, and honor indentationRules defined by languages."
      ],
      "description": "Controls whether the editor should automatically adjust the indentation when users type, paste, move or indent lines.",
      "type": "string",
      "enum": [
        "none",
        "keep",
        "brackets",
        "advanced",
        "full"
      ],
      "default": "full",
      "defaultDefaultValue": "full",
      "scope": 5,
      "restricted": false
    },
    "editor.autoSurround": {
      "enumDescriptions": [
        "Use language configurations to determine when to automatically surround selections.",
        "Surround with quotes but not brackets.",
        "Surround with brackets but not quotes.",
        ""
      ],
      "description": "Controls whether the editor should automatically surround selections when typing quotes or brackets.",
      "type": "string",
      "enum": [
        "languageDefined",
        "quotes",
        "brackets",
        "never"
      ],
      "default": "languageDefined",
      "defaultDefaultValue": "languageDefined",
      "scope": 5,
      "restricted": false
    },
    "editor.bracketPairColorization.enabled": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Controls whether bracket pair colorization is enabled or not. Use `#workbench.colorCustomizations#` to override the bracket highlight colors.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.bracketPairColorization.independentColorPoolPerBracketType": {
      "type": "boolean",
      "default": false,
      "description": "Controls whether each bracket type has its own independent color pool.",
      "defaultDefaultValue": false,
      "scope": 5,
      "restricted": false
    },
    "editor.guides.bracketPairs": {
      "type": [
        "boolean",
        "string"
      ],
      "enum": [
        true,
        "active",
        false
      ],
      "enumDescriptions": [
        "Enables bracket pair guides.",
        "Enables bracket pair guides only for the active bracket pair.",
        "Disables bracket pair guides."
      ],
      "default": false,
      "description": "Controls whether bracket pair guides are enabled or not.",
      "defaultDefaultValue": false,
      "scope": 5,
      "restricted": false
    },
    "editor.guides.bracketPairsHorizontal": {
      "type": [
        "boolean",
        "string"
      ],
      "enum": [
        true,
        "active",
        false
      ],
      "enumDescriptions": [
        "Enables horizontal guides as addition to vertical bracket pair guides.",
        "Enables horizontal guides only for the active bracket pair.",
        "Disables horizontal bracket pair guides."
      ],
      "default": "active",
      "description": "Controls whether horizontal bracket pair guides are enabled or not.",
      "defaultDefaultValue": "active",
      "scope": 5,
      "restricted": false
    },
    "editor.guides.highlightActiveBracketPair": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether the editor should highlight the active bracket pair.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.guides.indentation": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether the editor should render indent guides.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.guides.highlightActiveIndentation": {
      "type": [
        "boolean",
        "string"
      ],
      "enum": [
        true,
        "always",
        false
      ],
      "enumDescriptions": [
        "Highlights the active indent guide.",
        "Highlights the active indent guide even if bracket guides are highlighted.",
        "Do not highlight the active indent guide."
      ],
      "default": true,
      "description": "Controls whether the editor should highlight the active indent guide.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.codeLens": {
      "description": "Controls whether the editor shows CodeLens.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.codeLensFontFamily": {
      "description": "Controls the font family for CodeLens.",
      "type": "string",
      "default": "",
      "defaultDefaultValue": "",
      "scope": 5,
      "restricted": false
    },
    "editor.codeLensFontSize": {
      "type": "integer",
      "default": 0,
      "minimum": 0,
      "maximum": 100,
      "markdownDescription": "Controls the font size in pixels for CodeLens. When set to 0, 90% of `#editor.fontSize#` is used.",
      "defaultDefaultValue": 0,
      "scope": 5,
      "restricted": false
    },
    "editor.colorDecorators": {
      "description": "Controls whether the editor should render the inline color decorators and color picker.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.colorDecoratorsLimit": {
      "markdownDescription": "Controls the max number of color decorators that can be rendered in an editor at once.",
      "type": "integer",
      "default": 500,
      "minimum": 1,
      "maximum": 1000000,
      "defaultDefaultValue": 500,
      "scope": 5,
      "restricted": false
    },
    "editor.columnSelection": {
      "description": "Enable that the selection with the mouse and keys is doing column selection.",
      "type": "boolean",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 5,
      "restricted": false
    },
    "editor.comments.insertSpace": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether a space character is inserted when commenting.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.comments.ignoreEmptyLines": {
      "type": "boolean",
      "default": true,
      "description": "Controls if empty lines should be ignored with toggle, add or remove actions for line comments.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.copyWithSyntaxHighlighting": {
      "description": "Controls whether syntax highlighting should be copied into the clipboard.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.cursorBlinking": {
      "description": "Control the cursor animation style.",
      "type": "string",
      "enum": [
        "blink",
        "smooth",
        "phase",
        "expand",
        "solid"
      ],
      "default": "blink",
      "defaultDefaultValue": "blink",
      "scope": 5,
      "restricted": false
    },
    "editor.cursorSmoothCaretAnimation": {
      "enumDescriptions": [
        "Smooth caret animation is disabled.",
        "Smooth caret animation is enabled only when the user moves the cursor with an explicit gesture.",
        "Smooth caret animation is always enabled."
      ],
      "description": "Controls whether the smooth caret animation should be enabled.",
      "type": "string",
      "enum": [
        "off",
        "explicit",
        "on"
      ],
      "default": "off",
      "defaultDefaultValue": "off",
      "scope": 5,
      "restricted": false
    },
    "editor.cursorStyle": {
      "description": "Controls the cursor style.",
      "type": "string",
      "enum": [
        "line",
        "block",
        "underline",
        "line-thin",
        "block-outline",
        "underline-thin"
      ],
      "default": "line",
      "defaultDefaultValue": "line",
      "scope": 5,
      "restricted": false
    },
    "editor.cursorSurroundingLines": {
      "description": "Controls the minimal number of visible leading lines (minimum 0) and trailing lines (minimum 1) surrounding the cursor. Known as 'scrollOff' or 'scrollOffset' in some other editors.",
      "type": "integer",
      "default": 0,
      "minimum": 0,
      "maximum": 1073741824,
      "defaultDefaultValue": 0,
      "scope": 5,
      "restricted": false
    },
    "editor.cursorSurroundingLinesStyle": {
      "enumDescriptions": [
        "`cursorSurroundingLines` is enforced only when triggered via the keyboard or API.",
        "`cursorSurroundingLines` is enforced always."
      ],
      "description": "Controls when `cursorSurroundingLines` should be enforced.",
      "type": "string",
      "enum": [
        "default",
        "all"
      ],
      "default": "default",
      "defaultDefaultValue": "default",
      "scope": 5,
      "restricted": false
    },
    "editor.cursorWidth": {
      "markdownDescription": "Controls the width of the cursor when `#editor.cursorStyle#` is set to `line`.",
      "type": "integer",
      "default": 0,
      "minimum": 0,
      "maximum": 1073741824,
      "defaultDefaultValue": 0,
      "scope": 5,
      "restricted": false
    },
    "editor.dragAndDrop": {
      "description": "Controls whether the editor should allow moving selections via drag and drop.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.dropIntoEditor.enabled": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Controls whether you can drag and drop a file into a text editor by holding down `shift` (instead of opening the file in an editor).",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.emptySelectionClipboard": {
      "description": "Controls whether copying without a selection copies the current line.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.experimentalWhitespaceRendering": {
      "enumDescriptions": [
        "Use a new rendering method with svgs.",
        "Use a new rendering method with font characters.",
        "Use the stable rendering method."
      ],
      "description": "Controls whether whitespace is rendered with a new, experimental method.",
      "type": "string",
      "enum": [
        "svg",
        "font",
        "off"
      ],
      "default": "svg",
      "defaultDefaultValue": "svg",
      "scope": 5,
      "restricted": false
    },
    "editor.fastScrollSensitivity": {
      "markdownDescription": "Scrolling speed multiplier when pressing `Alt`.",
      "type": "number",
      "default": 5,
      "defaultDefaultValue": 5,
      "scope": 5,
      "restricted": false
    },
    "editor.find.cursorMoveOnType": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether the cursor should jump to find matches while typing.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.find.seedSearchStringFromSelection": {
      "type": "string",
      "enum": [
        "never",
        "always",
        "selection"
      ],
      "default": "always",
      "enumDescriptions": [
        "Never seed search string from the editor selection.",
        "Always seed search string from the editor selection, including word at cursor position.",
        "Only seed search string from the editor selection."
      ],
      "description": "Controls whether the search string in the Find Widget is seeded from the editor selection.",
      "defaultDefaultValue": "always",
      "scope": 5,
      "restricted": false
    },
    "editor.find.autoFindInSelection": {
      "type": "string",
      "enum": [
        "never",
        "always",
        "multiline"
      ],
      "default": "never",
      "enumDescriptions": [
        "Never turn on Find in Selection automatically (default).",
        "Always turn on Find in Selection automatically.",
        "Turn on Find in Selection automatically when multiple lines of content are selected."
      ],
      "description": "Controls the condition for turning on Find in Selection automatically.",
      "defaultDefaultValue": "never",
      "scope": 5,
      "restricted": false
    },
    "editor.find.globalFindClipboard": {
      "type": "boolean",
      "default": false,
      "description": "Controls whether the Find Widget should read or modify the shared find clipboard on macOS.",
      "included": true,
      "defaultDefaultValue": false,
      "scope": 5,
      "restricted": false
    },
    "editor.find.addExtraSpaceOnTop": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether the Find Widget should add extra lines on top of the editor. When true, you can scroll beyond the first line when the Find Widget is visible.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.find.loop": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether the search automatically restarts from the beginning (or the end) when no further matches can be found.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.folding": {
      "description": "Controls whether the editor has code folding enabled.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.foldingStrategy": {
      "enumDescriptions": [
        "Use a language-specific folding strategy if available, else the indentation-based one.",
        "Use the indentation-based folding strategy."
      ],
      "description": "Controls the strategy for computing folding ranges.",
      "type": "string",
      "enum": [
        "auto",
        "indentation"
      ],
      "default": "auto",
      "defaultDefaultValue": "auto",
      "scope": 5,
      "restricted": false
    },
    "editor.foldingHighlight": {
      "description": "Controls whether the editor should highlight folded ranges.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.foldingImportsByDefault": {
      "description": "Controls whether the editor automatically collapses import ranges.",
      "type": "boolean",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 5,
      "restricted": false
    },
    "editor.foldingMaximumRegions": {
      "description": "The maximum number of foldable regions. Increasing this value may result in the editor becoming less responsive when the current source has a large number of foldable regions.",
      "type": "integer",
      "default": 5000,
      "minimum": 10,
      "maximum": 65000,
      "defaultDefaultValue": 5000,
      "scope": 5,
      "restricted": false
    },
    "editor.unfoldOnClickAfterEndOfLine": {
      "description": "Controls whether clicking on the empty content after a folded line will unfold the line.",
      "type": "boolean",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 5,
      "restricted": false
    },
    "editor.fontFamily": {
      "description": "Controls the font family.",
      "type": "string",
      "default": "Menlo, Monaco, 'Courier New', monospace",
      "defaultDefaultValue": "Menlo, Monaco, 'Courier New', monospace",
      "scope": 5,
      "restricted": false
    },
    "editor.fontLigatures": {
      "anyOf": [
        {
          "type": "boolean",
          "description": "Enables/Disables font ligatures ('calt' and 'liga' font features). Change this to a string for fine-grained control of the 'font-feature-settings' CSS property."
        },
        {
          "type": "string",
          "description": "Explicit 'font-feature-settings' CSS property. A boolean can be passed instead if one only needs to turn on/off ligatures."
        }
      ],
      "description": "Configures font ligatures or font features. Can be either a boolean to enable/disable ligatures or a string for the value of the CSS 'font-feature-settings' property.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 5,
      "restricted": false
    },
    "editor.fontSize": {
      "type": "number",
      "minimum": 6,
      "maximum": 100,
      "default": 12,
      "description": "Controls the font size in pixels.",
      "defaultDefaultValue": 12,
      "scope": 5,
      "restricted": false
    },
    "editor.fontWeight": {
      "anyOf": [
        {
          "type": "number",
          "minimum": 1,
          "maximum": 1000,
          "errorMessage": "Only \"normal\" and \"bold\" keywords or numbers between 1 and 1000 are allowed."
        },
        {
          "type": "string",
          "pattern": "^(normal|bold|1000|[1-9][0-9]{0,2})$"
        },
        {
          "enum": [
            "normal",
            "bold",
            "100",
            "200",
            "300",
            "400",
            "500",
            "600",
            "700",
            "800",
            "900"
          ]
        }
      ],
      "default": "normal",
      "description": "Controls the font weight. Accepts \"normal\" and \"bold\" keywords or numbers between 1 and 1000.",
      "defaultDefaultValue": "normal",
      "scope": 5,
      "restricted": false
    },
    "editor.fontVariations": {
      "anyOf": [
        {
          "type": "boolean",
          "description": "Enables/Disables the translation from font-weight to font-variation-settings. Change this to a string for fine-grained control of the 'font-variation-settings' CSS property."
        },
        {
          "type": "string",
          "description": "Explicit 'font-variation-settings' CSS property. A boolean can be passed instead if one only needs to translate font-weight to font-variation-settings."
        }
      ],
      "description": "Configures font variations. Can be either a boolean to enable/disable the translation from font-weight to font-variation-settings or a string for the value of the CSS 'font-variation-settings' property.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 5,
      "restricted": false
    },
    "editor.formatOnPaste": {
      "description": "Controls whether the editor should automatically format the pasted content. A formatter must be available and the formatter should be able to format a range in a document.",
      "type": "boolean",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 5,
      "restricted": false
    },
    "editor.formatOnType": {
      "description": "Controls whether the editor should automatically format the line after typing.",
      "type": "boolean",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 5,
      "restricted": false
    },
    "editor.glyphMargin": {
      "description": "Controls whether the editor should render the vertical glyph margin. Glyph margin is mostly used for debugging.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.gotoLocation.multiple": {
      "deprecationMessage": "This setting is deprecated, please use separate settings like 'editor.editor.gotoLocation.multipleDefinitions' or 'editor.editor.gotoLocation.multipleImplementations' instead.",
      "default": null,
      "scope": 5,
      "restricted": false
    },
    "editor.gotoLocation.multipleDefinitions": {
      "description": "Controls the behavior the 'Go to Definition'-command when multiple target locations exist.",
      "type": "string",
      "enum": [
        "peek",
        "gotoAndPeek",
        "goto"
      ],
      "default": "peek",
      "enumDescriptions": [
        "Show Peek view of the results (default)",
        "Go to the primary result and show a Peek view",
        "Go to the primary result and enable Peek-less navigation to others"
      ],
      "defaultDefaultValue": "peek",
      "scope": 5,
      "restricted": false
    },
    "editor.gotoLocation.multipleTypeDefinitions": {
      "description": "Controls the behavior the 'Go to Type Definition'-command when multiple target locations exist.",
      "type": "string",
      "enum": [
        "peek",
        "gotoAndPeek",
        "goto"
      ],
      "default": "peek",
      "enumDescriptions": [
        "Show Peek view of the results (default)",
        "Go to the primary result and show a Peek view",
        "Go to the primary result and enable Peek-less navigation to others"
      ],
      "defaultDefaultValue": "peek",
      "scope": 5,
      "restricted": false
    },
    "editor.gotoLocation.multipleDeclarations": {
      "description": "Controls the behavior the 'Go to Declaration'-command when multiple target locations exist.",
      "type": "string",
      "enum": [
        "peek",
        "gotoAndPeek",
        "goto"
      ],
      "default": "peek",
      "enumDescriptions": [
        "Show Peek view of the results (default)",
        "Go to the primary result and show a Peek view",
        "Go to the primary result and enable Peek-less navigation to others"
      ],
      "defaultDefaultValue": "peek",
      "scope": 5,
      "restricted": false
    },
    "editor.gotoLocation.multipleImplementations": {
      "description": "Controls the behavior the 'Go to Implementations'-command when multiple target locations exist.",
      "type": "string",
      "enum": [
        "peek",
        "gotoAndPeek",
        "goto"
      ],
      "default": "peek",
      "enumDescriptions": [
        "Show Peek view of the results (default)",
        "Go to the primary result and show a Peek view",
        "Go to the primary result and enable Peek-less navigation to others"
      ],
      "defaultDefaultValue": "peek",
      "scope": 5,
      "restricted": false
    },
    "editor.gotoLocation.multipleReferences": {
      "description": "Controls the behavior the 'Go to References'-command when multiple target locations exist.",
      "type": "string",
      "enum": [
        "peek",
        "gotoAndPeek",
        "goto"
      ],
      "default": "peek",
      "enumDescriptions": [
        "Show Peek view of the results (default)",
        "Go to the primary result and show a Peek view",
        "Go to the primary result and enable Peek-less navigation to others"
      ],
      "defaultDefaultValue": "peek",
      "scope": 5,
      "restricted": false
    },
    "editor.gotoLocation.alternativeDefinitionCommand": {
      "type": "string",
      "default": "editor.action.goToReferences",
      "enum": [
        "",
        "editor.action.referenceSearch.trigger",
        "editor.action.goToReferences",
        "editor.action.peekImplementation",
        "editor.action.goToImplementation",
        "editor.action.peekTypeDefinition",
        "editor.action.goToTypeDefinition",
        "editor.action.peekDeclaration",
        "editor.action.revealDeclaration",
        "editor.action.peekDefinition",
        "editor.action.revealDefinitionAside",
        "editor.action.revealDefinition"
      ],
      "description": "Alternative command id that is being executed when the result of 'Go to Definition' is the current location.",
      "defaultDefaultValue": "editor.action.goToReferences",
      "scope": 5,
      "restricted": false
    },
    "editor.gotoLocation.alternativeTypeDefinitionCommand": {
      "type": "string",
      "default": "editor.action.goToReferences",
      "enum": [
        "",
        "editor.action.referenceSearch.trigger",
        "editor.action.goToReferences",
        "editor.action.peekImplementation",
        "editor.action.goToImplementation",
        "editor.action.peekTypeDefinition",
        "editor.action.goToTypeDefinition",
        "editor.action.peekDeclaration",
        "editor.action.revealDeclaration",
        "editor.action.peekDefinition",
        "editor.action.revealDefinitionAside",
        "editor.action.revealDefinition"
      ],
      "description": "Alternative command id that is being executed when the result of 'Go to Type Definition' is the current location.",
      "defaultDefaultValue": "editor.action.goToReferences",
      "scope": 5,
      "restricted": false
    },
    "editor.gotoLocation.alternativeDeclarationCommand": {
      "type": "string",
      "default": "editor.action.goToReferences",
      "enum": [
        "",
        "editor.action.referenceSearch.trigger",
        "editor.action.goToReferences",
        "editor.action.peekImplementation",
        "editor.action.goToImplementation",
        "editor.action.peekTypeDefinition",
        "editor.action.goToTypeDefinition",
        "editor.action.peekDeclaration",
        "editor.action.revealDeclaration",
        "editor.action.peekDefinition",
        "editor.action.revealDefinitionAside",
        "editor.action.revealDefinition"
      ],
      "description": "Alternative command id that is being executed when the result of 'Go to Declaration' is the current location.",
      "defaultDefaultValue": "editor.action.goToReferences",
      "scope": 5,
      "restricted": false
    },
    "editor.gotoLocation.alternativeImplementationCommand": {
      "type": "string",
      "default": "",
      "enum": [
        "",
        "editor.action.referenceSearch.trigger",
        "editor.action.goToReferences",
        "editor.action.peekImplementation",
        "editor.action.goToImplementation",
        "editor.action.peekTypeDefinition",
        "editor.action.goToTypeDefinition",
        "editor.action.peekDeclaration",
        "editor.action.revealDeclaration",
        "editor.action.peekDefinition",
        "editor.action.revealDefinitionAside",
        "editor.action.revealDefinition"
      ],
      "description": "Alternative command id that is being executed when the result of 'Go to Implementation' is the current location.",
      "defaultDefaultValue": "",
      "scope": 5,
      "restricted": false
    },
    "editor.gotoLocation.alternativeReferenceCommand": {
      "type": "string",
      "default": "",
      "enum": [
        "",
        "editor.action.referenceSearch.trigger",
        "editor.action.goToReferences",
        "editor.action.peekImplementation",
        "editor.action.goToImplementation",
        "editor.action.peekTypeDefinition",
        "editor.action.goToTypeDefinition",
        "editor.action.peekDeclaration",
        "editor.action.revealDeclaration",
        "editor.action.peekDefinition",
        "editor.action.revealDefinitionAside",
        "editor.action.revealDefinition"
      ],
      "description": "Alternative command id that is being executed when the result of 'Go to Reference' is the current location.",
      "defaultDefaultValue": "",
      "scope": 5,
      "restricted": false
    },
    "editor.hideCursorInOverviewRuler": {
      "description": "Controls whether the cursor should be hidden in the overview ruler.",
      "type": "boolean",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 5,
      "restricted": false
    },
    "editor.hover.enabled": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether the hover is shown.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.hover.delay": {
      "type": "number",
      "default": 300,
      "minimum": 0,
      "maximum": 10000,
      "description": "Controls the delay in milliseconds after which the hover is shown.",
      "defaultDefaultValue": 300,
      "scope": 5,
      "restricted": false
    },
    "editor.hover.sticky": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether the hover should remain visible when mouse is moved over it.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.hover.above": {
      "type": "boolean",
      "default": true,
      "description": "Prefer showing hovers above the line, if there's space.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.inlineSuggest.enabled": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether to automatically show inline suggestions in the editor.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.inlineSuggest.showToolbar": {
      "type": "string",
      "default": "onHover",
      "enum": [
        "always",
        "onHover"
      ],
      "enumDescriptions": [
        "Show the inline suggestion toolbar whenever an inline suggestion is shown.",
        "Show the inline suggestion toolbar when hovering over an inline suggestion."
      ],
      "description": "Controls when to show the inline suggestion toolbar.",
      "defaultDefaultValue": "onHover",
      "scope": 5,
      "restricted": false
    },
    "editor.letterSpacing": {
      "description": "Controls the letter spacing in pixels.",
      "type": "number",
      "default": 0,
      "defaultDefaultValue": 0,
      "scope": 5,
      "restricted": false
    },
    "editor.lightbulb.enabled": {
      "type": "boolean",
      "default": true,
      "description": "Enables the Code Action lightbulb in the editor.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.lineHeight": {
      "markdownDescription": "Controls the line height. \n - Use 0 to automatically compute the line height from the font size.\n - Values between 0 and 8 will be used as a multiplier with the font size.\n - Values greater than or equal to 8 will be used as effective values.",
      "type": "number",
      "default": 0,
      "defaultDefaultValue": 0,
      "scope": 5,
      "restricted": false
    },
    "editor.lineNumbers": {
      "type": "string",
      "enum": [
        "off",
        "on",
        "relative",
        "interval"
      ],
      "enumDescriptions": [
        "Line numbers are not rendered.",
        "Line numbers are rendered as absolute number.",
        "Line numbers are rendered as distance in lines to cursor position.",
        "Line numbers are rendered every 10 lines."
      ],
      "default": "on",
      "description": "Controls the display of line numbers.",
      "defaultDefaultValue": "on",
      "scope": 5,
      "restricted": false
    },
    "editor.linkedEditing": {
      "description": "Controls whether the editor has linked editing enabled. Depending on the language, related symbols such as HTML tags, are updated while editing.",
      "type": "boolean",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 5,
      "restricted": false
    },
    "editor.links": {
      "description": "Controls whether the editor should detect links and make them clickable.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.matchBrackets": {
      "description": "Highlight matching brackets.",
      "type": "string",
      "enum": [
        "always",
        "near",
        "never"
      ],
      "default": "always",
      "defaultDefaultValue": "always",
      "scope": 5,
      "restricted": false
    },
    "editor.minimap.enabled": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether the minimap is shown.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.minimap.autohide": {
      "type": "boolean",
      "default": false,
      "description": "Controls whether the minimap is hidden automatically.",
      "defaultDefaultValue": false,
      "scope": 5,
      "restricted": false
    },
    "editor.minimap.size": {
      "type": "string",
      "enum": [
        "proportional",
        "fill",
        "fit"
      ],
      "enumDescriptions": [
        "The minimap has the same size as the editor contents (and might scroll).",
        "The minimap will stretch or shrink as necessary to fill the height of the editor (no scrolling).",
        "The minimap will shrink as necessary to never be larger than the editor (no scrolling)."
      ],
      "default": "proportional",
      "description": "Controls the size of the minimap.",
      "defaultDefaultValue": "proportional",
      "scope": 5,
      "restricted": false
    },
    "editor.minimap.side": {
      "type": "string",
      "enum": [
        "left",
        "right"
      ],
      "default": "right",
      "description": "Controls the side where to render the minimap.",
      "defaultDefaultValue": "right",
      "scope": 5,
      "restricted": false
    },
    "editor.minimap.showSlider": {
      "type": "string",
      "enum": [
        "always",
        "mouseover"
      ],
      "default": "mouseover",
      "description": "Controls when the minimap slider is shown.",
      "defaultDefaultValue": "mouseover",
      "scope": 5,
      "restricted": false
    },
    "editor.minimap.scale": {
      "type": "number",
      "default": 1,
      "minimum": 1,
      "maximum": 3,
      "enum": [
        1,
        2,
        3
      ],
      "description": "Scale of content drawn in the minimap: 1, 2 or 3.",
      "defaultDefaultValue": 1,
      "scope": 5,
      "restricted": false
    },
    "editor.minimap.renderCharacters": {
      "type": "boolean",
      "default": true,
      "description": "Render the actual characters on a line as opposed to color blocks.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.minimap.maxColumn": {
      "type": "number",
      "default": 120,
      "description": "Limit the width of the minimap to render at most a certain number of columns.",
      "defaultDefaultValue": 120,
      "scope": 5,
      "restricted": false
    },
    "editor.mouseWheelScrollSensitivity": {
      "markdownDescription": "A multiplier to be used on the `deltaX` and `deltaY` of mouse wheel scroll events.",
      "type": "number",
      "default": 1,
      "defaultDefaultValue": 1,
      "scope": 5,
      "restricted": false
    },
    "editor.mouseWheelZoom": {
      "markdownDescription": "Zoom the font of the editor when using mouse wheel and holding `Ctrl`.",
      "type": "boolean",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 5,
      "restricted": false
    },
    "editor.multiCursorMergeOverlapping": {
      "description": "Merge multiple cursors when they are overlapping.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.multiCursorModifier": {
      "markdownEnumDescriptions": [
        "Maps to `Control` on Windows and Linux and to `Command` on macOS.",
        "Maps to `Alt` on Windows and Linux and to `Option` on macOS."
      ],
      "markdownDescription": "The modifier to be used to add multiple cursors with the mouse. The Go to Definition and Open Link mouse gestures will adapt such that they do not conflict with the [multicursor modifier](https://code.visualstudio.com/docs/editor/codebasics#_multicursor-modifier).",
      "type": "string",
      "enum": [
        "ctrlCmd",
        "alt"
      ],
      "default": "alt",
      "defaultDefaultValue": "alt",
      "scope": 5,
      "restricted": false
    },
    "editor.multiCursorPaste": {
      "markdownEnumDescriptions": [
        "Each cursor pastes a single line of the text.",
        "Each cursor pastes the full text."
      ],
      "markdownDescription": "Controls pasting when the line count of the pasted text matches the cursor count.",
      "type": "string",
      "enum": [
        "spread",
        "full"
      ],
      "default": "spread",
      "defaultDefaultValue": "spread",
      "scope": 5,
      "restricted": false
    },
    "editor.multiCursorLimit": {
      "markdownDescription": "Controls the max number of cursors that can be in an active editor at once.",
      "type": "integer",
      "default": 10000,
      "minimum": 1,
      "maximum": 100000,
      "defaultDefaultValue": 10000,
      "scope": 5,
      "restricted": false
    },
    "editor.occurrencesHighlight": {
      "description": "Controls whether the editor should highlight semantic symbol occurrences.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.overviewRulerBorder": {
      "description": "Controls whether a border should be drawn around the overview ruler.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.padding.top": {
      "type": "number",
      "default": 0,
      "minimum": 0,
      "maximum": 1000,
      "description": "Controls the amount of space between the top edge of the editor and the first line.",
      "defaultDefaultValue": 0,
      "scope": 5,
      "restricted": false
    },
    "editor.padding.bottom": {
      "type": "number",
      "default": 0,
      "minimum": 0,
      "maximum": 1000,
      "description": "Controls the amount of space between the bottom edge of the editor and the last line.",
      "defaultDefaultValue": 0,
      "scope": 5,
      "restricted": false
    },
    "editor.parameterHints.enabled": {
      "type": "boolean",
      "default": true,
      "description": "Enables a pop-up that shows parameter documentation and type information as you type.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.parameterHints.cycle": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether the parameter hints menu cycles or closes when reaching the end of the list.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.peekWidgetDefaultFocus": {
      "enumDescriptions": [
        "Focus the tree when opening peek",
        "Focus the editor when opening peek"
      ],
      "description": "Controls whether to focus the inline editor or the tree in the peek widget.",
      "type": "string",
      "enum": [
        "tree",
        "editor"
      ],
      "default": "tree",
      "defaultDefaultValue": "tree",
      "scope": 5,
      "restricted": false
    },
    "editor.definitionLinkOpensInPeek": {
      "description": "Controls whether the Go to Definition mouse gesture always opens the peek widget.",
      "type": "boolean",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 5,
      "restricted": false
    },
    "editor.quickSuggestions": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "strings": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "string",
              "enum": [
                "on",
                "inline",
                "off"
              ],
              "enumDescriptions": [
                "Quick suggestions show inside the suggest widget",
                "Quick suggestions show as ghost text",
                "Quick suggestions are disabled"
              ]
            }
          ],
          "default": "off",
          "description": "Enable quick suggestions inside strings."
        },
        "comments": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "string",
              "enum": [
                "on",
                "inline",
                "off"
              ],
              "enumDescriptions": [
                "Quick suggestions show inside the suggest widget",
                "Quick suggestions show as ghost text",
                "Quick suggestions are disabled"
              ]
            }
          ],
          "default": "off",
          "description": "Enable quick suggestions inside comments."
        },
        "other": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "string",
              "enum": [
                "on",
                "inline",
                "off"
              ],
              "enumDescriptions": [
                "Quick suggestions show inside the suggest widget",
                "Quick suggestions show as ghost text",
                "Quick suggestions are disabled"
              ]
            }
          ],
          "default": "on",
          "description": "Enable quick suggestions outside of strings and comments."
        }
      },
      "default": {
        "other": "on",
        "comments": "off",
        "strings": "off"
      },
      "markdownDescription": "Controls whether suggestions should automatically show up while typing. This can be controlled for typing in comments, strings, and other code. Quick suggestion can be configured to show as ghost text or with the suggest widget. Also be aware of the '#editor.suggestOnTriggerCharacters#'-setting which controls if suggestions are triggered by special characters.",
      "defaultDefaultValue": {
        "other": "on",
        "comments": "off",
        "strings": "off"
      },
      "scope": 5,
      "restricted": false
    },
    "editor.quickSuggestionsDelay": {
      "description": "Controls the delay in milliseconds after which quick suggestions will show up.",
      "type": "integer",
      "default": 10,
      "minimum": 0,
      "maximum": 1073741824,
      "defaultDefaultValue": 10,
      "scope": 5,
      "restricted": false
    },
    "editor.renameOnType": {
      "description": "Controls whether the editor auto renames on type.",
      "markdownDeprecationMessage": "Deprecated, use `editor.linkedEditing` instead.",
      "type": "boolean",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 5,
      "restricted": false,
      "deprecationMessage": "Deprecated, use `editor.linkedEditing` instead."
    },
    "editor.renderControlCharacters": {
      "description": "Controls whether the editor should render control characters.",
      "restricted": true,
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 5
    },
    "editor.renderFinalNewline": {
      "description": "Render last line number when the file ends with a newline.",
      "type": "string",
      "enum": [
        "off",
        "on",
        "dimmed"
      ],
      "default": "on",
      "defaultDefaultValue": "on",
      "scope": 5,
      "restricted": false
    },
    "editor.renderLineHighlight": {
      "enumDescriptions": [
        "",
        "",
        "",
        "Highlights both the gutter and the current line."
      ],
      "description": "Controls how the editor should render the current line highlight.",
      "type": "string",
      "enum": [
        "none",
        "gutter",
        "line",
        "all"
      ],
      "default": "line",
      "defaultDefaultValue": "line",
      "scope": 5,
      "restricted": false
    },
    "editor.renderLineHighlightOnlyWhenFocus": {
      "description": "Controls if the editor should render the current line highlight only when the editor is focused.",
      "type": "boolean",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 5,
      "restricted": false
    },
    "editor.renderWhitespace": {
      "enumDescriptions": [
        "",
        "Render whitespace characters except for single spaces between words.",
        "Render whitespace characters only on selected text.",
        "Render only trailing whitespace characters.",
        ""
      ],
      "description": "Controls how the editor should render whitespace characters.",
      "type": "string",
      "enum": [
        "none",
        "boundary",
        "selection",
        "trailing",
        "all"
      ],
      "default": "selection",
      "defaultDefaultValue": "selection",
      "scope": 5,
      "restricted": false
    },
    "editor.roundedSelection": {
      "description": "Controls whether selections should have rounded corners.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.rulers": {
      "type": "array",
      "items": {
        "anyOf": [
          {
            "type": "number",
            "description": "Number of monospace characters at which this editor ruler will render."
          },
          {
            "type": [
              "object"
            ],
            "properties": {
              "column": {
                "type": "number",
                "description": "Number of monospace characters at which this editor ruler will render."
              },
              "color": {
                "type": "string",
                "description": "Color of this editor ruler.",
                "format": "color-hex"
              }
            }
          }
        ]
      },
      "default": [],
      "description": "Render vertical rulers after a certain number of monospace characters. Use multiple values for multiple rulers. No rulers are drawn if array is empty.",
      "defaultDefaultValue": [],
      "scope": 5,
      "restricted": false
    },
    "editor.scrollbar.vertical": {
      "type": "string",
      "enum": [
        "auto",
        "visible",
        "hidden"
      ],
      "enumDescriptions": [
        "The vertical scrollbar will be visible only when necessary.",
        "The vertical scrollbar will always be visible.",
        "The vertical scrollbar will always be hidden."
      ],
      "default": "auto",
      "description": "Controls the visibility of the vertical scrollbar.",
      "defaultDefaultValue": "auto",
      "scope": 5,
      "restricted": false
    },
    "editor.scrollbar.horizontal": {
      "type": "string",
      "enum": [
        "auto",
        "visible",
        "hidden"
      ],
      "enumDescriptions": [
        "The horizontal scrollbar will be visible only when necessary.",
        "The horizontal scrollbar will always be visible.",
        "The horizontal scrollbar will always be hidden."
      ],
      "default": "auto",
      "description": "Controls the visibility of the horizontal scrollbar.",
      "defaultDefaultValue": "auto",
      "scope": 5,
      "restricted": false
    },
    "editor.scrollbar.verticalScrollbarSize": {
      "type": "number",
      "default": 14,
      "description": "The width of the vertical scrollbar.",
      "defaultDefaultValue": 14,
      "scope": 5,
      "restricted": false
    },
    "editor.scrollbar.horizontalScrollbarSize": {
      "type": "number",
      "default": 12,
      "description": "The height of the horizontal scrollbar.",
      "defaultDefaultValue": 12,
      "scope": 5,
      "restricted": false
    },
    "editor.scrollbar.scrollByPage": {
      "type": "boolean",
      "default": false,
      "description": "Controls whether clicks scroll by page or jump to click position.",
      "defaultDefaultValue": false,
      "scope": 5,
      "restricted": false
    },
    "editor.scrollBeyondLastColumn": {
      "description": "Controls the number of extra characters beyond which the editor will scroll horizontally.",
      "type": "integer",
      "default": 4,
      "minimum": 0,
      "maximum": 1073741824,
      "defaultDefaultValue": 4,
      "scope": 5,
      "restricted": false
    },
    "editor.scrollBeyondLastLine": {
      "description": "Controls whether the editor will scroll beyond the last line.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.scrollPredominantAxis": {
      "description": "Scroll only along the predominant axis when scrolling both vertically and horizontally at the same time. Prevents horizontal drift when scrolling vertically on a trackpad.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.selectionHighlight": {
      "description": "Controls whether the editor should highlight matches similar to the selection.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.showFoldingControls": {
      "enumDescriptions": [
        "Always show the folding controls.",
        "Never show the folding controls and reduce the gutter size.",
        "Only show the folding controls when the mouse is over the gutter."
      ],
      "description": "Controls when the folding controls on the gutter are shown.",
      "type": "string",
      "enum": [
        "always",
        "never",
        "mouseover"
      ],
      "default": "mouseover",
      "defaultDefaultValue": "mouseover",
      "scope": 5,
      "restricted": false
    },
    "editor.showUnused": {
      "description": "Controls fading out of unused code.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.snippetSuggestions": {
      "enumDescriptions": [
        "Show snippet suggestions on top of other suggestions.",
        "Show snippet suggestions below other suggestions.",
        "Show snippets suggestions with other suggestions.",
        "Do not show snippet suggestions."
      ],
      "description": "Controls whether snippets are shown with other suggestions and how they are sorted.",
      "type": "string",
      "enum": [
        "top",
        "bottom",
        "inline",
        "none"
      ],
      "default": "inline",
      "defaultDefaultValue": "inline",
      "scope": 5,
      "restricted": false
    },
    "editor.smartSelect.selectLeadingAndTrailingWhitespace": {
      "description": "Whether leading and trailing whitespace should always be selected.",
      "default": true,
      "type": "boolean",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.smoothScrolling": {
      "description": "Controls whether the editor will scroll using an animation.",
      "type": "boolean",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 5,
      "restricted": false
    },
    "editor.stickyScroll.enabled": {
      "type": "boolean",
      "default": false,
      "description": "Shows the nested current scopes during the scroll at the top of the editor.",
      "defaultDefaultValue": false,
      "scope": 5,
      "restricted": false
    },
    "editor.stickyScroll.maxLineCount": {
      "type": "number",
      "default": 5,
      "minimum": 1,
      "maximum": 10,
      "description": "Defines the maximum number of sticky lines to show.",
      "defaultDefaultValue": 5,
      "scope": 5,
      "restricted": false
    },
    "editor.stickyTabStops": {
      "description": "Emulate selection behavior of tab characters when using spaces for indentation. Selection will stick to tab stops.",
      "type": "boolean",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.insertMode": {
      "type": "string",
      "enum": [
        "insert",
        "replace"
      ],
      "enumDescriptions": [
        "Insert suggestion without overwriting text right of the cursor.",
        "Insert suggestion and overwrite text right of the cursor."
      ],
      "default": "insert",
      "description": "Controls whether words are overwritten when accepting completions. Note that this depends on extensions opting into this feature.",
      "defaultDefaultValue": "insert",
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.filterGraceful": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether filtering and sorting suggestions accounts for small typos.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.localityBonus": {
      "type": "boolean",
      "default": false,
      "description": "Controls whether sorting favors words that appear close to the cursor.",
      "defaultDefaultValue": false,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.shareSuggestSelections": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Controls whether remembered suggestion selections are shared between multiple workspaces and windows (needs `#editor.suggestSelection#`).",
      "defaultDefaultValue": false,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.selectionMode": {
      "type": "string",
      "enum": [
        "always",
        "never",
        "whenTriggerCharacter",
        "whenQuickSuggestion"
      ],
      "enumDescriptions": [
        "Always select a suggestion when automatically triggering IntelliSense.",
        "Never select a suggestion when automatically triggering IntelliSense.",
        "Select a suggestion only when triggering IntelliSense from a trigger character.",
        "Select a suggestion only when triggering IntelliSense as you type."
      ],
      "default": "always",
      "markdownDescription": "Controls whether a suggestion is selected when the widget shows. Note that this only applies to automatically triggered suggestions (`#editor.quickSuggestions#` and `#editor.suggestOnTriggerCharacters#`) and that a suggestion is always selected when explicitly invoked, e.g via `Ctrl+Space`.",
      "defaultDefaultValue": "always",
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.snippetsPreventQuickSuggestions": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether an active snippet prevents quick suggestions.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.showIcons": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether to show or hide icons in suggestions.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.showStatusBar": {
      "type": "boolean",
      "default": false,
      "description": "Controls the visibility of the status bar at the bottom of the suggest widget.",
      "defaultDefaultValue": false,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.preview": {
      "type": "boolean",
      "default": false,
      "description": "Controls whether to preview the suggestion outcome in the editor.",
      "defaultDefaultValue": false,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.showInlineDetails": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether suggest details show inline with the label or only in the details widget.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.maxVisibleSuggestions": {
      "type": "number",
      "deprecationMessage": "This setting is deprecated. The suggest widget can now be resized.",
      "default": 0,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.filteredTypes": {
      "type": "object",
      "deprecationMessage": "This setting is deprecated, please use separate settings like 'editor.suggest.showKeywords' or 'editor.suggest.showSnippets' instead.",
      "default": {},
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.showMethods": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled IntelliSense shows `method`-suggestions.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.showFunctions": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled IntelliSense shows `function`-suggestions.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.showConstructors": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled IntelliSense shows `constructor`-suggestions.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.showDeprecated": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled IntelliSense shows `deprecated`-suggestions.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.matchOnWordStartOnly": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled IntelliSense filtering requires that the first character matches on a word start. For example, `c` on `Console` or `WebContext` but _not_ on `description`. When disabled IntelliSense will show more results but still sorts them by match quality.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.showFields": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled IntelliSense shows `field`-suggestions.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.showVariables": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled IntelliSense shows `variable`-suggestions.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.showClasses": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled IntelliSense shows `class`-suggestions.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.showStructs": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled IntelliSense shows `struct`-suggestions.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.showInterfaces": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled IntelliSense shows `interface`-suggestions.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.showModules": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled IntelliSense shows `module`-suggestions.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.showProperties": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled IntelliSense shows `property`-suggestions.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.showEvents": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled IntelliSense shows `event`-suggestions.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.showOperators": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled IntelliSense shows `operator`-suggestions.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.showUnits": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled IntelliSense shows `unit`-suggestions.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.showValues": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled IntelliSense shows `value`-suggestions.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.showConstants": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled IntelliSense shows `constant`-suggestions.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.showEnums": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled IntelliSense shows `enum`-suggestions.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.showEnumMembers": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled IntelliSense shows `enumMember`-suggestions.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.showKeywords": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled IntelliSense shows `keyword`-suggestions.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.showWords": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled IntelliSense shows `text`-suggestions.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.showColors": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled IntelliSense shows `color`-suggestions.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.showFiles": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled IntelliSense shows `file`-suggestions.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.showReferences": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled IntelliSense shows `reference`-suggestions.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.showCustomcolors": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled IntelliSense shows `customcolor`-suggestions.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.showFolders": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled IntelliSense shows `folder`-suggestions.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.showTypeParameters": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled IntelliSense shows `typeParameter`-suggestions.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.showSnippets": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled IntelliSense shows `snippet`-suggestions.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.showUsers": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled IntelliSense shows `user`-suggestions.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.showIssues": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled IntelliSense shows `issues`-suggestions.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggestFontSize": {
      "markdownDescription": "Font size for the suggest widget. When set to `0`, the value of `#editor.fontSize#` is used.",
      "type": "integer",
      "default": 0,
      "minimum": 0,
      "maximum": 1000,
      "defaultDefaultValue": 0,
      "scope": 5,
      "restricted": false
    },
    "editor.suggestLineHeight": {
      "markdownDescription": "Line height for the suggest widget. When set to `0`, the value of `#editor.lineHeight#` is used. The minimum value is 8.",
      "type": "integer",
      "default": 0,
      "minimum": 0,
      "maximum": 1000,
      "defaultDefaultValue": 0,
      "scope": 5,
      "restricted": false
    },
    "editor.suggestOnTriggerCharacters": {
      "description": "Controls whether suggestions should automatically show up when typing trigger characters.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggestSelection": {
      "markdownEnumDescriptions": [
        "Always select the first suggestion.",
        "Select recent suggestions unless further typing selects one, e.g. `console.| -> console.log` because `log` has been completed recently.",
        "Select suggestions based on previous prefixes that have completed those suggestions, e.g. `co -> console` and `con -> const`."
      ],
      "description": "Controls how suggestions are pre-selected when showing the suggest list.",
      "type": "string",
      "enum": [
        "first",
        "recentlyUsed",
        "recentlyUsedByPrefix"
      ],
      "default": "first",
      "defaultDefaultValue": "first",
      "scope": 5,
      "restricted": false
    },
    "editor.tabCompletion": {
      "enumDescriptions": [
        "Tab complete will insert the best matching suggestion when pressing tab.",
        "Disable tab completions.",
        "Tab complete snippets when their prefix match. Works best when 'quickSuggestions' aren't enabled."
      ],
      "description": "Enables tab completions.",
      "type": "string",
      "enum": [
        "on",
        "off",
        "onlySnippets"
      ],
      "default": "off",
      "defaultDefaultValue": "off",
      "scope": 5,
      "restricted": false
    },
    "editor.unicodeHighlight.nonBasicASCII": {
      "restricted": true,
      "type": [
        "boolean",
        "string"
      ],
      "enum": [
        true,
        false,
        "inUntrustedWorkspace"
      ],
      "default": "inUntrustedWorkspace",
      "description": "Controls whether all non-basic ASCII characters are highlighted. Only characters between U+0020 and U+007E, tab, line-feed and carriage-return are considered basic ASCII.",
      "defaultDefaultValue": "inUntrustedWorkspace",
      "scope": 5
    },
    "editor.unicodeHighlight.invisibleCharacters": {
      "restricted": true,
      "type": "boolean",
      "default": true,
      "description": "Controls whether characters that just reserve space or have no width at all are highlighted.",
      "defaultDefaultValue": true,
      "scope": 5
    },
    "editor.unicodeHighlight.ambiguousCharacters": {
      "restricted": true,
      "type": "boolean",
      "default": true,
      "description": "Controls whether characters are highlighted that can be confused with basic ASCII characters, except those that are common in the current user locale.",
      "defaultDefaultValue": true,
      "scope": 5
    },
    "editor.unicodeHighlight.includeComments": {
      "restricted": true,
      "type": [
        "boolean",
        "string"
      ],
      "enum": [
        true,
        false,
        "inUntrustedWorkspace"
      ],
      "default": "inUntrustedWorkspace",
      "description": "Controls whether characters in comments should also be subject to Unicode highlighting.",
      "defaultDefaultValue": "inUntrustedWorkspace",
      "scope": 5
    },
    "editor.unicodeHighlight.includeStrings": {
      "restricted": true,
      "type": [
        "boolean",
        "string"
      ],
      "enum": [
        true,
        false,
        "inUntrustedWorkspace"
      ],
      "default": true,
      "description": "Controls whether characters in strings should also be subject to Unicode highlighting.",
      "defaultDefaultValue": true,
      "scope": 5
    },
    "editor.unicodeHighlight.allowedCharacters": {
      "restricted": true,
      "type": "object",
      "default": {},
      "description": "Defines allowed characters that are not being highlighted.",
      "additionalProperties": {
        "type": "boolean"
      },
      "defaultDefaultValue": {},
      "scope": 5
    },
    "editor.unicodeHighlight.allowedLocales": {
      "restricted": true,
      "type": "object",
      "additionalProperties": {
        "type": "boolean"
      },
      "default": {
        "_os": true,
        "_vscode": true
      },
      "description": "Unicode characters that are common in allowed locales are not being highlighted.",
      "defaultDefaultValue": {
        "_os": true,
        "_vscode": true
      },
      "scope": 5
    },
    "editor.unusualLineTerminators": {
      "enumDescriptions": [
        "Unusual line terminators are automatically removed.",
        "Unusual line terminators are ignored.",
        "Unusual line terminators prompt to be removed."
      ],
      "description": "Remove unusual line terminators that might cause problems.",
      "type": "string",
      "enum": [
        "auto",
        "off",
        "prompt"
      ],
      "default": "prompt",
      "defaultDefaultValue": "prompt",
      "scope": 5,
      "restricted": false
    },
    "editor.useTabStops": {
      "description": "Inserting and deleting whitespace follows tab stops.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.wordBreak": {
      "markdownEnumDescriptions": [
        "Use the default line break rule.",
        "Word breaks should not be used for Chinese/Japanese/Korean (CJK) text. Non-CJK text behavior is the same as for normal."
      ],
      "description": "Controls the word break rules used for Chinese/Japanese/Korean (CJK) text.",
      "type": "string",
      "enum": [
        "normal",
        "keepAll"
      ],
      "default": "normal",
      "defaultDefaultValue": "normal",
      "scope": 5,
      "restricted": false
    },
    "editor.wordSeparators": {
      "description": "Characters that will be used as word separators when doing word related navigations or operations.",
      "type": "string",
      "default": "`~!@#$%^&*()-=+[{]}\\|;:'\",.<>/?",
      "defaultDefaultValue": "`~!@#$%^&*()-=+[{]}\\|;:'\",.<>/?",
      "scope": 5,
      "restricted": false
    },
    "editor.wordWrap": {
      "markdownEnumDescriptions": [
        "Lines will never wrap.",
        "Lines will wrap at the viewport width.",
        "Lines will wrap at `#editor.wordWrapColumn#`.",
        "Lines will wrap at the minimum of viewport and `#editor.wordWrapColumn#`."
      ],
      "description": "Controls how lines should wrap.",
      "type": "string",
      "enum": [
        "off",
        "on",
        "wordWrapColumn",
        "bounded"
      ],
      "default": "off",
      "defaultDefaultValue": "off",
      "scope": 5,
      "restricted": false
    },
    "editor.wordWrapColumn": {
      "markdownDescription": "Controls the wrapping column of the editor when `#editor.wordWrap#` is `wordWrapColumn` or `bounded`.",
      "type": "integer",
      "default": 80,
      "minimum": 1,
      "maximum": 1073741824,
      "defaultDefaultValue": 80,
      "scope": 5,
      "restricted": false
    },
    "editor.wrappingIndent": {
      "type": "string",
      "enum": [
        "none",
        "same",
        "indent",
        "deepIndent"
      ],
      "enumDescriptions": [
        "No indentation. Wrapped lines begin at column 1.",
        "Wrapped lines get the same indentation as the parent.",
        "Wrapped lines get +1 indentation toward the parent.",
        "Wrapped lines get +2 indentation toward the parent."
      ],
      "description": "Controls the indentation of wrapped lines.",
      "default": "same",
      "defaultDefaultValue": "same",
      "scope": 5,
      "restricted": false
    },
    "editor.wrappingStrategy": {
      "enumDescriptions": [
        "Assumes that all characters are of the same width. This is a fast algorithm that works correctly for monospace fonts and certain scripts (like Latin characters) where glyphs are of equal width.",
        "Delegates wrapping points computation to the browser. This is a slow algorithm, that might cause freezes for large files, but it works correctly in all cases."
      ],
      "type": "string",
      "enum": [
        "simple",
        "advanced"
      ],
      "default": "simple",
      "description": "Controls the algorithm that computes wrapping points. Note that when in accessibility mode, advanced will be used for the best experience.",
      "defaultDefaultValue": "simple",
      "scope": 5,
      "restricted": false
    },
    "editor.showDeprecated": {
      "description": "Controls strikethrough deprecated variables.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.inlayHints.enabled": {
      "type": "string",
      "default": "on",
      "description": "Enables the inlay hints in the editor.",
      "enum": [
        "on",
        "onUnlessPressed",
        "offUnlessPressed",
        "off"
      ],
      "markdownEnumDescriptions": [
        "Inlay hints are enabled",
        "Inlay hints are showing by default and hide when holding Ctrl+Option",
        "Inlay hints are hidden by default and show when holding Ctrl+Option",
        "Inlay hints are disabled"
      ],
      "defaultDefaultValue": "on",
      "scope": 5,
      "restricted": false
    },
    "editor.inlayHints.fontSize": {
      "type": "number",
      "default": 0,
      "markdownDescription": "Controls font size of inlay hints in the editor. As default the `#editor.fontSize#` is used when the configured value is less than `5` or greater than the editor font size.",
      "defaultDefaultValue": 0,
      "scope": 5,
      "restricted": false
    },
    "editor.inlayHints.fontFamily": {
      "type": "string",
      "default": "",
      "markdownDescription": "Controls font family of inlay hints in the editor. When set to empty, the `#editor.fontFamily#` is used.",
      "defaultDefaultValue": "",
      "scope": 5,
      "restricted": false
    },
    "editor.inlayHints.padding": {
      "type": "boolean",
      "default": false,
      "description": "Enables the padding around the inlay hints in the editor.",
      "defaultDefaultValue": false,
      "scope": 5,
      "restricted": false
    },
    "editor.tabFocusMode": {
      "markdownDescription": "Controls whether the editor receives tabs or defers them to the workbench for navigation.",
      "type": "boolean",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 5,
      "restricted": false
    },
    "editor.experimental.pasteActions.enabled": {
      "type": "boolean",
      "scope": 5,
      "description": "Enable/disable running edits from extensions on paste.",
      "default": false,
      "defaultDefaultValue": false,
      "restricted": false
    },
    "editor.codeActionWidget.showHeaders": {
      "type": "boolean",
      "scope": 5,
      "description": "Enable/disable showing group headers in the Code Action menu.",
      "default": true,
      "defaultDefaultValue": true,
      "restricted": false
    },
    "editor.rename.enablePreview": {
      "scope": 5,
      "description": "Enable/disable the ability to preview changes before renaming",
      "default": true,
      "type": "boolean",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "breadcrumbs.symbolSortOrder": {
      "description": "Controls how symbols are sorted in the breadcrumbs outline view.",
      "type": "string",
      "default": "position",
      "scope": 5,
      "enum": [
        "position",
        "name",
        "type"
      ],
      "enumDescriptions": [
        "Show symbol outline in file position order.",
        "Show symbol outline in alphabetical order.",
        "Show symbol outline in symbol type order."
      ],
      "defaultDefaultValue": "position",
      "restricted": false
    },
    "breadcrumbs.showFiles": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled breadcrumbs show `file`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "breadcrumbs.showModules": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled breadcrumbs show `module`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "breadcrumbs.showNamespaces": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled breadcrumbs show `namespace`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "breadcrumbs.showPackages": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled breadcrumbs show `package`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "breadcrumbs.showClasses": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled breadcrumbs show `class`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "breadcrumbs.showMethods": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled breadcrumbs show `method`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "breadcrumbs.showProperties": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled breadcrumbs show `property`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "breadcrumbs.showFields": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled breadcrumbs show `field`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "breadcrumbs.showConstructors": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled breadcrumbs show `constructor`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "breadcrumbs.showEnums": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled breadcrumbs show `enum`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "breadcrumbs.showInterfaces": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled breadcrumbs show `interface`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "breadcrumbs.showFunctions": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled breadcrumbs show `function`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "breadcrumbs.showVariables": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled breadcrumbs show `variable`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "breadcrumbs.showConstants": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled breadcrumbs show `constant`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "breadcrumbs.showStrings": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled breadcrumbs show `string`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "breadcrumbs.showNumbers": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled breadcrumbs show `number`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "breadcrumbs.showBooleans": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled breadcrumbs show `boolean`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "breadcrumbs.showArrays": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled breadcrumbs show `array`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "breadcrumbs.showObjects": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled breadcrumbs show `object`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "breadcrumbs.showKeys": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled breadcrumbs show `key`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "breadcrumbs.showNull": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled breadcrumbs show `null`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "breadcrumbs.showEnumMembers": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled breadcrumbs show `enumMember`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "breadcrumbs.showStructs": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled breadcrumbs show `struct`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "breadcrumbs.showEvents": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled breadcrumbs show `event`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "breadcrumbs.showOperators": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled breadcrumbs show `operator`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "breadcrumbs.showTypeParameters": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled breadcrumbs show `typeParameter`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "workbench.editor.languageDetection": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether the language in a text editor is automatically detected unless the language has been explicitly set by the language picker. This can also be scoped by language so you can specify which languages you do not want to be switched off of. This is useful for languages like Markdown that often contain other languages that might trick language detection into thinking it's the embedded language and not Markdown.",
      "scope": 5,
      "defaultDefaultValue": true,
      "restricted": false
    },
    "workbench.editor.restoreViewState": {
      "type": "boolean",
      "markdownDescription": "Restores the last editor view state (such as scroll position) when re-opening editors after they have been closed. Editor view state is stored per editor group and discarded when a group closes. Use the `#workbench.editor.sharedViewState#` setting to use the last known view state across all editor groups in case no previous view state was found for a editor group.",
      "default": true,
      "scope": 5,
      "defaultDefaultValue": true,
      "restricted": false
    },
    "workbench.localHistory.enabled": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether local file history is enabled. When enabled, the file contents of an editor that is saved will be stored to a backup location to be able to restore or review the contents later. Changing this setting has no effect on existing local file history entries.",
      "scope": 4,
      "defaultDefaultValue": true,
      "restricted": false
    },
    "workbench.localHistory.maxFileSize": {
      "type": "number",
      "default": 256,
      "minimum": 1,
      "description": "Controls the maximum size of a file (in KB) to be considered for local file history. Files that are larger will not be added to the local file history. Changing this setting has no effect on existing local file history entries.",
      "scope": 4,
      "defaultDefaultValue": 256,
      "restricted": false
    },
    "workbench.localHistory.maxFileEntries": {
      "type": "number",
      "default": 50,
      "minimum": 0,
      "description": "Controls the maximum number of local file history entries per file. When the number of local file history entries exceeds this number for a file, the oldest entries will be discarded.",
      "scope": 4,
      "defaultDefaultValue": 50,
      "restricted": false
    },
    "workbench.localHistory.exclude": {
      "type": "object",
      "markdownDescription": "Configure [glob patterns](https://code.visualstudio.com/docs/editor/codebasics#_advanced-search-options) for excluding files from the local file history. Changing this setting has no effect on existing local file history entries.",
      "scope": 4,
      "default": {},
      "restricted": false
    },
    "workbench.localHistory.mergeWindow": {
      "type": "number",
      "default": 10,
      "minimum": 1,
      "markdownDescription": "Configure an interval in seconds during which the last entry in local file history is replaced with the entry that is being added. This helps reduce the overall number of entries that are added, for example when auto save is enabled. This setting is only applied to entries that have the same source of origin. Changing this setting has no effect on existing local file history entries.",
      "scope": 4,
      "defaultDefaultValue": 10,
      "restricted": false
    },
    "editor.codeActionsOnSave": {
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "source.fixAll": {
              "type": "boolean",
              "description": "Controls whether auto fix action should be run on file save."
            }
          },
          "additionalProperties": {
            "type": "boolean"
          }
        },
        {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      ],
      "default": {},
      "description": "Code Action kinds to be run on save.",
      "scope": 5,
      "defaultDefaultValue": {},
      "restricted": false,
      "properties": {
        "source.fixAll": {
          "type": "boolean",
          "description": "Controls whether auto fix action should be run on file save."
        },
        "source.organizeImports": {
          "type": "boolean",
          "description": "Controls whether 'Organize Imports' actions should be run on file save."
        }
      }
    },
    "editor.defaultFoldingRangeProvider": {
      "description": "Defines a default folding range provider that takes precedence over all other folding range providers. Must be the identifier of an extension contributing a folding range provider.",
      "type": [
        "string",
        "null"
      ],
      "default": null,
      "enum": [
        null,
        "GitHub.copilot",
        "vscode.css-language-features",
        "vscode.html-language-features",
        "vscode.json-language-features",
        "vscode.markdown-language-features",
        "vscode.php-language-features",
        "ms-python.python",
        "vscode.references-view",
        "ms-vscode-remote.remote-ssh-edit",
        "vscode.search-result",
        "svelte.svelte-vscode",
        "vscode.typescript-language-features",
        "KevinRose.vsc-python-indent",
        "ms-python.vscode-pylance",
        "redhat.vscode-yaml",
        "aaron-bond.better-comments",
        "amirHA.better-comments-2",
        "alefragnani.Bookmarks",
        "vscode.configuration-editing",
        "GitHub.copilot-labs",
        "vscode.debug-auto-launch",
        "vscode.debug-server-ready",
        "vscode.emmet",
        "vscode.extension-editing",
        "vscode.git",
        "vscode.git-base",
        "vscode.github",
        "vscode.github-authentication",
        "gitpod.gitpod-desktop",
        "gitpod.gitpod-remote-ssh",
        "vscode.grunt",
        "vscode.gulp",
        "vscode.ipynb",
        "vscode.jake",
        "ms-vscode.js-debug",
        "ms-vscode.js-debug-companion",
        "ms-toolsai.jupyter",
        "ms-toolsai.jupyter-renderers",
        "vscode.markdown-math",
        "vscode.media-preview",
        "vscode.merge-conflict",
        "vscode.microsoft-authentication",
        "vscode.npm",
        "KuiyuanFu.python-leetcode",
        "ms-vscode-remote.remote-containers",
        "ms-vscode.remote-explorer",
        "ms-vscode-remote.remote-ssh",
        "vscode.simple-browser",
        "SimonSiefke.svg-preview",
        "hediet.vscode-drawio",
        "ms-vscode.vscode-js-profile-table",
        "ms-toolsai.vscode-jupyter-cell-tags",
        "ms-toolsai.vscode-jupyter-slideshow",
        "GitHub.vscode-pull-request-github",
        "luxass.vscode-schema-extractor",
        "bradlc.vscode-tailwindcss"
      ],
      "enumItemLabels": [
        "All",
        "GitHub Copilot",
        "CSS Language Features",
        "HTML Language Features",
        "JSON Language Features",
        "Markdown Language Features",
        "PHP Language Features",
        "Python",
        "Reference Search View",
        "Remote - SSH: Editing Configuration Files",
        "Search Result",
        "Svelte for VS Code",
        "TypeScript and JavaScript Language Features",
        "Python Indent",
        "Pylance",
        "YAML",
        "Better Comments",
        "Better Comments (with ELPS support)",
        "Bookmarks",
        "Configuration Editing",
        "GitHub Copilot Labs",
        "Node Debug Auto-attach",
        "Server Ready Action",
        "Emmet",
        "Extension Authoring",
        "Git",
        "Git Base",
        "GitHub",
        "GitHub Authentication",
        "Gitpod",
        "Gitpod Remote",
        "Grunt support for VS Code",
        "Gulp support for VSCode",
        ".ipynb Support",
        "Jake support for VS Code",
        "JavaScript Debugger",
        "JavaScript Debugger Companion Extension",
        "Jupyter",
        "Jupyter Notebook Renderers",
        "Markdown Math",
        "Media Preview",
        "Merge Conflict",
        "Microsoft Account",
        "NPM support for VS Code",
        "PythonLeetcode",
        "Dev Containers",
        "Remote Explorer",
        "Remote - SSH",
        "Simple Browser",
        "Svg Preview",
        "Draw.io Integration",
        "Table Visualizer for JavaScript Profiles",
        "Jupyter Cell Tags",
        "Jupyter Slide Show",
        "GitHub Pull Requests and Issues",
        "Schema Extractor",
        "Tailwind CSS IntelliSense"
      ],
      "markdownEnumDescriptions": [
        "All active folding range providers",
        "Your AI pair programmer",
        "Provides rich language support for CSS, LESS and SCSS files.",
        "Provides rich language support for HTML and Handlebar files",
        "Provides rich language support for JSON files.",
        "Provides rich language support for Markdown.",
        "Provides rich language support for PHP files.",
        "IntelliSense (Pylance), Linting, Debugging (multi-threaded, remote), Jupyter Notebooks, code formatting, refactoring, unit tests, and more.",
        "Reference Search results as separate, stable view in the sidebar",
        "Edit SSH configuration files",
        "Provides syntax highlighting and language features for tabbed search results.",
        "Svelte language support for VS Code",
        "Provides rich language support for JavaScript and TypeScript.",
        "Correct Python indentation",
        "A performant, feature-rich language server for Python in VS Code",
        "YAML Language Support by Red Hat, with built-in Kubernetes syntax support",
        "Improve your code commenting by annotating with alert, informational, TODOs, and more!",
        "Improve your code commenting by annotating with alert, informational, TODOs, and more!",
        "Mark lines and jump to them",
        "Provides capabilities (advanced IntelliSense, auto-fixing) in configuration files like settings, launch, and extension recommendation files.",
        "Experimental features for GitHub Copilot",
        "Helper for auto-attach feature when node-debug extensions are not active.",
        "Open URI in browser if server under debugging is ready.",
        "Emmet support for VS Code",
        "Provides linting capabilities for authoring extensions.",
        "Git SCM Integration",
        "Git static contributions and pickers.",
        "GitHub features for VS Code",
        "GitHub Authentication Provider",
        "Gitpod Support",
        "Gitpod Remote Support",
        "Extension to add Grunt capabilities to VS Code.",
        "Extension to add Gulp capabilities to VSCode.",
        "Provides basic support for opening and reading Jupyter's .ipynb notebook files",
        "Extension to add Jake capabilities to VS Code.",
        "An extension for debugging Node.js programs and Chrome.",
        "Companion extension to js-debug that provides capability for remote debugging",
        "Jupyter notebook support, interactive programming and computing that supports Intellisense, debugging and more.",
        "Renderers for Jupyter Notebooks (with plotly, vega, gif, png, svg, jpeg and other such outputs)",
        "Adds math support to Markdown in notebooks.",
        "Provides VS Code's built-in previews for images, audio, and video",
        "Highlighting and commands for inline merge conflicts.",
        "Microsoft authentication provider",
        "Extension to add task support for npm scripts.",
        "Solve LeetCode problems in VS Code",
        "Open any folder or repository inside a Docker container and take advantage of Visual Studio Code's full feature set.",
        "View remote machines for Remote - SSH and Remote Server.",
        "Open any folder on a remote machine using SSH and take advantage of VS Code's full feature set.",
        "A very basic built-in webview for displaying web content.",
        "Preview for Svg files",
        "This unofficial extension integrates Draw.io into VS Code.",
        "Text visualizer for profiles taken from the JavaScript debugger",
        "Jupyter Cell Tags support for VS Code",
        "Jupyter Slide Show support for VS Code",
        "Pull Request and Issue Provider for GitHub",
        "A extension used to extract Visual Studio Code Schemas",
        "Intelligent Tailwind CSS tooling for VS Code"
      ],
      "defaultDefaultValue": null,
      "scope": 5,
      "restricted": false
    },
    "editor.defaultFormatter": {
      "description": "Defines a default formatter which takes precedence over all other formatter settings. Must be the identifier of an extension contributing a formatter.",
      "type": [
        "string",
        "null"
      ],
      "default": null,
      "enum": [
        null,
        "aaron-bond.better-comments",
        "amirHA.better-comments-2",
        "GitHub.copilot",
        "vscode.css-language-features",
        "vscode.html-language-features",
        "vscode.json-language-features",
        "vscode.markdown-language-features",
        "vscode.php-language-features",
        "ms-python.python",
        "vscode.references-view",
        "ms-vscode-remote.remote-ssh-edit",
        "vscode.search-result",
        "svelte.svelte-vscode",
        "vscode.typescript-language-features",
        "KevinRose.vsc-python-indent",
        "ms-python.vscode-pylance",
        "redhat.vscode-yaml",
        "alefragnani.Bookmarks",
        "vscode.configuration-editing",
        "GitHub.copilot-labs",
        "vscode.debug-auto-launch",
        "vscode.debug-server-ready",
        "vscode.emmet",
        "vscode.extension-editing",
        "vscode.git",
        "vscode.git-base",
        "vscode.github",
        "vscode.github-authentication",
        "gitpod.gitpod-desktop",
        "gitpod.gitpod-remote-ssh",
        "vscode.grunt",
        "vscode.gulp",
        "vscode.ipynb",
        "vscode.jake",
        "ms-vscode.js-debug",
        "ms-vscode.js-debug-companion",
        "ms-toolsai.jupyter",
        "ms-toolsai.jupyter-renderers",
        "vscode.markdown-math",
        "vscode.media-preview",
        "vscode.merge-conflict",
        "vscode.microsoft-authentication",
        "vscode.npm",
        "KuiyuanFu.python-leetcode",
        "ms-vscode-remote.remote-containers",
        "ms-vscode.remote-explorer",
        "ms-vscode-remote.remote-ssh",
        "vscode.simple-browser",
        "SimonSiefke.svg-preview",
        "hediet.vscode-drawio",
        "ms-vscode.vscode-js-profile-table",
        "ms-toolsai.vscode-jupyter-cell-tags",
        "ms-toolsai.vscode-jupyter-slideshow",
        "GitHub.vscode-pull-request-github",
        "luxass.vscode-schema-extractor",
        "bradlc.vscode-tailwindcss"
      ],
      "enumItemLabels": [
        "None",
        "Better Comments",
        "Better Comments (with ELPS support)",
        "GitHub Copilot",
        "CSS Language Features",
        "HTML Language Features",
        "JSON Language Features",
        "Markdown Language Features",
        "PHP Language Features",
        "Python",
        "Reference Search View",
        "Remote - SSH: Editing Configuration Files",
        "Search Result",
        "Svelte for VS Code",
        "TypeScript and JavaScript Language Features",
        "Python Indent",
        "Pylance",
        "YAML",
        "Bookmarks",
        "Configuration Editing",
        "GitHub Copilot Labs",
        "Node Debug Auto-attach",
        "Server Ready Action",
        "Emmet",
        "Extension Authoring",
        "Git",
        "Git Base",
        "GitHub",
        "GitHub Authentication",
        "Gitpod",
        "Gitpod Remote",
        "Grunt support for VS Code",
        "Gulp support for VSCode",
        ".ipynb Support",
        "Jake support for VS Code",
        "JavaScript Debugger",
        "JavaScript Debugger Companion Extension",
        "Jupyter",
        "Jupyter Notebook Renderers",
        "Markdown Math",
        "Media Preview",
        "Merge Conflict",
        "Microsoft Account",
        "NPM support for VS Code",
        "PythonLeetcode",
        "Dev Containers",
        "Remote Explorer",
        "Remote - SSH",
        "Simple Browser",
        "Svg Preview",
        "Draw.io Integration",
        "Table Visualizer for JavaScript Profiles",
        "Jupyter Cell Tags",
        "Jupyter Slide Show",
        "GitHub Pull Requests and Issues",
        "Schema Extractor",
        "Tailwind CSS IntelliSense"
      ],
      "markdownEnumDescriptions": [
        "None",
        "Improve your code commenting by annotating with alert, informational, TODOs, and more!",
        "Improve your code commenting by annotating with alert, informational, TODOs, and more!",
        "Your AI pair programmer",
        "Provides rich language support for CSS, LESS and SCSS files.",
        "Provides rich language support for HTML and Handlebar files",
        "Provides rich language support for JSON files.",
        "Provides rich language support for Markdown.",
        "Provides rich language support for PHP files.",
        "IntelliSense (Pylance), Linting, Debugging (multi-threaded, remote), Jupyter Notebooks, code formatting, refactoring, unit tests, and more.",
        "Reference Search results as separate, stable view in the sidebar",
        "Edit SSH configuration files",
        "Provides syntax highlighting and language features for tabbed search results.",
        "Svelte language support for VS Code",
        "Provides rich language support for JavaScript and TypeScript.",
        "Correct Python indentation",
        "A performant, feature-rich language server for Python in VS Code",
        "YAML Language Support by Red Hat, with built-in Kubernetes syntax support",
        "Mark lines and jump to them",
        "Provides capabilities (advanced IntelliSense, auto-fixing) in configuration files like settings, launch, and extension recommendation files.",
        "Experimental features for GitHub Copilot",
        "Helper for auto-attach feature when node-debug extensions are not active.",
        "Open URI in browser if server under debugging is ready.",
        "Emmet support for VS Code",
        "Provides linting capabilities for authoring extensions.",
        "Git SCM Integration",
        "Git static contributions and pickers.",
        "GitHub features for VS Code",
        "GitHub Authentication Provider",
        "Gitpod Support",
        "Gitpod Remote Support",
        "Extension to add Grunt capabilities to VS Code.",
        "Extension to add Gulp capabilities to VSCode.",
        "Provides basic support for opening and reading Jupyter's .ipynb notebook files",
        "Extension to add Jake capabilities to VS Code.",
        "An extension for debugging Node.js programs and Chrome.",
        "Companion extension to js-debug that provides capability for remote debugging",
        "Jupyter notebook support, interactive programming and computing that supports Intellisense, debugging and more.",
        "Renderers for Jupyter Notebooks (with plotly, vega, gif, png, svg, jpeg and other such outputs)",
        "Adds math support to Markdown in notebooks.",
        "Provides VS Code's built-in previews for images, audio, and video",
        "Highlighting and commands for inline merge conflicts.",
        "Microsoft authentication provider",
        "Extension to add task support for npm scripts.",
        "Solve LeetCode problems in VS Code",
        "Open any folder or repository inside a Docker container and take advantage of Visual Studio Code's full feature set.",
        "View remote machines for Remote - SSH and Remote Server.",
        "Open any folder on a remote machine using SSH and take advantage of VS Code's full feature set.",
        "A very basic built-in webview for displaying web content.",
        "Preview for Svg files",
        "This unofficial extension integrates Draw.io into VS Code.",
        "Text visualizer for profiles taken from the JavaScript debugger",
        "Jupyter Cell Tags support for VS Code",
        "Jupyter Slide Show support for VS Code",
        "Pull Request and Issue Provider for GitHub",
        "A extension used to extract Visual Studio Code Schemas",
        "Intelligent Tailwind CSS tooling for VS Code"
      ],
      "defaultDefaultValue": null,
      "scope": 5,
      "restricted": false
    },
    "editor.snippets.codeActions.enabled": {
      "description": "Controls if surround-with-snippets or file template snippets show as Code Actions.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "debug.saveBeforeStart": {
      "description": "Controls what editors to save before starting a debug session.",
      "enum": [
        "allEditorsInActiveGroup",
        "nonUntitledEditorsInActiveGroup",
        "none"
      ],
      "enumDescriptions": [
        "Save all editors in the active group before starting a debug session.",
        "Save all editors in the active group except untitled ones before starting a debug session.",
        "Don't save any editors before starting a debug session."
      ],
      "default": "allEditorsInActiveGroup",
      "scope": 5,
      "defaultDefaultValue": "allEditorsInActiveGroup",
      "restricted": false
    },
    "files.exclude": {
      "type": "object",
      "markdownDescription": "Configure [glob patterns](https://code.visualstudio.com/docs/editor/codebasics#_advanced-search-options) for excluding files and folders. For example, the File Explorer decides which files and folders to show or hide based on this setting. Refer to the `#search.exclude#` setting to define search-specific excludes. Refer to the `#explorer.excludeGitIgnore#` setting for ignoring files based on your `.gitignore`.",
      "default": {
        "**/.git": true,
        "**/.svn": true,
        "**/.hg": true,
        "**/CVS": true,
        "**/.DS_Store": true,
        "**/Thumbs.db": true
      },
      "scope": 4,
      "additionalProperties": {
        "anyOf": [
          {
            "type": "boolean",
            "enum": [
              true,
              false
            ],
            "enumDescriptions": [
              "Enable the pattern.",
              "Disable the pattern."
            ],
            "description": "The glob pattern to match file paths against. Set to true or false to enable or disable the pattern."
          },
          {
            "type": "object",
            "properties": {
              "when": {
                "type": "string",
                "pattern": "\\w*\\$\\(basename\\)\\w*",
                "default": "$(basename).ext",
                "markdownDescription": "Additional check on the siblings of a matching file. Use \\$(basename) as variable for the matching file name."
              }
            }
          }
        ]
      },
      "defaultDefaultValue": {
        "**/.git": true,
        "**/.svn": true,
        "**/.hg": true,
        "**/CVS": true,
        "**/.DS_Store": true,
        "**/Thumbs.db": true
      },
      "restricted": false
    },
    "files.encoding": {
      "type": "string",
      "enum": [
        "utf8",
        "utf8bom",
        "utf16le",
        "utf16be",
        "windows1252",
        "iso88591",
        "iso88593",
        "iso885915",
        "macroman",
        "cp437",
        "windows1256",
        "iso88596",
        "windows1257",
        "iso88594",
        "iso885914",
        "windows1250",
        "iso88592",
        "cp852",
        "windows1251",
        "cp866",
        "iso88595",
        "koi8r",
        "koi8u",
        "iso885913",
        "windows1253",
        "iso88597",
        "windows1255",
        "iso88598",
        "iso885910",
        "iso885916",
        "windows1254",
        "iso88599",
        "windows1258",
        "gbk",
        "gb18030",
        "cp950",
        "big5hkscs",
        "shiftjis",
        "eucjp",
        "euckr",
        "windows874",
        "iso885911",
        "koi8ru",
        "koi8t",
        "gb2312",
        "cp865",
        "cp850"
      ],
      "default": "utf8",
      "description": "The default character set encoding to use when reading and writing files. This setting can also be configured per language.",
      "scope": 5,
      "enumDescriptions": [
        "UTF-8",
        "UTF-8 with BOM",
        "UTF-16 LE",
        "UTF-16 BE",
        "Western (Windows 1252)",
        "Western (ISO 8859-1)",
        "Western (ISO 8859-3)",
        "Western (ISO 8859-15)",
        "Western (Mac Roman)",
        "DOS (CP 437)",
        "Arabic (Windows 1256)",
        "Arabic (ISO 8859-6)",
        "Baltic (Windows 1257)",
        "Baltic (ISO 8859-4)",
        "Celtic (ISO 8859-14)",
        "Central European (Windows 1250)",
        "Central European (ISO 8859-2)",
        "Central European (CP 852)",
        "Cyrillic (Windows 1251)",
        "Cyrillic (CP 866)",
        "Cyrillic (ISO 8859-5)",
        "Cyrillic (KOI8-R)",
        "Cyrillic (KOI8-U)",
        "Estonian (ISO 8859-13)",
        "Greek (Windows 1253)",
        "Greek (ISO 8859-7)",
        "Hebrew (Windows 1255)",
        "Hebrew (ISO 8859-8)",
        "Nordic (ISO 8859-10)",
        "Romanian (ISO 8859-16)",
        "Turkish (Windows 1254)",
        "Turkish (ISO 8859-9)",
        "Vietnamese (Windows 1258)",
        "Simplified Chinese (GBK)",
        "Simplified Chinese (GB18030)",
        "Traditional Chinese (Big5)",
        "Traditional Chinese (Big5-HKSCS)",
        "Japanese (Shift JIS)",
        "Japanese (EUC-JP)",
        "Korean (EUC-KR)",
        "Thai (Windows 874)",
        "Latin/Thai (ISO 8859-11)",
        "Cyrillic (KOI8-RU)",
        "Tajik (KOI8-T)",
        "Simplified Chinese (GB 2312)",
        "Nordic DOS (CP 865)",
        "Western European DOS (CP 850)"
      ],
      "enumItemLabels": [
        "UTF-8",
        "UTF-8 with BOM",
        "UTF-16 LE",
        "UTF-16 BE",
        "Western (Windows 1252)",
        "Western (ISO 8859-1)",
        "Western (ISO 8859-3)",
        "Western (ISO 8859-15)",
        "Western (Mac Roman)",
        "DOS (CP 437)",
        "Arabic (Windows 1256)",
        "Arabic (ISO 8859-6)",
        "Baltic (Windows 1257)",
        "Baltic (ISO 8859-4)",
        "Celtic (ISO 8859-14)",
        "Central European (Windows 1250)",
        "Central European (ISO 8859-2)",
        "Central European (CP 852)",
        "Cyrillic (Windows 1251)",
        "Cyrillic (CP 866)",
        "Cyrillic (ISO 8859-5)",
        "Cyrillic (KOI8-R)",
        "Cyrillic (KOI8-U)",
        "Estonian (ISO 8859-13)",
        "Greek (Windows 1253)",
        "Greek (ISO 8859-7)",
        "Hebrew (Windows 1255)",
        "Hebrew (ISO 8859-8)",
        "Nordic (ISO 8859-10)",
        "Romanian (ISO 8859-16)",
        "Turkish (Windows 1254)",
        "Turkish (ISO 8859-9)",
        "Vietnamese (Windows 1258)",
        "Simplified Chinese (GBK)",
        "Simplified Chinese (GB18030)",
        "Traditional Chinese (Big5)",
        "Traditional Chinese (Big5-HKSCS)",
        "Japanese (Shift JIS)",
        "Japanese (EUC-JP)",
        "Korean (EUC-KR)",
        "Thai (Windows 874)",
        "Latin/Thai (ISO 8859-11)",
        "Cyrillic (KOI8-RU)",
        "Tajik (KOI8-T)",
        "Simplified Chinese (GB 2312)",
        "Nordic DOS (CP 865)",
        "Western European DOS (CP 850)"
      ],
      "defaultDefaultValue": "utf8",
      "restricted": false
    },
    "files.autoGuessEncoding": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "When enabled, the editor will attempt to guess the character set encoding when opening files. This setting can also be configured per language. Note, this setting is not respected by text search. Only `#files.encoding#` is respected.",
      "scope": 5,
      "defaultDefaultValue": false,
      "restricted": false
    },
    "files.eol": {
      "type": "string",
      "enum": [
        "\n",
        "\r\n",
        "auto"
      ],
      "enumDescriptions": [
        "LF",
        "CRLF",
        "Uses operating system specific end of line character."
      ],
      "default": "auto",
      "description": "The default end of line character.",
      "scope": 5,
      "defaultDefaultValue": "auto",
      "restricted": false
    },
    "files.trimTrailingWhitespace": {
      "type": "boolean",
      "default": false,
      "description": "When enabled, will trim trailing whitespace when saving a file.",
      "scope": 5,
      "defaultDefaultValue": false,
      "restricted": false
    },
    "files.insertFinalNewline": {
      "type": "boolean",
      "default": false,
      "description": "When enabled, insert a final new line at the end of the file when saving it.",
      "scope": 5,
      "defaultDefaultValue": false,
      "restricted": false
    },
    "files.trimFinalNewlines": {
      "type": "boolean",
      "default": false,
      "description": "When enabled, will trim all new lines after the final new line at the end of the file when saving it.",
      "scope": 5,
      "defaultDefaultValue": false,
      "restricted": false
    },
    "files.watcherExclude": {
      "type": "object",
      "default": {
        "**/.git/objects/**": true,
        "**/.git/subtree-cache/**": true,
        "**/node_modules/*/**": true,
        "**/.hg/store/**": true
      },
      "markdownDescription": "Configure paths or glob patterns to exclude from file watching. Paths can either be relative to the watched folder or absolute. Glob patterns are matched relative from the watched folder. When you experience the file watcher process consuming a lot of CPU, make sure to exclude large folders that are of less interest (such as build output folders).",
      "scope": 4,
      "defaultDefaultValue": {
        "**/.git/objects/**": true,
        "**/.git/subtree-cache/**": true,
        "**/node_modules/*/**": true,
        "**/.hg/store/**": true
      },
      "restricted": false
    },
    "files.watcherInclude": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "default": [],
      "description": "Configure extra paths to watch for changes inside the workspace. By default, all workspace folders will be watched recursively, except for folders that are symbolic links. You can explicitly add absolute or relative paths to support watching folders that are symbolic links. Relative paths will be resolved to an absolute path using the currently opened workspace.",
      "scope": 4,
      "defaultDefaultValue": [],
      "restricted": false
    },
    "files.saveConflictResolution": {
      "type": "string",
      "enum": [
        "askUser",
        "overwriteFileOnDisk"
      ],
      "enumDescriptions": [
        "Will refuse to save and ask for resolving the save conflict manually.",
        "Will resolve the save conflict by overwriting the file on disk with the changes in the editor."
      ],
      "description": "A save conflict can occur when a file is saved to disk that was changed by another program in the meantime. To prevent data loss, the user is asked to compare the changes in the editor with the version on disk. This setting should only be changed if you frequently encounter save conflict errors and may result in data loss if used without caution.",
      "default": "askUser",
      "scope": 5,
      "defaultDefaultValue": "askUser",
      "restricted": false
    },
    "editor.formatOnSave": {
      "type": "boolean",
      "description": "Format a file on save. A formatter must be available, the file must not be saved after delay, and the editor must not be shutting down.",
      "scope": 5,
      "default": false,
      "restricted": false
    },
    "editor.formatOnSaveMode": {
      "type": "string",
      "default": "file",
      "enum": [
        "file",
        "modifications",
        "modificationsIfAvailable"
      ],
      "enumDescriptions": [
        "Format the whole file.",
        "Format modifications (requires source control).",
        "Will attempt to format modifications only (requires source control). If source control can't be used, then the whole file will be formatted."
      ],
      "markdownDescription": "Controls if format on save formats the whole file or only modifications. Only applies when `#editor.formatOnSave#` is enabled.",
      "scope": 5,
      "defaultDefaultValue": "file",
      "restricted": false
    },
    "explorer.excludeGitIgnore": {
      "type": "boolean",
      "markdownDescription": "Controls whether entries in .gitignore should be parsed and excluded from the Explorer. Similar to `#files.exclude#`.",
      "default": false,
      "scope": 4,
      "defaultDefaultValue": false,
      "restricted": false
    },
    "explorer.fileNesting.enabled": {
      "type": "boolean",
      "scope": 4,
      "markdownDescription": "Controls whether file nesting is enabled in the Explorer. File nesting allows for related files in a directory to be visually grouped together under a single parent file.",
      "default": false,
      "defaultDefaultValue": false,
      "restricted": false
    },
    "explorer.fileNesting.patterns": {
      "type": "object",
      "scope": 4,
      "markdownDescription": "Controls nesting of files in the Explorer. `#explorer.fileNesting.enabled#` must be set for this to take effect. Each __Item__ represents a parent pattern and may contain a single `*` character that matches any string. Each __Value__ represents a comma separated list of the child patterns that should be shown nested under a given parent. Child patterns may contain several special tokens:\n- `${capture}`: Matches the resolved value of the `*` from the parent pattern\n- `${basename}`: Matches the parent file's basename, the `file` in `file.ts`\n- `${extname}`: Matches the parent file's extension, the `ts` in `file.ts`\n- `${dirname}`: Matches the parent file's directory name, the `src` in `src/file.ts`\n- `*`:  Matches any string, may only be used once per child pattern",
      "patternProperties": {
        "^[^*]*\\*?[^*]*$": {
          "markdownDescription": "Each key pattern may contain a single `*` character which will match any string.",
          "type": "string",
          "pattern": "^([^,*]*\\*?[^,*]*)(, ?[^,*]*\\*?[^,*]*)*$"
        }
      },
      "additionalProperties": false,
      "default": {
        "*.ts": "${capture}.js",
        "*.js": "${capture}.js.map, ${capture}.min.js, ${capture}.d.ts",
        "*.jsx": "${capture}.js",
        "*.tsx": "${capture}.ts",
        "tsconfig.json": "tsconfig.*.json",
        "package.json": "package-lock.json, yarn.lock, pnpm-lock.yaml"
      },
      "defaultDefaultValue": {
        "*.ts": "${capture}.js",
        "*.js": "${capture}.js.map, ${capture}.min.js, ${capture}.d.ts",
        "*.jsx": "${capture}.js",
        "*.tsx": "${capture}.ts",
        "tsconfig.json": "tsconfig.*.json",
        "package.json": "package-lock.json, yarn.lock, pnpm-lock.yaml"
      },
      "restricted": false
    },
    "outline.collapseItems": {
      "description": "Controls whether Outline items are collapsed or expanded.",
      "type": "string",
      "scope": 5,
      "enum": [
        "alwaysCollapse",
        "alwaysExpand"
      ],
      "enumDescriptions": [
        "Collapse all items.",
        "Expand all items."
      ],
      "default": "alwaysExpand",
      "defaultDefaultValue": "alwaysExpand",
      "restricted": false
    },
    "outline.showFiles": {
      "type": "boolean",
      "scope": 5,
      "default": true,
      "markdownDescription": "When enabled, Outline shows `file`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "outline.showModules": {
      "type": "boolean",
      "scope": 5,
      "default": true,
      "markdownDescription": "When enabled, Outline shows `module`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "outline.showNamespaces": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled, Outline shows `namespace`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "outline.showPackages": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled, Outline shows `package`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "outline.showClasses": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled, Outline shows `class`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "outline.showMethods": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled, Outline shows `method`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "outline.showProperties": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled, Outline shows `property`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "outline.showFields": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled, Outline shows `field`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "outline.showConstructors": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled, Outline shows `constructor`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "outline.showEnums": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled, Outline shows `enum`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "outline.showInterfaces": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled, Outline shows `interface`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "outline.showFunctions": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled, Outline shows `function`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "outline.showVariables": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled, Outline shows `variable`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "outline.showConstants": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled, Outline shows `constant`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "outline.showStrings": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled, Outline shows `string`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "outline.showNumbers": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled, Outline shows `number`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "outline.showBooleans": {
      "type": "boolean",
      "scope": 5,
      "default": true,
      "markdownDescription": "When enabled, Outline shows `boolean`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "outline.showArrays": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled, Outline shows `array`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "outline.showObjects": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled, Outline shows `object`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "outline.showKeys": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled, Outline shows `key`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "outline.showNull": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled, Outline shows `null`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "outline.showEnumMembers": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled, Outline shows `enumMember`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "outline.showStructs": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled, Outline shows `struct`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "outline.showEvents": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled, Outline shows `event`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "outline.showOperators": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled, Outline shows `operator`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "outline.showTypeParameters": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled, Outline shows `typeParameter`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "scm.diffDecorations": {
      "type": "string",
      "enum": [
        "all",
        "gutter",
        "overview",
        "minimap",
        "none"
      ],
      "enumDescriptions": [
        "Show the diff decorations in all available locations.",
        "Show the diff decorations only in the editor gutter.",
        "Show the diff decorations only in the overview ruler.",
        "Show the diff decorations only in the minimap.",
        "Do not show the diff decorations."
      ],
      "default": "all",
      "description": "Controls diff decorations in the editor.",
      "defaultDefaultValue": "all",
      "scope": 4,
      "restricted": false
    },
    "scm.diffDecorationsGutterWidth": {
      "type": "number",
      "enum": [
        1,
        2,
        3,
        4,
        5
      ],
      "default": 3,
      "description": "Controls the width(px) of diff decorations in gutter (added & modified).",
      "defaultDefaultValue": 3,
      "scope": 4,
      "restricted": false
    },
    "scm.diffDecorationsGutterVisibility": {
      "type": "string",
      "enum": [
        "always",
        "hover"
      ],
      "enumDescriptions": [
        "Show the diff decorator in the gutter at all times.",
        "Show the diff decorator in the gutter only on hover."
      ],
      "description": "Controls the visibility of the Source Control diff decorator in the gutter.",
      "default": "always",
      "defaultDefaultValue": "always",
      "scope": 4,
      "restricted": false
    },
    "scm.diffDecorationsGutterAction": {
      "type": "string",
      "enum": [
        "diff",
        "none"
      ],
      "enumDescriptions": [
        "Show the inline diff Peek view on click.",
        "Do nothing."
      ],
      "description": "Controls the behavior of Source Control diff gutter decorations.",
      "default": "diff",
      "defaultDefaultValue": "diff",
      "scope": 4,
      "restricted": false
    },
    "scm.diffDecorationsGutterPattern": {
      "type": "object",
      "description": "Controls whether a pattern is used for the diff decorations in gutter.",
      "additionalProperties": false,
      "properties": {
        "added": {
          "type": "boolean",
          "description": "Use pattern for the diff decorations in gutter for added lines."
        },
        "modified": {
          "type": "boolean",
          "description": "Use pattern for the diff decorations in gutter for modified lines."
        }
      },
      "default": {
        "added": false,
        "modified": true
      },
      "defaultDefaultValue": {
        "added": false,
        "modified": true
      },
      "scope": 4,
      "restricted": false
    },
    "scm.diffDecorationsIgnoreTrimWhitespace": {
      "type": "string",
      "enum": [
        "true",
        "false",
        "inherit"
      ],
      "enumDescriptions": [
        "Ignore leading and trailing whitespace.",
        "Do not ignore leading and trailing whitespace.",
        "Inherit from `diffEditor.ignoreTrimWhitespace`."
      ],
      "description": "Controls whether leading and trailing whitespace is ignored in Source Control diff gutter decorations.",
      "default": "false",
      "defaultDefaultValue": "false",
      "scope": 4,
      "restricted": false
    },
    "scm.alwaysShowActions": {
      "type": "boolean",
      "description": "Controls whether inline actions are always visible in the Source Control view.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 4,
      "restricted": false
    },
    "scm.countBadge": {
      "type": "string",
      "enum": [
        "all",
        "focused",
        "off"
      ],
      "enumDescriptions": [
        "Show the sum of all Source Control Provider count badges.",
        "Show the count badge of the focused Source Control Provider.",
        "Disable the Source Control count badge."
      ],
      "description": "Controls the count badge on the Source Control icon on the Activity Bar.",
      "default": "all",
      "defaultDefaultValue": "all",
      "scope": 4,
      "restricted": false
    },
    "scm.providerCountBadge": {
      "type": "string",
      "enum": [
        "hidden",
        "auto",
        "visible"
      ],
      "enumDescriptions": [
        "Hide Source Control Provider count badges.",
        "Only show count badge for Source Control Provider when non-zero.",
        "Show Source Control Provider count badges."
      ],
      "description": "Controls the count badges on Source Control Provider headers. These headers only appear when there is more than one provider.",
      "default": "hidden",
      "defaultDefaultValue": "hidden",
      "scope": 4,
      "restricted": false
    },
    "scm.defaultViewMode": {
      "type": "string",
      "enum": [
        "tree",
        "list"
      ],
      "enumDescriptions": [
        "Show the repository changes as a tree.",
        "Show the repository changes as a list."
      ],
      "description": "Controls the default Source Control repository view mode.",
      "default": "list",
      "defaultDefaultValue": "list",
      "scope": 4,
      "restricted": false
    },
    "scm.defaultViewSortKey": {
      "type": "string",
      "enum": [
        "name",
        "path",
        "status"
      ],
      "enumDescriptions": [
        "Sort the repository changes by file name.",
        "Sort the repository changes by path.",
        "Sort the repository changes by Source Control status."
      ],
      "description": "Controls the default Source Control repository changes sort order when viewed as a list.",
      "default": "path",
      "defaultDefaultValue": "path",
      "scope": 4,
      "restricted": false
    },
    "scm.autoReveal": {
      "type": "boolean",
      "description": "Controls whether the Source Control view should automatically reveal and select files when opening them.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 4,
      "restricted": false
    },
    "scm.inputFontFamily": {
      "type": "string",
      "markdownDescription": "Controls the font for the input message. Use `default` for the workbench user interface font family, `editor` for the `#editor.fontFamily#`'s value, or a custom font family.",
      "default": "default",
      "defaultDefaultValue": "default",
      "scope": 4,
      "restricted": false
    },
    "scm.inputFontSize": {
      "type": "number",
      "markdownDescription": "Controls the font size for the input message in pixels.",
      "default": 13,
      "defaultDefaultValue": 13,
      "scope": 4,
      "restricted": false
    },
    "scm.alwaysShowRepositories": {
      "type": "boolean",
      "markdownDescription": "Controls whether repositories should always be visible in the Source Control view.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 4,
      "restricted": false
    },
    "scm.repositories.sortOrder": {
      "type": "string",
      "enum": [
        "discovery time",
        "name",
        "path"
      ],
      "enumDescriptions": [
        "Repositories in the Source Control Repositories view are sorted by discovery time. Repositories in the Source Control view are sorted in the order that they were selected.",
        "Repositories in the Source Control Repositories and Source Control views are sorted by repository name.",
        "Repositories in the Source Control Repositories and Source Control views are sorted by repository path."
      ],
      "description": "Controls the sort order of the repositories in the source control repositories view.",
      "default": "discovery time",
      "defaultDefaultValue": "discovery time",
      "scope": 4,
      "restricted": false
    },
    "scm.repositories.visible": {
      "type": "number",
      "description": "Controls how many repositories are visible in the Source Control Repositories section. Set to 0, to be able to manually resize the view.",
      "default": 10,
      "defaultDefaultValue": 10,
      "scope": 4,
      "restricted": false
    },
    "scm.showActionButton": {
      "type": "boolean",
      "markdownDescription": "Controls whether an action button can be shown in the Source Control view.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 4,
      "restricted": false
    },
    "search.exclude": {
      "type": "object",
      "markdownDescription": "Configure [glob patterns](https://code.visualstudio.com/docs/editor/codebasics#_advanced-search-options) for excluding files and folders in fulltext searches and quick open. Inherits all glob patterns from the `#files.exclude#` setting.",
      "default": {
        "**/node_modules": true,
        "**/bower_components": true,
        "**/*.code-search": true
      },
      "additionalProperties": {
        "anyOf": [
          {
            "type": "boolean",
            "description": "The glob pattern to match file paths against. Set to true or false to enable or disable the pattern."
          },
          {
            "type": "object",
            "properties": {
              "when": {
                "type": "string",
                "pattern": "\\w*\\$\\(basename\\)\\w*",
                "default": "$(basename).ext",
                "markdownDescription": "Additional check on the siblings of a matching file. Use \\$(basename) as variable for the matching file name."
              }
            }
          }
        ]
      },
      "scope": 4,
      "defaultDefaultValue": {
        "**/node_modules": true,
        "**/bower_components": true,
        "**/*.code-search": true
      },
      "restricted": false
    },
    "search.useIgnoreFiles": {
      "type": "boolean",
      "markdownDescription": "Controls whether to use `.gitignore` and `.ignore` files when searching for files.",
      "default": true,
      "scope": 4,
      "defaultDefaultValue": true,
      "restricted": false
    },
    "search.useGlobalIgnoreFiles": {
      "type": "boolean",
      "markdownDescription": "Controls whether to use your global gitignore file (e.g., from `$HOME/.config/git/ignore`) when searching for files. Requires `#search.useIgnoreFiles#` to be enabled.",
      "default": false,
      "scope": 4,
      "defaultDefaultValue": false,
      "restricted": false
    },
    "search.useParentIgnoreFiles": {
      "type": "boolean",
      "markdownDescription": "Controls whether to use `.gitignore` and `.ignore` files in parent directories when searching for files. Requires `#search.useIgnoreFiles#` to be enabled.",
      "default": false,
      "scope": 4,
      "defaultDefaultValue": false,
      "restricted": false
    },
    "workbench.startupEditor": {
      "scope": 4,
      "type": "string",
      "enum": [
        "none",
        "welcomePage",
        "readme",
        "newUntitledFile",
        "welcomePageInEmptyWorkbench"
      ],
      "enumDescriptions": [
        "Start without an editor.",
        "Open the Welcome page, with content to aid in getting started with VS Code and extensions.",
        "Open the README when opening a folder that contains one, fallback to 'welcomePage' otherwise. Note: This is only observed as a global configuration, it will be ignored if set in a workspace or folder configuration.",
        "Open a new untitled text file (only applies when opening an empty window).",
        "Open the Welcome page when opening an empty workbench."
      ],
      "default": "welcomePage",
      "description": "Controls which editor is shown at startup, if none are restored from the previous session.",
      "defaultDefaultValue": "welcomePage",
      "restricted": false
    },
    "terminal.integrated.tabs.defaultColor": {
      "description": "A theme color ID to associate with terminal icons by default.",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "terminal.ansiBlack",
        "terminal.ansiRed",
        "terminal.ansiGreen",
        "terminal.ansiYellow",
        "terminal.ansiBlue",
        "terminal.ansiMagenta",
        "terminal.ansiCyan",
        "terminal.ansiWhite"
      ],
      "default": null,
      "scope": 4,
      "defaultDefaultValue": null,
      "restricted": false
    },
    "terminal.integrated.tabs.defaultIcon": {
      "description": "A codicon ID to associate with terminal icons by default.",
      "type": "string",
      "enum": [
        "add",
        "plus",
        "gist-new",
        "repo-create",
        "lightbulb",
        "light-bulb",
        "repo",
        "repo-delete",
        "gist-fork",
        "repo-forked",
        "git-pull-request",
        "git-pull-request-abandoned",
        "record-keys",
        "keyboard",
        "tag",
        "tag-add",
        "tag-remove",
        "person",
        "person-follow",
        "person-outline",
        "person-filled",
        "git-branch",
        "git-branch-create",
        "git-branch-delete",
        "source-control",
        "mirror",
        "mirror-public",
        "star",
        "star-add",
        "star-delete",
        "star-empty",
        "comment",
        "comment-add",
        "alert",
        "warning",
        "search",
        "search-save",
        "log-out",
        "sign-out",
        "log-in",
        "sign-in",
        "eye",
        "eye-unwatch",
        "eye-watch",
        "circle-filled",
        "primitive-dot",
        "close-dirty",
        "debug-breakpoint",
        "debug-breakpoint-disabled",
        "debug-hint",
        "primitive-square",
        "edit",
        "pencil",
        "info",
        "issue-opened",
        "gist-private",
        "git-fork-private",
        "lock",
        "mirror-private",
        "close",
        "remove-close",
        "x",
        "repo-sync",
        "sync",
        "clone",
        "desktop-download",
        "beaker",
        "microscope",
        "vm",
        "device-desktop",
        "file",
        "file-text",
        "more",
        "ellipsis",
        "kebab-horizontal",
        "mail-reply",
        "reply",
        "organization",
        "organization-filled",
        "organization-outline",
        "new-file",
        "file-add",
        "new-folder",
        "file-directory-create",
        "trash",
        "trashcan",
        "history",
        "clock",
        "folder",
        "file-directory",
        "symbol-folder",
        "logo-github",
        "mark-github",
        "github",
        "terminal",
        "console",
        "repl",
        "zap",
        "symbol-event",
        "error",
        "stop",
        "variable",
        "symbol-variable",
        "array",
        "symbol-array",
        "symbol-module",
        "symbol-package",
        "symbol-namespace",
        "symbol-object",
        "symbol-method",
        "symbol-function",
        "symbol-constructor",
        "symbol-boolean",
        "symbol-null",
        "symbol-numeric",
        "symbol-number",
        "symbol-structure",
        "symbol-struct",
        "symbol-parameter",
        "symbol-type-parameter",
        "symbol-key",
        "symbol-text",
        "symbol-reference",
        "go-to-file",
        "symbol-enum",
        "symbol-value",
        "symbol-ruler",
        "symbol-unit",
        "activate-breakpoints",
        "archive",
        "arrow-both",
        "arrow-down",
        "arrow-left",
        "arrow-right",
        "arrow-small-down",
        "arrow-small-left",
        "arrow-small-right",
        "arrow-small-up",
        "arrow-up",
        "bell",
        "bold",
        "book",
        "bookmark",
        "debug-breakpoint-conditional-unverified",
        "debug-breakpoint-conditional",
        "debug-breakpoint-conditional-disabled",
        "debug-breakpoint-data-unverified",
        "debug-breakpoint-data",
        "debug-breakpoint-data-disabled",
        "debug-breakpoint-log-unverified",
        "debug-breakpoint-log",
        "debug-breakpoint-log-disabled",
        "briefcase",
        "broadcast",
        "browser",
        "bug",
        "calendar",
        "case-sensitive",
        "check",
        "checklist",
        "chevron-down",
        "drop-down-button",
        "chevron-left",
        "chevron-right",
        "chevron-up",
        "chrome-close",
        "chrome-maximize",
        "chrome-minimize",
        "chrome-restore",
        "circle",
        "circle-outline",
        "debug-breakpoint-unverified",
        "circle-slash",
        "circuit-board",
        "clear-all",
        "clippy",
        "close-all",
        "cloud-download",
        "cloud-upload",
        "code",
        "collapse-all",
        "color-mode",
        "comment-discussion",
        "compare-changes",
        "credit-card",
        "dash",
        "dashboard",
        "database",
        "debug-continue",
        "debug-disconnect",
        "debug-pause",
        "debug-restart",
        "debug-start",
        "debug-step-into",
        "debug-step-out",
        "debug-step-over",
        "debug-stop",
        "debug",
        "device-camera-video",
        "device-camera",
        "device-mobile",
        "diff-added",
        "diff-ignored",
        "diff-modified",
        "diff-removed",
        "diff-renamed",
        "diff",
        "discard",
        "editor-layout",
        "empty-window",
        "exclude",
        "extensions",
        "eye-closed",
        "file-binary",
        "file-code",
        "file-media",
        "file-pdf",
        "file-submodule",
        "file-symlink-directory",
        "file-symlink-file",
        "file-zip",
        "files",
        "filter",
        "flame",
        "fold-down",
        "fold-up",
        "fold",
        "folder-active",
        "folder-opened",
        "gear",
        "gift",
        "gist-secret",
        "gist",
        "git-commit",
        "git-compare",
        "git-merge",
        "github-action",
        "github-alt",
        "globe",
        "grabber",
        "graph",
        "gripper",
        "heart",
        "home",
        "horizontal-rule",
        "hubot",
        "inbox",
        "issue-closed",
        "issue-reopened",
        "issues",
        "italic",
        "jersey",
        "json",
        "bracket",
        "kebab-vertical",
        "key",
        "law",
        "lightbulb-autofix",
        "link-external",
        "link",
        "list-ordered",
        "list-unordered",
        "live-share",
        "loading",
        "location",
        "mail-read",
        "mail",
        "markdown",
        "megaphone",
        "mention",
        "milestone",
        "mortar-board",
        "move",
        "multiple-windows",
        "mute",
        "no-newline",
        "note",
        "octoface",
        "open-preview",
        "package",
        "paintcan",
        "pin",
        "play",
        "run",
        "plug",
        "preserve-case",
        "preview",
        "project",
        "pulse",
        "question",
        "quote",
        "radio-tower",
        "reactions",
        "references",
        "refresh",
        "regex",
        "remote-explorer",
        "remote",
        "remove",
        "replace-all",
        "replace",
        "repo-clone",
        "repo-force-push",
        "repo-pull",
        "repo-push",
        "report",
        "request-changes",
        "rocket",
        "root-folder-opened",
        "root-folder",
        "rss",
        "ruby",
        "save-all",
        "save-as",
        "save",
        "screen-full",
        "screen-normal",
        "search-stop",
        "server",
        "settings-gear",
        "settings",
        "shield",
        "smiley",
        "sort-precedence",
        "split-horizontal",
        "split-vertical",
        "squirrel",
        "star-full",
        "star-half",
        "symbol-class",
        "symbol-color",
        "symbol-customcolor",
        "symbol-constant",
        "symbol-enum-member",
        "symbol-field",
        "symbol-file",
        "symbol-interface",
        "symbol-keyword",
        "symbol-misc",
        "symbol-operator",
        "symbol-property",
        "wrench",
        "wrench-subaction",
        "symbol-snippet",
        "tasklist",
        "telescope",
        "text-size",
        "three-bars",
        "thumbsdown",
        "thumbsup",
        "tools",
        "triangle-down",
        "triangle-left",
        "triangle-right",
        "triangle-up",
        "twitter",
        "unfold",
        "unlock",
        "unmute",
        "unverified",
        "verified",
        "versions",
        "vm-active",
        "vm-outline",
        "vm-running",
        "watch",
        "whitespace",
        "whole-word",
        "window",
        "word-wrap",
        "zoom-in",
        "zoom-out",
        "list-filter",
        "list-flat",
        "list-selection",
        "selection",
        "list-tree",
        "debug-breakpoint-function-unverified",
        "debug-breakpoint-function",
        "debug-breakpoint-function-disabled",
        "debug-stackframe-active",
        "circle-small-filled",
        "debug-stackframe-dot",
        "debug-stackframe",
        "debug-stackframe-focused",
        "debug-breakpoint-unsupported",
        "symbol-string",
        "debug-reverse-continue",
        "debug-step-back",
        "debug-restart-frame",
        "call-incoming",
        "call-outgoing",
        "menu",
        "expand-all",
        "feedback",
        "group-by-ref-type",
        "ungroup-by-ref-type",
        "account",
        "bell-dot",
        "debug-console",
        "library",
        "output",
        "run-all",
        "sync-ignored",
        "pinned",
        "github-inverted",
        "debug-alt",
        "server-process",
        "server-environment",
        "pass",
        "stop-circle",
        "play-circle",
        "record",
        "debug-alt-small",
        "vm-connect",
        "cloud",
        "merge",
        "export",
        "graph-left",
        "magnet",
        "notebook",
        "redo",
        "check-all",
        "pinned-dirty",
        "pass-filled",
        "circle-large-filled",
        "circle-large",
        "circle-large-outline",
        "combine",
        "gather",
        "table",
        "variable-group",
        "type-hierarchy",
        "type-hierarchy-sub",
        "type-hierarchy-super",
        "git-pull-request-create",
        "run-above",
        "run-below",
        "notebook-template",
        "debug-rerun",
        "workspace-trusted",
        "workspace-untrusted",
        "workspace-unspecified",
        "terminal-cmd",
        "terminal-debian",
        "terminal-linux",
        "terminal-powershell",
        "terminal-tmux",
        "terminal-ubuntu",
        "terminal-bash",
        "arrow-swap",
        "copy",
        "person-add",
        "filter-filled",
        "wand",
        "debug-line-by-line",
        "inspect",
        "layers",
        "layers-dot",
        "layers-active",
        "compass",
        "compass-dot",
        "compass-active",
        "azure",
        "issue-draft",
        "git-pull-request-closed",
        "git-pull-request-draft",
        "debug-all",
        "debug-coverage",
        "run-errors",
        "folder-library",
        "debug-continue-small",
        "beaker-stop",
        "graph-line",
        "graph-scatter",
        "pie-chart",
        "bracket-dot",
        "bracket-error",
        "lock-small",
        "azure-devops",
        "verified-filled",
        "newline",
        "layout",
        "layout-activitybar-left",
        "layout-activitybar-right",
        "layout-panel-left",
        "layout-panel-center",
        "layout-panel-justify",
        "layout-panel-right",
        "layout-panel",
        "layout-sidebar-left",
        "layout-sidebar-right",
        "layout-statusbar",
        "layout-menubar",
        "layout-centered",
        "layout-sidebar-right-off",
        "layout-panel-off",
        "layout-sidebar-left-off",
        "target",
        "indent",
        "record-small",
        "error-small",
        "arrow-circle-down",
        "arrow-circle-left",
        "arrow-circle-right",
        "arrow-circle-up",
        "heart-filled",
        "map",
        "map-filled",
        "circle-small",
        "bell-slash",
        "bell-slash-dot",
        "comment-unresolved",
        "git-pull-request-go-to-changes",
        "git-pull-request-new-changes",
        "search-fuzzy",
        "comment-draft",
        "dialog-error",
        "dialog-warning",
        "dialog-info",
        "dialog-close",
        "tree-item-expanded",
        "tree-filter-on-type-on",
        "tree-filter-on-type-off",
        "tree-filter-clear",
        "tree-item-loading",
        "menu-selection",
        "menu-submenu",
        "menubar-more",
        "scrollbar-button-left",
        "scrollbar-button-right",
        "scrollbar-button-up",
        "scrollbar-button-down",
        "toolbar-more",
        "quick-input-back"
      ],
      "markdownEnumDescriptions": [
        "$(add)",
        "$(plus)",
        "$(gist-new)",
        "$(repo-create)",
        "$(lightbulb)",
        "$(light-bulb)",
        "$(repo)",
        "$(repo-delete)",
        "$(gist-fork)",
        "$(repo-forked)",
        "$(git-pull-request)",
        "$(git-pull-request-abandoned)",
        "$(record-keys)",
        "$(keyboard)",
        "$(tag)",
        "$(tag-add)",
        "$(tag-remove)",
        "$(person)",
        "$(person-follow)",
        "$(person-outline)",
        "$(person-filled)",
        "$(git-branch)",
        "$(git-branch-create)",
        "$(git-branch-delete)",
        "$(source-control)",
        "$(mirror)",
        "$(mirror-public)",
        "$(star)",
        "$(star-add)",
        "$(star-delete)",
        "$(star-empty)",
        "$(comment)",
        "$(comment-add)",
        "$(alert)",
        "$(warning)",
        "$(search)",
        "$(search-save)",
        "$(log-out)",
        "$(sign-out)",
        "$(log-in)",
        "$(sign-in)",
        "$(eye)",
        "$(eye-unwatch)",
        "$(eye-watch)",
        "$(circle-filled)",
        "$(primitive-dot)",
        "$(close-dirty)",
        "$(debug-breakpoint)",
        "$(debug-breakpoint-disabled)",
        "$(debug-hint)",
        "$(primitive-square)",
        "$(edit)",
        "$(pencil)",
        "$(info)",
        "$(issue-opened)",
        "$(gist-private)",
        "$(git-fork-private)",
        "$(lock)",
        "$(mirror-private)",
        "$(close)",
        "$(remove-close)",
        "$(x)",
        "$(repo-sync)",
        "$(sync)",
        "$(clone)",
        "$(desktop-download)",
        "$(beaker)",
        "$(microscope)",
        "$(vm)",
        "$(device-desktop)",
        "$(file)",
        "$(file-text)",
        "$(more)",
        "$(ellipsis)",
        "$(kebab-horizontal)",
        "$(mail-reply)",
        "$(reply)",
        "$(organization)",
        "$(organization-filled)",
        "$(organization-outline)",
        "$(new-file)",
        "$(file-add)",
        "$(new-folder)",
        "$(file-directory-create)",
        "$(trash)",
        "$(trashcan)",
        "$(history)",
        "$(clock)",
        "$(folder)",
        "$(file-directory)",
        "$(symbol-folder)",
        "$(logo-github)",
        "$(mark-github)",
        "$(github)",
        "$(terminal)",
        "$(console)",
        "$(repl)",
        "$(zap)",
        "$(symbol-event)",
        "$(error)",
        "$(stop)",
        "$(variable)",
        "$(symbol-variable)",
        "$(array)",
        "$(symbol-array)",
        "$(symbol-module)",
        "$(symbol-package)",
        "$(symbol-namespace)",
        "$(symbol-object)",
        "$(symbol-method)",
        "$(symbol-function)",
        "$(symbol-constructor)",
        "$(symbol-boolean)",
        "$(symbol-null)",
        "$(symbol-numeric)",
        "$(symbol-number)",
        "$(symbol-structure)",
        "$(symbol-struct)",
        "$(symbol-parameter)",
        "$(symbol-type-parameter)",
        "$(symbol-key)",
        "$(symbol-text)",
        "$(symbol-reference)",
        "$(go-to-file)",
        "$(symbol-enum)",
        "$(symbol-value)",
        "$(symbol-ruler)",
        "$(symbol-unit)",
        "$(activate-breakpoints)",
        "$(archive)",
        "$(arrow-both)",
        "$(arrow-down)",
        "$(arrow-left)",
        "$(arrow-right)",
        "$(arrow-small-down)",
        "$(arrow-small-left)",
        "$(arrow-small-right)",
        "$(arrow-small-up)",
        "$(arrow-up)",
        "$(bell)",
        "$(bold)",
        "$(book)",
        "$(bookmark)",
        "$(debug-breakpoint-conditional-unverified)",
        "$(debug-breakpoint-conditional)",
        "$(debug-breakpoint-conditional-disabled)",
        "$(debug-breakpoint-data-unverified)",
        "$(debug-breakpoint-data)",
        "$(debug-breakpoint-data-disabled)",
        "$(debug-breakpoint-log-unverified)",
        "$(debug-breakpoint-log)",
        "$(debug-breakpoint-log-disabled)",
        "$(briefcase)",
        "$(broadcast)",
        "$(browser)",
        "$(bug)",
        "$(calendar)",
        "$(case-sensitive)",
        "$(check)",
        "$(checklist)",
        "$(chevron-down)",
        "$(drop-down-button)",
        "$(chevron-left)",
        "$(chevron-right)",
        "$(chevron-up)",
        "$(chrome-close)",
        "$(chrome-maximize)",
        "$(chrome-minimize)",
        "$(chrome-restore)",
        "$(circle)",
        "$(circle-outline)",
        "$(debug-breakpoint-unverified)",
        "$(circle-slash)",
        "$(circuit-board)",
        "$(clear-all)",
        "$(clippy)",
        "$(close-all)",
        "$(cloud-download)",
        "$(cloud-upload)",
        "$(code)",
        "$(collapse-all)",
        "$(color-mode)",
        "$(comment-discussion)",
        "$(compare-changes)",
        "$(credit-card)",
        "$(dash)",
        "$(dashboard)",
        "$(database)",
        "$(debug-continue)",
        "$(debug-disconnect)",
        "$(debug-pause)",
        "$(debug-restart)",
        "$(debug-start)",
        "$(debug-step-into)",
        "$(debug-step-out)",
        "$(debug-step-over)",
        "$(debug-stop)",
        "$(debug)",
        "$(device-camera-video)",
        "$(device-camera)",
        "$(device-mobile)",
        "$(diff-added)",
        "$(diff-ignored)",
        "$(diff-modified)",
        "$(diff-removed)",
        "$(diff-renamed)",
        "$(diff)",
        "$(discard)",
        "$(editor-layout)",
        "$(empty-window)",
        "$(exclude)",
        "$(extensions)",
        "$(eye-closed)",
        "$(file-binary)",
        "$(file-code)",
        "$(file-media)",
        "$(file-pdf)",
        "$(file-submodule)",
        "$(file-symlink-directory)",
        "$(file-symlink-file)",
        "$(file-zip)",
        "$(files)",
        "$(filter)",
        "$(flame)",
        "$(fold-down)",
        "$(fold-up)",
        "$(fold)",
        "$(folder-active)",
        "$(folder-opened)",
        "$(gear)",
        "$(gift)",
        "$(gist-secret)",
        "$(gist)",
        "$(git-commit)",
        "$(git-compare)",
        "$(git-merge)",
        "$(github-action)",
        "$(github-alt)",
        "$(globe)",
        "$(grabber)",
        "$(graph)",
        "$(gripper)",
        "$(heart)",
        "$(home)",
        "$(horizontal-rule)",
        "$(hubot)",
        "$(inbox)",
        "$(issue-closed)",
        "$(issue-reopened)",
        "$(issues)",
        "$(italic)",
        "$(jersey)",
        "$(json)",
        "$(bracket)",
        "$(kebab-vertical)",
        "$(key)",
        "$(law)",
        "$(lightbulb-autofix)",
        "$(link-external)",
        "$(link)",
        "$(list-ordered)",
        "$(list-unordered)",
        "$(live-share)",
        "$(loading)",
        "$(location)",
        "$(mail-read)",
        "$(mail)",
        "$(markdown)",
        "$(megaphone)",
        "$(mention)",
        "$(milestone)",
        "$(mortar-board)",
        "$(move)",
        "$(multiple-windows)",
        "$(mute)",
        "$(no-newline)",
        "$(note)",
        "$(octoface)",
        "$(open-preview)",
        "$(package)",
        "$(paintcan)",
        "$(pin)",
        "$(play)",
        "$(run)",
        "$(plug)",
        "$(preserve-case)",
        "$(preview)",
        "$(project)",
        "$(pulse)",
        "$(question)",
        "$(quote)",
        "$(radio-tower)",
        "$(reactions)",
        "$(references)",
        "$(refresh)",
        "$(regex)",
        "$(remote-explorer)",
        "$(remote)",
        "$(remove)",
        "$(replace-all)",
        "$(replace)",
        "$(repo-clone)",
        "$(repo-force-push)",
        "$(repo-pull)",
        "$(repo-push)",
        "$(report)",
        "$(request-changes)",
        "$(rocket)",
        "$(root-folder-opened)",
        "$(root-folder)",
        "$(rss)",
        "$(ruby)",
        "$(save-all)",
        "$(save-as)",
        "$(save)",
        "$(screen-full)",
        "$(screen-normal)",
        "$(search-stop)",
        "$(server)",
        "$(settings-gear)",
        "$(settings)",
        "$(shield)",
        "$(smiley)",
        "$(sort-precedence)",
        "$(split-horizontal)",
        "$(split-vertical)",
        "$(squirrel)",
        "$(star-full)",
        "$(star-half)",
        "$(symbol-class)",
        "$(symbol-color)",
        "$(symbol-customcolor)",
        "$(symbol-constant)",
        "$(symbol-enum-member)",
        "$(symbol-field)",
        "$(symbol-file)",
        "$(symbol-interface)",
        "$(symbol-keyword)",
        "$(symbol-misc)",
        "$(symbol-operator)",
        "$(symbol-property)",
        "$(wrench)",
        "$(wrench-subaction)",
        "$(symbol-snippet)",
        "$(tasklist)",
        "$(telescope)",
        "$(text-size)",
        "$(three-bars)",
        "$(thumbsdown)",
        "$(thumbsup)",
        "$(tools)",
        "$(triangle-down)",
        "$(triangle-left)",
        "$(triangle-right)",
        "$(triangle-up)",
        "$(twitter)",
        "$(unfold)",
        "$(unlock)",
        "$(unmute)",
        "$(unverified)",
        "$(verified)",
        "$(versions)",
        "$(vm-active)",
        "$(vm-outline)",
        "$(vm-running)",
        "$(watch)",
        "$(whitespace)",
        "$(whole-word)",
        "$(window)",
        "$(word-wrap)",
        "$(zoom-in)",
        "$(zoom-out)",
        "$(list-filter)",
        "$(list-flat)",
        "$(list-selection)",
        "$(selection)",
        "$(list-tree)",
        "$(debug-breakpoint-function-unverified)",
        "$(debug-breakpoint-function)",
        "$(debug-breakpoint-function-disabled)",
        "$(debug-stackframe-active)",
        "$(circle-small-filled)",
        "$(debug-stackframe-dot)",
        "$(debug-stackframe)",
        "$(debug-stackframe-focused)",
        "$(debug-breakpoint-unsupported)",
        "$(symbol-string)",
        "$(debug-reverse-continue)",
        "$(debug-step-back)",
        "$(debug-restart-frame)",
        "$(call-incoming)",
        "$(call-outgoing)",
        "$(menu)",
        "$(expand-all)",
        "$(feedback)",
        "$(group-by-ref-type)",
        "$(ungroup-by-ref-type)",
        "$(account)",
        "$(bell-dot)",
        "$(debug-console)",
        "$(library)",
        "$(output)",
        "$(run-all)",
        "$(sync-ignored)",
        "$(pinned)",
        "$(github-inverted)",
        "$(debug-alt)",
        "$(server-process)",
        "$(server-environment)",
        "$(pass)",
        "$(stop-circle)",
        "$(play-circle)",
        "$(record)",
        "$(debug-alt-small)",
        "$(vm-connect)",
        "$(cloud)",
        "$(merge)",
        "$(export)",
        "$(graph-left)",
        "$(magnet)",
        "$(notebook)",
        "$(redo)",
        "$(check-all)",
        "$(pinned-dirty)",
        "$(pass-filled)",
        "$(circle-large-filled)",
        "$(circle-large)",
        "$(circle-large-outline)",
        "$(combine)",
        "$(gather)",
        "$(table)",
        "$(variable-group)",
        "$(type-hierarchy)",
        "$(type-hierarchy-sub)",
        "$(type-hierarchy-super)",
        "$(git-pull-request-create)",
        "$(run-above)",
        "$(run-below)",
        "$(notebook-template)",
        "$(debug-rerun)",
        "$(workspace-trusted)",
        "$(workspace-untrusted)",
        "$(workspace-unspecified)",
        "$(terminal-cmd)",
        "$(terminal-debian)",
        "$(terminal-linux)",
        "$(terminal-powershell)",
        "$(terminal-tmux)",
        "$(terminal-ubuntu)",
        "$(terminal-bash)",
        "$(arrow-swap)",
        "$(copy)",
        "$(person-add)",
        "$(filter-filled)",
        "$(wand)",
        "$(debug-line-by-line)",
        "$(inspect)",
        "$(layers)",
        "$(layers-dot)",
        "$(layers-active)",
        "$(compass)",
        "$(compass-dot)",
        "$(compass-active)",
        "$(azure)",
        "$(issue-draft)",
        "$(git-pull-request-closed)",
        "$(git-pull-request-draft)",
        "$(debug-all)",
        "$(debug-coverage)",
        "$(run-errors)",
        "$(folder-library)",
        "$(debug-continue-small)",
        "$(beaker-stop)",
        "$(graph-line)",
        "$(graph-scatter)",
        "$(pie-chart)",
        "$(bracket-dot)",
        "$(bracket-error)",
        "$(lock-small)",
        "$(azure-devops)",
        "$(verified-filled)",
        "$(newline)",
        "$(layout)",
        "$(layout-activitybar-left)",
        "$(layout-activitybar-right)",
        "$(layout-panel-left)",
        "$(layout-panel-center)",
        "$(layout-panel-justify)",
        "$(layout-panel-right)",
        "$(layout-panel)",
        "$(layout-sidebar-left)",
        "$(layout-sidebar-right)",
        "$(layout-statusbar)",
        "$(layout-menubar)",
        "$(layout-centered)",
        "$(layout-sidebar-right-off)",
        "$(layout-panel-off)",
        "$(layout-sidebar-left-off)",
        "$(target)",
        "$(indent)",
        "$(record-small)",
        "$(error-small)",
        "$(arrow-circle-down)",
        "$(arrow-circle-left)",
        "$(arrow-circle-right)",
        "$(arrow-circle-up)",
        "$(heart-filled)",
        "$(map)",
        "$(map-filled)",
        "$(circle-small)",
        "$(bell-slash)",
        "$(bell-slash-dot)",
        "$(comment-unresolved)",
        "$(git-pull-request-go-to-changes)",
        "$(git-pull-request-new-changes)",
        "$(search-fuzzy)",
        "$(comment-draft)",
        "$(dialog-error)",
        "$(dialog-warning)",
        "$(dialog-info)",
        "$(dialog-close)",
        "$(tree-item-expanded)",
        "$(tree-filter-on-type-on)",
        "$(tree-filter-on-type-off)",
        "$(tree-filter-clear)",
        "$(tree-item-loading)",
        "$(menu-selection)",
        "$(menu-submenu)",
        "$(menubar-more)",
        "$(scrollbar-button-left)",
        "$(scrollbar-button-right)",
        "$(scrollbar-button-up)",
        "$(scrollbar-button-down)",
        "$(toolbar-more)",
        "$(quick-input-back)"
      ],
      "default": "terminal",
      "scope": 4,
      "defaultDefaultValue": "terminal",
      "restricted": false
    },
    "terminal.integrated.cwd": {
      "restricted": true,
      "description": "An explicit start path where the terminal will be launched, this is used as the current working directory (cwd) for the shell process. This may be particularly useful in workspace settings if the root directory is not a convenient cwd.",
      "type": "string",
      "default": "",
      "scope": 4
    },
    "css.customData": {
      "type": "array",
      "markdownDescription": "A list of relative file paths pointing to JSON files following the [custom data format](https://github.com/microsoft/vscode-css-languageservice/blob/master/docs/customData.md).\n\nVS Code loads custom data on startup to enhance its CSS support for the custom CSS properties, at directives, pseudo classes and pseudo elements you specify in the JSON files.\n\nThe file paths are relative to workspace and only workspace folder settings are considered.",
      "default": [],
      "items": {
        "type": "string"
      },
      "scope": 4,
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "css.completion.triggerPropertyValueCompletion": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "description": "By default, VS Code triggers property value completion after selecting a CSS property. Use this setting to disable this behavior.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "css.completion.completePropertyWithSemicolon": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "description": "Insert semicolon at end of line when completing CSS properties.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "css.validate": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "description": "Enables or disables all validations.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "css.hover.documentation": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "description": "Show tag and attribute documentation in CSS hovers.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "css.hover.references": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "description": "Show references to MDN in CSS hovers.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "css.lint.compatibleVendorPrefixes": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "description": "When using a vendor-specific prefix make sure to also include all other vendor-specific properties.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "css.lint.vendorPrefix": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "warning",
      "description": "When using a vendor-specific prefix, also include the standard property.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "warning",
      "restricted": false
    },
    "css.lint.duplicateProperties": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "description": "Do not use duplicate style definitions.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "css.lint.emptyRules": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "warning",
      "description": "Do not use empty rulesets.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "warning",
      "restricted": false
    },
    "css.lint.importStatement": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "description": "Import statements do not load in parallel.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "css.lint.boxModel": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "markdownDescription": "Do not use `width` or `height` when using `padding` or `border`.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "css.lint.universalSelector": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "markdownDescription": "The universal selector (`*`) is known to be slow.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "css.lint.zeroUnits": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "description": "No unit for zero needed.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "css.lint.fontFaceProperties": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "warning",
      "markdownDescription": "`@font-face` rule must define `src` and `font-family` properties.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "warning",
      "restricted": false
    },
    "css.lint.hexColorLength": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "error",
      "description": "Hex colors must consist of three or six hex numbers.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "error",
      "restricted": false
    },
    "css.lint.argumentsInColorFunction": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "error",
      "description": "Invalid number of parameters.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "error",
      "restricted": false
    },
    "css.lint.unknownProperties": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "warning",
      "description": "Unknown property.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "warning",
      "restricted": false
    },
    "css.lint.validProperties": {
      "type": "array",
      "uniqueItems": true,
      "items": {
        "type": "string"
      },
      "scope": 4,
      "default": [],
      "description": "A list of properties that are not validated against the `unknownProperties` rule.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "css.lint.ieHack": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "description": "IE hacks are only necessary when supporting IE7 and older.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "css.lint.unknownVendorSpecificProperties": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "description": "Unknown vendor specific property.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "css.lint.propertyIgnoredDueToDisplay": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "warning",
      "markdownDescription": "Property is ignored due to the display. E.g. with `display: inline`, the `width`, `height`, `margin-top`, `margin-bottom`, and `float` properties have no effect.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "warning",
      "restricted": false
    },
    "css.lint.important": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "markdownDescription": "Avoid using `!important`. It is an indication that the specificity of the entire CSS has gotten out of control and needs to be refactored.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "css.lint.float": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "markdownDescription": "Avoid using `float`. Floats lead to fragile CSS that is easy to break if one aspect of the layout changes.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "css.lint.idSelector": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "description": "Selectors should not contain IDs because these rules are too tightly coupled with the HTML.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "css.lint.unknownAtRules": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "warning",
      "description": "Unknown at-rule.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "warning",
      "restricted": false
    },
    "css.format.newlineBetweenSelectors": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "markdownDescription": "Separate selectors with a new line.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "css.format.newlineBetweenRules": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "markdownDescription": "Separate rulesets by a blank line.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "css.format.spaceAroundSelectorSeparator": {
      "type": "boolean",
      "scope": 4,
      "default": false,
      "markdownDescription": "Ensure a space character around selector separators '>', '+', '~' (e.g. `a > b`).",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "css.format.braceStyle": {
      "type": "string",
      "scope": 4,
      "default": "collapse",
      "enum": [
        "collapse",
        "expand"
      ],
      "markdownDescription": "Put braces on the same line as rules (`collapse`) or put braces on own line (`expand`).",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "collapse",
      "restricted": false
    },
    "css.format.preserveNewLines": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "markdownDescription": "Whether existing line breaks before elements should be preserved.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "css.format.maxPreserveNewLines": {
      "type": [
        "number",
        "null"
      ],
      "scope": 4,
      "default": null,
      "markdownDescription": "Maximum number of line breaks to be preserved in one chunk, when `#css.format.preserveNewLines#` is enabled.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "scss.completion.triggerPropertyValueCompletion": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "description": "By default, VS Code triggers property value completion after selecting a CSS property. Use this setting to disable this behavior.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "scss.completion.completePropertyWithSemicolon": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "description": "Insert semicolon at end of line when completing CSS properties.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "scss.validate": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "description": "Enables or disables all validations.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "scss.hover.documentation": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "description": "Show tag and attribute documentation in SCSS hovers.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "scss.hover.references": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "description": "Show references to MDN in SCSS hovers.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "scss.lint.compatibleVendorPrefixes": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "description": "When using a vendor-specific prefix make sure to also include all other vendor-specific properties.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "scss.lint.vendorPrefix": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "warning",
      "description": "When using a vendor-specific prefix, also include the standard property.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "warning",
      "restricted": false
    },
    "scss.lint.duplicateProperties": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "description": "Do not use duplicate style definitions.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "scss.lint.emptyRules": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "warning",
      "description": "Do not use empty rulesets.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "warning",
      "restricted": false
    },
    "scss.lint.importStatement": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "description": "Import statements do not load in parallel.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "scss.lint.boxModel": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "markdownDescription": "Do not use `width` or `height` when using `padding` or `border`.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "scss.lint.universalSelector": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "markdownDescription": "The universal selector (`*`) is known to be slow.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "scss.lint.zeroUnits": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "description": "No unit for zero needed.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "scss.lint.fontFaceProperties": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "warning",
      "markdownDescription": "`@font-face` rule must define `src` and `font-family` properties.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "warning",
      "restricted": false
    },
    "scss.lint.hexColorLength": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "error",
      "description": "Hex colors must consist of three or six hex numbers.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "error",
      "restricted": false
    },
    "scss.lint.argumentsInColorFunction": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "error",
      "description": "Invalid number of parameters.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "error",
      "restricted": false
    },
    "scss.lint.unknownProperties": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "warning",
      "description": "Unknown property.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "warning",
      "restricted": false
    },
    "scss.lint.validProperties": {
      "type": "array",
      "uniqueItems": true,
      "items": {
        "type": "string"
      },
      "scope": 4,
      "default": [],
      "description": "A list of properties that are not validated against the `unknownProperties` rule.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "scss.lint.ieHack": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "description": "IE hacks are only necessary when supporting IE7 and older.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "scss.lint.unknownVendorSpecificProperties": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "description": "Unknown vendor specific property.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "scss.lint.propertyIgnoredDueToDisplay": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "warning",
      "markdownDescription": "Property is ignored due to the display. E.g. with `display: inline`, the `width`, `height`, `margin-top`, `margin-bottom`, and `float` properties have no effect.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "warning",
      "restricted": false
    },
    "scss.lint.important": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "markdownDescription": "Avoid using `!important`. It is an indication that the specificity of the entire CSS has gotten out of control and needs to be refactored.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "scss.lint.float": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "markdownDescription": "Avoid using `float`. Floats lead to fragile CSS that is easy to break if one aspect of the layout changes.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "scss.lint.idSelector": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "description": "Selectors should not contain IDs because these rules are too tightly coupled with the HTML.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "scss.lint.unknownAtRules": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "warning",
      "description": "Unknown at-rule.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "warning",
      "restricted": false
    },
    "scss.format.newlineBetweenSelectors": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "markdownDescription": "Separate selectors with a new line.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "scss.format.newlineBetweenRules": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "markdownDescription": "Separate rulesets by a blank line.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "scss.format.spaceAroundSelectorSeparator": {
      "type": "boolean",
      "scope": 4,
      "default": false,
      "markdownDescription": "Ensure a space character around selector separators '>', '+', '~' (e.g. `a > b`).",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "scss.format.braceStyle": {
      "type": "string",
      "scope": 4,
      "default": "collapse",
      "enum": [
        "collapse",
        "expand"
      ],
      "markdownDescription": "Put braces on the same line as rules (`collapse`) or put braces on own line (`expand`).",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "collapse",
      "restricted": false
    },
    "scss.format.preserveNewLines": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "markdownDescription": "Whether existing line breaks before elements should be preserved.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "scss.format.maxPreserveNewLines": {
      "type": [
        "number",
        "null"
      ],
      "scope": 4,
      "default": null,
      "markdownDescription": "Maximum number of line breaks to be preserved in one chunk, when `#scss.format.preserveNewLines#` is enabled.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "less.completion.triggerPropertyValueCompletion": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "description": "By default, VS Code triggers property value completion after selecting a CSS property. Use this setting to disable this behavior.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "less.completion.completePropertyWithSemicolon": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "description": "Insert semicolon at end of line when completing CSS properties.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "less.validate": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "description": "Enables or disables all validations.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "less.hover.documentation": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "description": "Show tag and attribute documentation in LESS hovers.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "less.hover.references": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "description": "Show references to MDN in LESS hovers.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "less.lint.compatibleVendorPrefixes": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "description": "When using a vendor-specific prefix make sure to also include all other vendor-specific properties.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "less.lint.vendorPrefix": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "warning",
      "description": "When using a vendor-specific prefix, also include the standard property.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "warning",
      "restricted": false
    },
    "less.lint.duplicateProperties": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "description": "Do not use duplicate style definitions.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "less.lint.emptyRules": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "warning",
      "description": "Do not use empty rulesets.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "warning",
      "restricted": false
    },
    "less.lint.importStatement": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "description": "Import statements do not load in parallel.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "less.lint.boxModel": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "markdownDescription": "Do not use `width` or `height` when using `padding` or `border`.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "less.lint.universalSelector": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "markdownDescription": "The universal selector (`*`) is known to be slow.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "less.lint.zeroUnits": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "description": "No unit for zero needed.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "less.lint.fontFaceProperties": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "warning",
      "markdownDescription": "`@font-face` rule must define `src` and `font-family` properties.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "warning",
      "restricted": false
    },
    "less.lint.hexColorLength": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "error",
      "description": "Hex colors must consist of three or six hex numbers.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "error",
      "restricted": false
    },
    "less.lint.argumentsInColorFunction": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "error",
      "description": "Invalid number of parameters.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "error",
      "restricted": false
    },
    "less.lint.unknownProperties": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "warning",
      "description": "Unknown property.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "warning",
      "restricted": false
    },
    "less.lint.validProperties": {
      "type": "array",
      "uniqueItems": true,
      "items": {
        "type": "string"
      },
      "scope": 4,
      "default": [],
      "description": "A list of properties that are not validated against the `unknownProperties` rule.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "less.lint.ieHack": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "description": "IE hacks are only necessary when supporting IE7 and older.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "less.lint.unknownVendorSpecificProperties": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "description": "Unknown vendor specific property.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "less.lint.propertyIgnoredDueToDisplay": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "warning",
      "markdownDescription": "Property is ignored due to the display. E.g. with `display: inline`, the `width`, `height`, `margin-top`, `margin-bottom`, and `float` properties have no effect.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "warning",
      "restricted": false
    },
    "less.lint.important": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "markdownDescription": "Avoid using `!important`. It is an indication that the specificity of the entire CSS has gotten out of control and needs to be refactored.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "less.lint.float": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "markdownDescription": "Avoid using `float`. Floats lead to fragile CSS that is easy to break if one aspect of the layout changes.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "less.lint.idSelector": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "description": "Selectors should not contain IDs because these rules are too tightly coupled with the HTML.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "less.lint.unknownAtRules": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "warning",
      "description": "Unknown at-rule.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "warning",
      "restricted": false
    },
    "less.format.newlineBetweenSelectors": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "markdownDescription": "Separate selectors with a new line.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "less.format.newlineBetweenRules": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "markdownDescription": "Separate rulesets by a blank line.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "less.format.spaceAroundSelectorSeparator": {
      "type": "boolean",
      "scope": 4,
      "default": false,
      "markdownDescription": "Ensure a space character around selector separators '>', '+', '~' (e.g. `a > b`).",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "less.format.braceStyle": {
      "type": "string",
      "scope": 4,
      "default": "collapse",
      "enum": [
        "collapse",
        "expand"
      ],
      "markdownDescription": "Put braces on the same line as rules (`collapse`) or put braces on own line (`expand`).",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "collapse",
      "restricted": false
    },
    "less.format.preserveNewLines": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "markdownDescription": "Whether existing line breaks before elements should be preserved.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "less.format.maxPreserveNewLines": {
      "type": [
        "number",
        "null"
      ],
      "scope": 4,
      "default": null,
      "markdownDescription": "Maximum number of line breaks to be preserved in one chunk, when `#less.format.preserveNewLines#` is enabled.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "emmet.showAbbreviationSuggestions": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "Shows possible Emmet abbreviations as suggestions. Not applicable in stylesheets or when emmet.showExpandedAbbreviation is set to `\"never\"`.",
      "source": {
        "id": "vscode.emmet",
        "displayName": "Emmet"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "emmet.triggerExpansionOnTab": {
      "type": "boolean",
      "default": false,
      "scope": 5,
      "markdownDescription": "When enabled, Emmet abbreviations are expanded when pressing TAB, even when completions do not show up. When disabled, completions that show up can still be accepted by pressing TAB.",
      "source": {
        "id": "vscode.emmet",
        "displayName": "Emmet"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "git.enabled": {
      "type": "boolean",
      "scope": 4,
      "description": "Whether git is enabled.",
      "default": true,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "git.autofetch": {
      "type": [
        "boolean",
        "string"
      ],
      "enum": [
        true,
        false,
        "all"
      ],
      "scope": 4,
      "markdownDescription": "When set to true, commits will automatically be fetched from the default remote of the current Git repository. Setting to `all` will fetch from all remotes.",
      "default": false,
      "tags": [
        "usesOnlineServices"
      ],
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "git.autofetchPeriod": {
      "type": "number",
      "scope": 4,
      "markdownDescription": "Duration in seconds between each automatic git fetch, when `#git.autofetch#` is enabled.",
      "default": 180,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": 180,
      "restricted": false
    },
    "git.branchPrefix": {
      "type": "string",
      "description": "Prefix used when creating a new branch.",
      "default": "",
      "scope": 4,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": "",
      "restricted": false
    },
    "git.branchProtection": {
      "type": "array",
      "markdownDescription": "List of protected branches. By default, a prompt is shown before changes are committed to a protected branch. The prompt can be controlled using the `#git.branchProtectionPrompt#`  setting.",
      "items": {
        "type": "string"
      },
      "default": [],
      "scope": 4,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "git.branchProtectionPrompt": {
      "type": "string",
      "description": "Controls whether a prompt is being shown before changes are committed to a protected branch.",
      "enum": [
        "alwaysCommit",
        "alwaysCommitToNewBranch",
        "alwaysPrompt"
      ],
      "enumDescriptions": [
        "Always commit changes to the protected branch.",
        "Always commit changes to a new branch.",
        "Always prompt before changes are committed to a protected branch."
      ],
      "default": "alwaysPrompt",
      "scope": 4,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": "alwaysPrompt",
      "restricted": false
    },
    "git.branchRandomName.enable": {
      "type": "boolean",
      "description": "Controls whether a random name is generated when creating a new branch.",
      "default": false,
      "scope": 4,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "git.branchRandomName.dictionary": {
      "type": "array",
      "markdownDescription": "List of dictionaries used for the randomly generated branch name. Each value represents the dictionary used to generate the segment of the branch name. Supported dictionaries: `adjectives`, `animals`, `colors` and `numbers`.",
      "items": {
        "type": "string",
        "enum": [
          "adjectives",
          "animals",
          "colors",
          "numbers"
        ],
        "enumDescriptions": [
          "A random adjective",
          "A random animal name",
          "A random color name",
          "A random number between 100 and 999"
        ]
      },
      "minItems": 1,
      "maxItems": 5,
      "default": [
        "adjectives",
        "animals"
      ],
      "scope": 4,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": [
        "adjectives",
        "animals"
      ],
      "restricted": false
    },
    "git.countBadge": {
      "type": "string",
      "enum": [
        "all",
        "tracked",
        "off"
      ],
      "enumDescriptions": [
        "Count all changes.",
        "Count only tracked changes.",
        "Turn off counter."
      ],
      "description": "Controls the Git count badge.",
      "default": "all",
      "scope": 4,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": "all",
      "restricted": false
    },
    "git.verboseCommit": {
      "type": "boolean",
      "scope": 4,
      "markdownDescription": "Enable verbose output when `#git.useEditorAsCommitInput#` is enabled.",
      "default": false,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "git.enableSmartCommit": {
      "type": "boolean",
      "scope": 4,
      "description": "Commit all changes when there are no staged changes.",
      "default": false,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "git.smartCommitChanges": {
      "type": "string",
      "enum": [
        "all",
        "tracked"
      ],
      "enumDescriptions": [
        "Automatically stage all changes.",
        "Automatically stage tracked changes only."
      ],
      "scope": 4,
      "description": "Control which changes are automatically staged by Smart Commit.",
      "default": "all",
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": "all",
      "restricted": false
    },
    "git.suggestSmartCommit": {
      "type": "boolean",
      "scope": 4,
      "description": "Suggests to enable smart commit (commit all changes when there are no staged changes).",
      "default": true,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "git.enableCommitSigning": {
      "type": "boolean",
      "scope": 4,
      "description": "Enables commit signing with GPG or X.509.",
      "default": false,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "git.confirmEmptyCommits": {
      "type": "boolean",
      "scope": 4,
      "description": "Always confirm the creation of empty commits for the 'Git: Commit Empty' command.",
      "default": true,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "git.enableStatusBarSync": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether the Git Sync command appears in the status bar.",
      "scope": 4,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "git.followTagsWhenSync": {
      "type": "boolean",
      "scope": 4,
      "default": false,
      "description": "Push all annotated tags when running the sync command.",
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "git.promptToSaveFilesBeforeStash": {
      "type": "string",
      "enum": [
        "always",
        "staged",
        "never"
      ],
      "enumDescriptions": [
        "Check for any unsaved files.",
        "Check only for unsaved staged files.",
        "Disable this check."
      ],
      "scope": 4,
      "default": "always",
      "description": "Controls whether Git should check for unsaved files before stashing changes.",
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": "always",
      "restricted": false
    },
    "git.promptToSaveFilesBeforeCommit": {
      "type": "string",
      "enum": [
        "always",
        "staged",
        "never"
      ],
      "enumDescriptions": [
        "Check for any unsaved files.",
        "Check only for unsaved staged files.",
        "Disable this check."
      ],
      "scope": 4,
      "default": "always",
      "description": "Controls whether Git should check for unsaved files before committing.",
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": "always",
      "restricted": false
    },
    "git.postCommitCommand": {
      "type": "string",
      "enum": [
        "none",
        "push",
        "sync"
      ],
      "enumDescriptions": [
        "Don't run any command after a commit.",
        "Run 'git push' after a successful commit.",
        "Run 'git pull' and 'git push' after a successful commit."
      ],
      "markdownDescription": "Run a git command after a successful commit.",
      "scope": 4,
      "default": "none",
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": "none",
      "restricted": false
    },
    "git.rememberPostCommitCommand": {
      "type": "boolean",
      "description": "Remember the last git command that ran after a commit.",
      "scope": 4,
      "default": false,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "git.detectSubmodules": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "description": "Controls whether to automatically detect git submodules.",
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "git.detectSubmodulesLimit": {
      "type": "number",
      "scope": 4,
      "default": 10,
      "description": "Controls the limit of git submodules detected.",
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": 10,
      "restricted": false
    },
    "git.alwaysShowStagedChangesResourceGroup": {
      "type": "boolean",
      "scope": 4,
      "default": false,
      "description": "Always show the Staged Changes resource group.",
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "git.alwaysSignOff": {
      "type": "boolean",
      "scope": 4,
      "default": false,
      "description": "Controls the signoff flag for all commits.",
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "git.ignoreSubmodules": {
      "type": "boolean",
      "scope": 4,
      "default": false,
      "description": "Ignore modifications to submodules in the file tree.",
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "git.scanRepositories": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "default": [],
      "scope": 4,
      "description": "List of paths to search for git repositories in.",
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "git.showProgress": {
      "type": "boolean",
      "description": "Controls whether git actions should show progress.",
      "default": true,
      "scope": 4,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "git.rebaseWhenSync": {
      "type": "boolean",
      "scope": 4,
      "default": false,
      "description": "Force git to use rebase when running the sync command.",
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "git.pullBeforeCheckout": {
      "type": "boolean",
      "scope": 4,
      "default": false,
      "description": "Controls whether a branch that does not have outgoing commits is fast-forwarded before it is checked out.",
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "git.fetchOnPull": {
      "type": "boolean",
      "scope": 4,
      "default": false,
      "description": "When enabled, fetch all branches when pulling. Otherwise, fetch just the current one.",
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "git.pruneOnFetch": {
      "type": "boolean",
      "scope": 4,
      "default": false,
      "description": "Prune when fetching.",
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "git.pullTags": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "description": "Fetch all tags when pulling.",
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "git.autoStash": {
      "type": "boolean",
      "scope": 4,
      "default": false,
      "description": "Stash any changes before pulling and restore them after successful pull.",
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "git.closeDiffOnOperation": {
      "type": "boolean",
      "scope": 4,
      "default": false,
      "description": "Controls whether the diff editor should be automatically closed when changes are stashed, committed, discarded, staged, or unstaged.",
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "git.openDiffOnClick": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "description": "Controls whether the diff editor should be opened when clicking a change. Otherwise the regular editor will be opened.",
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "git.supportCancellation": {
      "type": "boolean",
      "scope": 4,
      "default": false,
      "description": "Controls whether a notification comes up when running the Sync action, which allows the user to cancel the operation.",
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "git.untrackedChanges": {
      "type": "string",
      "enum": [
        "mixed",
        "separate",
        "hidden"
      ],
      "enumDescriptions": [
        "All changes, tracked and untracked, appear together and behave equally.",
        "Untracked changes appear separately in the Source Control view. They are also excluded from several actions.",
        "Untracked changes are hidden and excluded from several actions."
      ],
      "default": "mixed",
      "description": "Controls how untracked changes behave.",
      "scope": 4,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": "mixed",
      "restricted": false
    },
    "git.requireGitUserConfig": {
      "type": "boolean",
      "description": "Controls whether to require explicit Git user configuration or allow Git to guess if missing.",
      "default": true,
      "scope": 4,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "git.showCommitInput": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "description": "Controls whether to show the commit input in the Git source control panel.",
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "git.useCommitInputAsStashMessage": {
      "type": "boolean",
      "scope": 4,
      "default": false,
      "description": "Controls whether to use the message from the commit input box as the default stash message.",
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "git.showActionButton": {
      "type": "object",
      "additionalProperties": false,
      "description": "Controls whether an action button is shown in the Source Control view.",
      "properties": {
        "commit": {
          "type": "boolean",
          "description": "Show an action button to commit changes when the local branch has modified files ready to be committed."
        },
        "publish": {
          "type": "boolean",
          "description": "Show an action button to publish the local branch when it does not have a tracking remote branch."
        },
        "sync": {
          "type": "boolean",
          "description": "Show an action button to synchronize changes when the local branch is either ahead or behind the remote branch."
        }
      },
      "default": {
        "commit": true,
        "publish": true,
        "sync": true
      },
      "scope": 4,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": {
        "commit": true,
        "publish": true,
        "sync": true
      },
      "restricted": false
    },
    "git.statusLimit": {
      "type": "number",
      "scope": 4,
      "default": 10000,
      "description": "Controls how to limit the number of changes that can be parsed from Git status command. Can be set to 0 for no limit.",
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": 10000,
      "restricted": false
    },
    "git.repositoryScanIgnoredFolders": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "default": [
        "node_modules"
      ],
      "scope": 4,
      "markdownDescription": "List of folders that are ignored while scanning for Git repositories when `#git.autoRepositoryDetection#` is set to `true` or `subFolders`.",
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": [
        "node_modules"
      ],
      "restricted": false
    },
    "git.repositoryScanMaxDepth": {
      "type": "number",
      "scope": 4,
      "default": 1,
      "markdownDescription": "Controls the depth used when scanning workspace folders for Git repositories when `#git.autoRepositoryDetection#` is set to `true` or `subFolders`. Can be set to `-1` for no limit.",
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": 1,
      "restricted": false
    },
    "git.optimisticUpdate": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Controls whether to optimistically update the state of the Source Control view after running git commands.",
      "scope": 4,
      "tags": [
        "experimental"
      ],
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "git.openRepositoryInParentFolders": {
      "type": "string",
      "enum": [
        "always",
        "never",
        "prompt"
      ],
      "enumDescriptions": [
        "Always open a repository in parent folders of workspaces or open files.",
        "Never open a repository in parent folders of workspaces or open files.",
        "Prompt before opening a repository the parent folders of workspaces or open files."
      ],
      "default": "prompt",
      "markdownDescription": "Control whether a repository in parent folders of workspaces or open files should be opened.",
      "scope": 4,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": "prompt",
      "restricted": false
    },
    "github.gitAuthentication": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "description": "Controls whether to enable automatic GitHub authentication for git commands within VS Code.",
      "source": {
        "id": "vscode.github",
        "displayName": "GitHub"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "html.completion.attributeDefaultValue": {
      "type": "string",
      "scope": 4,
      "enum": [
        "doublequotes",
        "singlequotes",
        "empty"
      ],
      "enumDescriptions": [
        "Attribute value is set to \"\".",
        "Attribute value is set to ''.",
        "Attribute value is not set."
      ],
      "default": "doublequotes",
      "description": "Controls the default value for attributes when completion is accepted.",
      "source": {
        "id": "vscode.html-language-features",
        "displayName": "HTML Language Features"
      },
      "defaultDefaultValue": "doublequotes",
      "restricted": false
    },
    "html.customData": {
      "type": "array",
      "markdownDescription": "A list of relative file paths pointing to JSON files following the [custom data format](https://github.com/microsoft/vscode-html-languageservice/blob/master/docs/customData.md).\n\nVS Code loads custom data on startup to enhance its HTML support for the custom HTML tags, attributes and attribute values you specify in the JSON files.\n\nThe file paths are relative to workspace and only workspace folder settings are considered.",
      "default": [],
      "items": {
        "type": "string"
      },
      "scope": 4,
      "source": {
        "id": "vscode.html-language-features",
        "displayName": "HTML Language Features"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "html.format.wrapLineLength": {
      "type": "integer",
      "scope": 4,
      "default": 120,
      "description": "Maximum amount of characters per line (0 = disable).",
      "source": {
        "id": "vscode.html-language-features",
        "displayName": "HTML Language Features"
      },
      "defaultDefaultValue": 120,
      "restricted": false
    },
    "html.format.unformatted": {
      "type": [
        "string",
        "null"
      ],
      "scope": 4,
      "default": "wbr",
      "markdownDescription": "List of tags, comma separated, that shouldn't be reformatted. `null` defaults to all tags listed at https://www.w3.org/TR/html5/dom.html#phrasing-content.",
      "source": {
        "id": "vscode.html-language-features",
        "displayName": "HTML Language Features"
      },
      "defaultDefaultValue": "wbr",
      "restricted": false
    },
    "html.format.contentUnformatted": {
      "type": [
        "string",
        "null"
      ],
      "scope": 4,
      "default": "pre,code,textarea",
      "markdownDescription": "List of tags, comma separated, where the content shouldn't be reformatted. `null` defaults to the `pre` tag.",
      "source": {
        "id": "vscode.html-language-features",
        "displayName": "HTML Language Features"
      },
      "defaultDefaultValue": "pre,code,textarea",
      "restricted": false
    },
    "html.format.indentInnerHtml": {
      "type": "boolean",
      "scope": 4,
      "default": false,
      "markdownDescription": "Indent `<head>` and `<body>` sections.",
      "source": {
        "id": "vscode.html-language-features",
        "displayName": "HTML Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "html.format.preserveNewLines": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "description": "Controls whether existing line breaks before elements should be preserved. Only works before elements, not inside tags or for text.",
      "source": {
        "id": "vscode.html-language-features",
        "displayName": "HTML Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "html.format.maxPreserveNewLines": {
      "type": [
        "number",
        "null"
      ],
      "scope": 4,
      "default": null,
      "markdownDescription": "Maximum number of line breaks to be preserved in one chunk. Use `null` for unlimited.",
      "source": {
        "id": "vscode.html-language-features",
        "displayName": "HTML Language Features"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "html.format.indentHandlebars": {
      "type": "boolean",
      "scope": 4,
      "default": false,
      "markdownDescription": "Format and indent `{{#foo}}` and `{{/foo}}`.",
      "source": {
        "id": "vscode.html-language-features",
        "displayName": "HTML Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "html.format.extraLiners": {
      "type": [
        "string",
        "null"
      ],
      "scope": 4,
      "default": "head, body, /html",
      "markdownDescription": "List of tags, comma separated, that should have an extra newline before them. `null` defaults to `\"head, body, /html\"`.",
      "source": {
        "id": "vscode.html-language-features",
        "displayName": "HTML Language Features"
      },
      "defaultDefaultValue": "head, body, /html",
      "restricted": false
    },
    "html.format.wrapAttributes": {
      "type": "string",
      "scope": 4,
      "default": "auto",
      "enum": [
        "auto",
        "force",
        "force-aligned",
        "force-expand-multiline",
        "aligned-multiple",
        "preserve",
        "preserve-aligned"
      ],
      "enumDescriptions": [
        "Wrap attributes only when line length is exceeded.",
        "Wrap each attribute except first.",
        "Wrap each attribute except first and keep aligned.",
        "Wrap each attribute.",
        "Wrap when line length is exceeded, align attributes vertically.",
        "Preserve wrapping of attributes.",
        "Preserve wrapping of attributes but align."
      ],
      "description": "Wrap attributes.",
      "source": {
        "id": "vscode.html-language-features",
        "displayName": "HTML Language Features"
      },
      "defaultDefaultValue": "auto",
      "restricted": false
    },
    "html.format.wrapAttributesIndentSize": {
      "type": [
        "number",
        "null"
      ],
      "scope": 4,
      "default": null,
      "markdownDescription": "Indent wrapped attributes to after N characters. Use `null` to use the default indent size. Ignored if `#html.format.wrapAttributes#` is set to 'aligned'.",
      "source": {
        "id": "vscode.html-language-features",
        "displayName": "HTML Language Features"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "html.format.templating": {
      "type": "boolean",
      "scope": 4,
      "default": false,
      "description": "Honor django, erb, handlebars and php templating language tags.",
      "source": {
        "id": "vscode.html-language-features",
        "displayName": "HTML Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "html.format.unformattedContentDelimiter": {
      "type": "string",
      "scope": 4,
      "default": "",
      "markdownDescription": "Keep text content together between this string.",
      "source": {
        "id": "vscode.html-language-features",
        "displayName": "HTML Language Features"
      },
      "defaultDefaultValue": "",
      "restricted": false
    },
    "html.suggest.html5": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "description": "Controls whether the built-in HTML language support suggests HTML5 tags, properties and values.",
      "source": {
        "id": "vscode.html-language-features",
        "displayName": "HTML Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "html.validate.scripts": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "description": "Controls whether the built-in HTML language support validates embedded scripts.",
      "source": {
        "id": "vscode.html-language-features",
        "displayName": "HTML Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "html.validate.styles": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "description": "Controls whether the built-in HTML language support validates embedded styles.",
      "source": {
        "id": "vscode.html-language-features",
        "displayName": "HTML Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "html.autoCreateQuotes": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "description": "Enable/disable auto creation of quotes for HTML attribute assignment. The type of quotes can be configured by `#html.completion.attributeDefaultValue#`.",
      "source": {
        "id": "vscode.html-language-features",
        "displayName": "HTML Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "html.autoClosingTags": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "description": "Enable/disable autoclosing of HTML tags.",
      "source": {
        "id": "vscode.html-language-features",
        "displayName": "HTML Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "html.hover.documentation": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "description": "Show tag and attribute documentation in hover.",
      "source": {
        "id": "vscode.html-language-features",
        "displayName": "HTML Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "html.hover.references": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "description": "Show references to MDN in hover.",
      "source": {
        "id": "vscode.html-language-features",
        "displayName": "HTML Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "html.mirrorCursorOnMatchingTag": {
      "type": "boolean",
      "scope": 4,
      "default": false,
      "description": "Enable/disable mirroring cursor on matching HTML tag.",
      "deprecationMessage": "Deprecated in favor of `editor.linkedEditing`",
      "source": {
        "id": "vscode.html-language-features",
        "displayName": "HTML Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "ipynb.pasteImagesAsAttachments.enabled": {
      "type": "boolean",
      "scope": 4,
      "markdownDescription": "Enable/disable pasting of images into Markdown cells in ipynb notebook files. Pasted images are inserted as attachments to the cell.",
      "default": true,
      "source": {
        "id": "vscode.ipynb",
        "displayName": ".ipynb Support"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "json.schemas": {
      "type": "array",
      "scope": 4,
      "description": "Associate schemas to JSON files in the current project.",
      "items": {
        "type": "object",
        "default": {
          "fileMatch": [
            "/myfile"
          ],
          "url": "schemaURL"
        },
        "properties": {
          "url": {
            "type": "string",
            "default": "/user.schema.json",
            "description": "A URL to a schema or a relative path to a schema in the current directory"
          },
          "fileMatch": {
            "type": "array",
            "items": {
              "type": "string",
              "default": "MyFile.json",
              "description": "A file pattern that can contain '*' to match against when resolving JSON files to schemas."
            },
            "minItems": 1,
            "description": "An array of file patterns to match against when resolving JSON files to schemas. `*` can be used as a wildcard. Exclusion patterns can also be defined and start with '!'. A file matches when there is at least one matching pattern and the last matching pattern is not an exclusion pattern."
          },
          "schema": {
            "$ref": "http://json-schema.org/draft-07/schema#",
            "description": "The schema definition for the given URL. The schema only needs to be provided to avoid accesses to the schema URL."
          }
        }
      },
      "source": {
        "id": "vscode.json-language-features",
        "displayName": "JSON Language Features"
      },
      "default": [],
      "restricted": false
    },
    "markdown.styles": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "default": [],
      "description": "A list of URLs or local paths to CSS style sheets to use from the Markdown preview. Relative paths are interpreted relative to the folder open in the Explorer. If there is no open folder, they are interpreted relative to the location of the Markdown file. All '\\' need to be written as '\\\\'.",
      "scope": 4,
      "source": {
        "id": "vscode.markdown-language-features",
        "displayName": "Markdown Language Features"
      },
      "defaultDefaultValue": [],
      "restricted": true
    },
    "markdown.preview.breaks": {
      "type": "boolean",
      "default": false,
      "description": "Sets how line-breaks are rendered in the Markdown preview. Setting it to 'true' creates a <br> for newlines inside paragraphs.",
      "scope": 4,
      "source": {
        "id": "vscode.markdown-language-features",
        "displayName": "Markdown Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "markdown.preview.linkify": {
      "type": "boolean",
      "default": true,
      "description": "Convert URL-like text to links in the Markdown preview.",
      "scope": 4,
      "source": {
        "id": "vscode.markdown-language-features",
        "displayName": "Markdown Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "markdown.preview.typographer": {
      "type": "boolean",
      "default": false,
      "description": "Enable some language-neutral replacement and quotes beautification in the Markdown preview.",
      "scope": 4,
      "source": {
        "id": "vscode.markdown-language-features",
        "displayName": "Markdown Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "markdown.preview.fontFamily": {
      "type": "string",
      "default": "-apple-system, BlinkMacSystemFont, 'Segoe WPC', 'Segoe UI', system-ui, 'Ubuntu', 'Droid Sans', sans-serif",
      "description": "Controls the font family used in the Markdown preview.",
      "scope": 4,
      "source": {
        "id": "vscode.markdown-language-features",
        "displayName": "Markdown Language Features"
      },
      "defaultDefaultValue": "-apple-system, BlinkMacSystemFont, 'Segoe WPC', 'Segoe UI', system-ui, 'Ubuntu', 'Droid Sans', sans-serif",
      "restricted": false
    },
    "markdown.preview.fontSize": {
      "type": "number",
      "default": 14,
      "description": "Controls the font size in pixels used in the Markdown preview.",
      "scope": 4,
      "source": {
        "id": "vscode.markdown-language-features",
        "displayName": "Markdown Language Features"
      },
      "defaultDefaultValue": 14,
      "restricted": false
    },
    "markdown.preview.lineHeight": {
      "type": "number",
      "default": 1.6,
      "description": "Controls the line height used in the Markdown preview. This number is relative to the font size.",
      "scope": 4,
      "source": {
        "id": "vscode.markdown-language-features",
        "displayName": "Markdown Language Features"
      },
      "defaultDefaultValue": 1.6,
      "restricted": false
    },
    "markdown.preview.scrollPreviewWithEditor": {
      "type": "boolean",
      "default": true,
      "description": "When a Markdown editor is scrolled, update the view of the preview.",
      "scope": 4,
      "source": {
        "id": "vscode.markdown-language-features",
        "displayName": "Markdown Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "markdown.preview.markEditorSelection": {
      "type": "boolean",
      "default": true,
      "description": "Mark the current editor selection in the Markdown preview.",
      "scope": 4,
      "source": {
        "id": "vscode.markdown-language-features",
        "displayName": "Markdown Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "markdown.preview.scrollEditorWithPreview": {
      "type": "boolean",
      "default": true,
      "description": "When a Markdown preview is scrolled, update the view of the editor.",
      "scope": 4,
      "source": {
        "id": "vscode.markdown-language-features",
        "displayName": "Markdown Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "markdown.preview.doubleClickToSwitchToEditor": {
      "type": "boolean",
      "default": true,
      "description": "Double-click in the Markdown preview to switch to the editor.",
      "scope": 4,
      "source": {
        "id": "vscode.markdown-language-features",
        "displayName": "Markdown Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "markdown.preview.openMarkdownLinks": {
      "type": "string",
      "default": "inPreview",
      "description": "Controls how links to other Markdown files in the Markdown preview should be opened.",
      "scope": 4,
      "enum": [
        "inPreview",
        "inEditor"
      ],
      "enumDescriptions": [
        "Try to open links in the Markdown preview.",
        "Try to open links in the editor."
      ],
      "source": {
        "id": "vscode.markdown-language-features",
        "displayName": "Markdown Language Features"
      },
      "defaultDefaultValue": "inPreview",
      "restricted": false
    },
    "markdown.links.openLocation": {
      "type": "string",
      "default": "currentGroup",
      "description": "Controls where links in Markdown files should be opened.",
      "scope": 4,
      "enum": [
        "currentGroup",
        "beside"
      ],
      "enumDescriptions": [
        "Open links in the active editor group.",
        "Open links beside the active editor."
      ],
      "source": {
        "id": "vscode.markdown-language-features",
        "displayName": "Markdown Language Features"
      },
      "defaultDefaultValue": "currentGroup",
      "restricted": false
    },
    "markdown.suggest.paths.enabled": {
      "type": "boolean",
      "default": true,
      "description": "Enable path suggestions while writing links in Markdown files.",
      "scope": 4,
      "source": {
        "id": "vscode.markdown-language-features",
        "displayName": "Markdown Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "markdown.suggest.paths.includeWorkspaceHeaderCompletions": {
      "type": "string",
      "default": "onDoubleHash",
      "scope": 4,
      "markdownDescription": "Enable suggestions for headers in other Markdown files in the current workspace. Accepting one of these suggestions inserts the full path to header in that file, for example `[link text](/path/to/file.md#header)`.",
      "enum": [
        "never",
        "onDoubleHash",
        "onSingleOrDoubleHash"
      ],
      "markdownEnumDescriptions": [
        "Disable workspace header suggestions.",
        "Enable workspace header suggestions after typing `##` in a path, for example `[link text](##`.",
        "Enable workspace header suggestions after typing either `##` or `#` in a path, for example `[link text](#` or `[link text](##`."
      ],
      "source": {
        "id": "vscode.markdown-language-features",
        "displayName": "Markdown Language Features"
      },
      "defaultDefaultValue": "onDoubleHash",
      "restricted": false
    },
    "markdown.editor.drop.enabled": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Enable dropping files into a Markdown editor while holding Shift. Requires enabling `#editor.dropIntoEditor.enabled#`.",
      "scope": 4,
      "source": {
        "id": "vscode.markdown-language-features",
        "displayName": "Markdown Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "markdown.experimental.editor.pasteLinks.enabled": {
      "type": "boolean",
      "scope": 4,
      "markdownDescription": "Enable pasting files into a Markdown editor inserts Markdown links. Requires enabling `#editor.experimental.pasteActions.enabled#`.",
      "default": true,
      "tags": [
        "experimental"
      ],
      "source": {
        "id": "vscode.markdown-language-features",
        "displayName": "Markdown Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "markdown.validate.enabled": {
      "type": "boolean",
      "scope": 4,
      "description": "Enable all error reporting in Markdown files.",
      "default": false,
      "source": {
        "id": "vscode.markdown-language-features",
        "displayName": "Markdown Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "markdown.validate.referenceLinks.enabled": {
      "type": "string",
      "scope": 4,
      "markdownDescription": "Validate reference links in Markdown files, for example `[link][ref]`. Requires enabling `#markdown.validate.enabled#`.",
      "default": "warning",
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "source": {
        "id": "vscode.markdown-language-features",
        "displayName": "Markdown Language Features"
      },
      "defaultDefaultValue": "warning",
      "restricted": false
    },
    "markdown.validate.fragmentLinks.enabled": {
      "type": "string",
      "scope": 4,
      "markdownDescription": "Validate fragment links to headers in the current Markdown file, for example `[link](#header)`. Requires enabling `#markdown.validate.enabled#`.",
      "default": "warning",
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "source": {
        "id": "vscode.markdown-language-features",
        "displayName": "Markdown Language Features"
      },
      "defaultDefaultValue": "warning",
      "restricted": false
    },
    "markdown.validate.fileLinks.enabled": {
      "type": "string",
      "scope": 4,
      "markdownDescription": "Validate links to other files in Markdown files, for example `[link](/path/to/file.md)`. This checks that the target files exists. Requires enabling `#markdown.validate.enabled#`.",
      "default": "warning",
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "source": {
        "id": "vscode.markdown-language-features",
        "displayName": "Markdown Language Features"
      },
      "defaultDefaultValue": "warning",
      "restricted": false
    },
    "markdown.validate.fileLinks.markdownFragmentLinks": {
      "type": "string",
      "scope": 4,
      "markdownDescription": "Validate the fragment part of links to headers in other files in Markdown files, for example `[link](/path/to/file.md#header)`. Inherits the setting value from `#markdown.validate.fragmentLinks.enabled#` by default.",
      "default": "inherit",
      "enum": [
        "inherit",
        "ignore",
        "warning",
        "error"
      ],
      "source": {
        "id": "vscode.markdown-language-features",
        "displayName": "Markdown Language Features"
      },
      "defaultDefaultValue": "inherit",
      "restricted": false
    },
    "markdown.validate.ignoredLinks": {
      "type": "array",
      "scope": 4,
      "markdownDescription": "Configure links that should not be validated. For example adding `/about` would not validate the link `[about](/about)`, while the glob `/assets/**/*.svg` would let you skip validation for any link to `.svg` files under the `assets` directory.",
      "items": {
        "type": "string"
      },
      "source": {
        "id": "vscode.markdown-language-features",
        "displayName": "Markdown Language Features"
      },
      "default": [],
      "restricted": false
    },
    "markdown.validate.unusedLinkDefinitions.enabled": {
      "type": "string",
      "scope": 4,
      "markdownDescription": "Validate link definitions that are unused in the current file.",
      "default": "hint",
      "enum": [
        "ignore",
        "hint",
        "warning",
        "error"
      ],
      "source": {
        "id": "vscode.markdown-language-features",
        "displayName": "Markdown Language Features"
      },
      "defaultDefaultValue": "hint",
      "restricted": false
    },
    "markdown.validate.duplicateLinkDefinitions.enabled": {
      "type": "string",
      "scope": 4,
      "markdownDescription": "Validate duplicated definitions in the current file.",
      "default": "warning",
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "source": {
        "id": "vscode.markdown-language-features",
        "displayName": "Markdown Language Features"
      },
      "defaultDefaultValue": "warning",
      "restricted": false
    },
    "markdown.occurrencesHighlight.enabled": {
      "type": "boolean",
      "default": false,
      "description": "Enable highlighting link occurrences in the current document.",
      "scope": 4,
      "source": {
        "id": "vscode.markdown-language-features",
        "displayName": "Markdown Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "npm.autoDetect": {
      "type": "string",
      "enum": [
        "off",
        "on"
      ],
      "default": "on",
      "scope": 4,
      "description": "Controls whether npm scripts should be automatically detected.",
      "source": {
        "id": "vscode.npm",
        "displayName": "NPM support for VS Code"
      },
      "defaultDefaultValue": "on",
      "restricted": false
    },
    "npm.runSilent": {
      "type": "boolean",
      "default": false,
      "scope": 4,
      "markdownDescription": "Run npm commands with the `--silent` option.",
      "source": {
        "id": "vscode.npm",
        "displayName": "NPM support for VS Code"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "npm.packageManager": {
      "scope": 4,
      "type": "string",
      "enum": [
        "auto",
        "npm",
        "yarn",
        "pnpm"
      ],
      "enumDescriptions": [
        "Auto-detect which package manager to use for running scripts based on lock files and installed package managers.",
        "Use npm as the package manager for running scripts.",
        "Use yarn as the package manager for running scripts.",
        "Use pnpm as the package manager for running scripts."
      ],
      "default": "auto",
      "description": "The package manager used to run scripts.",
      "source": {
        "id": "vscode.npm",
        "displayName": "NPM support for VS Code"
      },
      "defaultDefaultValue": "auto",
      "restricted": false
    },
    "npm.exclude": {
      "type": [
        "string",
        "array"
      ],
      "items": {
        "type": "string"
      },
      "description": "Configure glob patterns for folders that should be excluded from automatic script detection.",
      "scope": 4,
      "source": {
        "id": "vscode.npm",
        "displayName": "NPM support for VS Code"
      },
      "default": "",
      "restricted": false
    },
    "npm.enableScriptExplorer": {
      "type": "boolean",
      "default": false,
      "scope": 4,
      "deprecationMessage": "The NPM Script Explorer is now available in 'Views' menu in the Explorer in all folders.",
      "description": "Enable an explorer view for npm scripts when there is no top-level 'package.json' file.",
      "source": {
        "id": "vscode.npm",
        "displayName": "NPM support for VS Code"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "npm.enableRunFromFolder": {
      "type": "boolean",
      "default": false,
      "scope": 4,
      "description": "Enable running npm scripts contained in a folder from the Explorer context menu.",
      "source": {
        "id": "vscode.npm",
        "displayName": "NPM support for VS Code"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "npm.scriptExplorerExclude": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "markdownDescription": "An array of regular expressions that indicate which scripts should be excluded from the NPM Scripts view.",
      "scope": 4,
      "default": [],
      "source": {
        "id": "vscode.npm",
        "displayName": "NPM support for VS Code"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "javascript.suggest.completeFunctionCalls": {
      "type": "boolean",
      "default": false,
      "description": "Complete functions with their parameter signature.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "typescript.suggest.completeFunctionCalls": {
      "type": "boolean",
      "default": false,
      "description": "Complete functions with their parameter signature.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "javascript.suggest.includeAutomaticOptionalChainCompletions": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable showing completions on potentially undefined values that insert an optional chain call. Requires strict null checks to be enabled.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescript.suggest.includeAutomaticOptionalChainCompletions": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable showing completions on potentially undefined values that insert an optional chain call. Requires strict null checks to be enabled.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescript.inlayHints.parameterNames.enabled": {
      "type": "string",
      "enum": [
        "none",
        "literals",
        "all"
      ],
      "enumDescriptions": [
        "Disable parameter name hints.",
        "Enable parameter name hints only for literal arguments.",
        "Enable parameter name hints for literal and non-literal arguments."
      ],
      "default": "none",
      "markdownDescription": "Enable/disable inlay hints for parameter names:\n```typescript\n\nparseInt(/* str: */ '123', /* radix: */ 8)\n \n```",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": "none",
      "restricted": false
    },
    "typescript.inlayHints.parameterNames.suppressWhenArgumentMatchesName": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Suppress parameter name hints on arguments whose text is identical to the parameter name.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescript.inlayHints.parameterTypes.enabled": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Enable/disable inlay hints for implicit parameter types:\n```typescript\n\nel.addEventListener('click', e /* :MouseEvent */ => ...)\n \n```",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "typescript.inlayHints.variableTypes.enabled": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Enable/disable inlay hints for implicit variable types:\n```typescript\n\nconst foo /* :number */ = Date.now();\n \n```",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "typescript.inlayHints.variableTypes.suppressWhenTypeMatchesName": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Suppress type hints on variables whose name is identical to the type name. Requires using TypeScript 4.8+ in the workspace.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescript.inlayHints.propertyDeclarationTypes.enabled": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Enable/disable inlay hints for implicit types on property declarations:\n```typescript\n\nclass Foo {\n\tprop /* :number */ = Date.now();\n}\n \n```",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "typescript.inlayHints.functionLikeReturnTypes.enabled": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Enable/disable inlay hints for implicit return types on function signatures:\n```typescript\n\nfunction foo() /* :number */ {\n\treturn Date.now();\n} \n \n```",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "typescript.inlayHints.enumMemberValues.enabled": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Enable/disable inlay hints for member values in enum declarations:\n```typescript\n\nenum MyValue {\n\tA /* = 0 */;\n\tB /* = 1 */;\n}\n \n```",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "javascript.inlayHints.parameterNames.enabled": {
      "type": "string",
      "enum": [
        "none",
        "literals",
        "all"
      ],
      "enumDescriptions": [
        "Disable parameter name hints.",
        "Enable parameter name hints only for literal arguments.",
        "Enable parameter name hints for literal and non-literal arguments."
      ],
      "default": "none",
      "markdownDescription": "Enable/disable inlay hints for parameter names:\n```typescript\n\nparseInt(/* str: */ '123', /* radix: */ 8)\n \n```",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": "none",
      "restricted": false
    },
    "javascript.inlayHints.parameterNames.suppressWhenArgumentMatchesName": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Suppress parameter name hints on arguments whose text is identical to the parameter name.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "javascript.inlayHints.parameterTypes.enabled": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Enable/disable inlay hints for implicit parameter types:\n```typescript\n\nel.addEventListener('click', e /* :MouseEvent */ => ...)\n \n```",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "javascript.inlayHints.variableTypes.enabled": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Enable/disable inlay hints for implicit variable types:\n```typescript\n\nconst foo /* :number */ = Date.now();\n \n```",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "javascript.inlayHints.variableTypes.suppressWhenTypeMatchesName": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Suppress type hints on variables whose name is identical to the type name. Requires using TypeScript 4.8+ in the workspace.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "javascript.inlayHints.propertyDeclarationTypes.enabled": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Enable/disable inlay hints for implicit types on property declarations:\n```typescript\n\nclass Foo {\n\tprop /* :number */ = Date.now();\n}\n \n```",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "javascript.inlayHints.functionLikeReturnTypes.enabled": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Enable/disable inlay hints for implicit return types on function signatures:\n```typescript\n\nfunction foo() /* :number */ {\n\treturn Date.now();\n} \n \n```",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "javascript.inlayHints.enumMemberValues.enabled": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Enable/disable inlay hints for member values in enum declarations:\n```typescript\n\nenum MyValue {\n\tA /* = 0 */;\n\tB /* = 1 */;\n}\n \n```",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "javascript.suggest.includeCompletionsForImportStatements": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable auto-import-style completions on partially-typed import statements.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescript.suggest.includeCompletionsForImportStatements": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable auto-import-style completions on partially-typed import statements.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescript.format.insertSpaceAfterCommaDelimiter": {
      "type": "boolean",
      "default": true,
      "description": "Defines space handling after a comma delimiter.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescript.format.insertSpaceAfterConstructor": {
      "type": "boolean",
      "default": false,
      "description": "Defines space handling after the constructor keyword.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "typescript.format.insertSpaceAfterSemicolonInForStatements": {
      "type": "boolean",
      "default": true,
      "description": "Defines space handling after a semicolon in a for statement.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescript.format.insertSpaceBeforeAndAfterBinaryOperators": {
      "type": "boolean",
      "default": true,
      "description": "Defines space handling after a binary operator.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescript.format.insertSpaceAfterKeywordsInControlFlowStatements": {
      "type": "boolean",
      "default": true,
      "description": "Defines space handling after keywords in a control flow statement.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescript.format.insertSpaceAfterFunctionKeywordForAnonymousFunctions": {
      "type": "boolean",
      "default": true,
      "description": "Defines space handling after function keyword for anonymous functions.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescript.format.insertSpaceBeforeFunctionParenthesis": {
      "type": "boolean",
      "default": false,
      "description": "Defines space handling before function argument parentheses.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis": {
      "type": "boolean",
      "default": false,
      "description": "Defines space handling after opening and before closing non-empty parenthesis.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets": {
      "type": "boolean",
      "default": false,
      "description": "Defines space handling after opening and before closing non-empty brackets.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces": {
      "type": "boolean",
      "default": true,
      "description": "Defines space handling after opening and before closing non-empty braces.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescript.format.insertSpaceAfterOpeningAndBeforeClosingEmptyBraces": {
      "type": "boolean",
      "default": true,
      "description": "Defines space handling after opening and before closing empty braces.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescript.format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces": {
      "type": "boolean",
      "default": false,
      "description": "Defines space handling after opening and before closing template string braces.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "typescript.format.insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces": {
      "type": "boolean",
      "default": false,
      "description": "Defines space handling after opening and before closing JSX expression braces.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "typescript.format.insertSpaceAfterTypeAssertion": {
      "type": "boolean",
      "default": false,
      "description": "Defines space handling after type assertions in TypeScript.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "typescript.format.placeOpenBraceOnNewLineForFunctions": {
      "type": "boolean",
      "default": false,
      "description": "Defines whether an open brace is put onto a new line for functions or not.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "typescript.format.placeOpenBraceOnNewLineForControlBlocks": {
      "type": "boolean",
      "default": false,
      "description": "Defines whether an open brace is put onto a new line for control blocks or not.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "typescript.format.semicolons": {
      "type": "string",
      "default": "ignore",
      "description": "Defines handling of optional semicolons.",
      "scope": 4,
      "enum": [
        "ignore",
        "insert",
        "remove"
      ],
      "enumDescriptions": [
        "Don't insert or remove any semicolons.",
        "Insert semicolons at statement ends.",
        "Remove unnecessary semicolons."
      ],
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "javascript.format.insertSpaceAfterCommaDelimiter": {
      "type": "boolean",
      "default": true,
      "description": "Defines space handling after a comma delimiter.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "javascript.format.insertSpaceAfterConstructor": {
      "type": "boolean",
      "default": false,
      "description": "Defines space handling after the constructor keyword.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "javascript.format.insertSpaceAfterSemicolonInForStatements": {
      "type": "boolean",
      "default": true,
      "description": "Defines space handling after a semicolon in a for statement.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "javascript.format.insertSpaceBeforeAndAfterBinaryOperators": {
      "type": "boolean",
      "default": true,
      "description": "Defines space handling after a binary operator.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "javascript.format.insertSpaceAfterKeywordsInControlFlowStatements": {
      "type": "boolean",
      "default": true,
      "description": "Defines space handling after keywords in a control flow statement.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "javascript.format.insertSpaceAfterFunctionKeywordForAnonymousFunctions": {
      "type": "boolean",
      "default": true,
      "description": "Defines space handling after function keyword for anonymous functions.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "javascript.format.insertSpaceBeforeFunctionParenthesis": {
      "type": "boolean",
      "default": false,
      "description": "Defines space handling before function argument parentheses.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis": {
      "type": "boolean",
      "default": false,
      "description": "Defines space handling after opening and before closing non-empty parenthesis.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets": {
      "type": "boolean",
      "default": false,
      "description": "Defines space handling after opening and before closing non-empty brackets.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces": {
      "type": "boolean",
      "default": true,
      "description": "Defines space handling after opening and before closing non-empty braces.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "javascript.format.insertSpaceAfterOpeningAndBeforeClosingEmptyBraces": {
      "type": "boolean",
      "default": true,
      "description": "Defines space handling after opening and before closing empty braces.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "javascript.format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces": {
      "type": "boolean",
      "default": false,
      "description": "Defines space handling after opening and before closing template string braces.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "javascript.format.insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces": {
      "type": "boolean",
      "default": false,
      "description": "Defines space handling after opening and before closing JSX expression braces.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "javascript.format.placeOpenBraceOnNewLineForFunctions": {
      "type": "boolean",
      "default": false,
      "description": "Defines whether an open brace is put onto a new line for functions or not.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "javascript.format.placeOpenBraceOnNewLineForControlBlocks": {
      "type": "boolean",
      "default": false,
      "description": "Defines whether an open brace is put onto a new line for control blocks or not.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "javascript.format.semicolons": {
      "type": "string",
      "default": "ignore",
      "description": "Defines handling of optional semicolons.",
      "scope": 4,
      "enum": [
        "ignore",
        "insert",
        "remove"
      ],
      "enumDescriptions": [
        "Don't insert or remove any semicolons.",
        "Insert semicolons at statement ends.",
        "Remove unnecessary semicolons."
      ],
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "javascript.suggest.names": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Enable/disable including unique names from the file in JavaScript suggestions. Note that name suggestions are always disabled in JavaScript code that is semantically checked using `@ts-check` or `checkJs`.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "javascript.suggest.paths": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable suggestions for paths in import statements and require calls.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescript.suggest.paths": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable suggestions for paths in import statements and require calls.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "javascript.suggest.autoImports": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable auto import suggestions.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescript.suggest.autoImports": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable auto import suggestions.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "javascript.suggest.completeJSDocs": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable suggestion to complete JSDoc comments.",
      "scope": 5,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescript.suggest.completeJSDocs": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable suggestion to complete JSDoc comments.",
      "scope": 5,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "javascript.suggest.jsdoc.generateReturns": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Enable/disable generating `@returns` annotations for JSDoc templates.",
      "scope": 5,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescript.suggest.jsdoc.generateReturns": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Enable/disable generating `@returns` annotations for JSDoc templates.",
      "scope": 5,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "javascript.suggestionActions.enabled": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable suggestion diagnostics for JavaScript files in the editor.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescript.suggestionActions.enabled": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable suggestion diagnostics for TypeScript files in the editor.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "javascript.preferences.quoteStyle": {
      "type": "string",
      "enum": [
        "auto",
        "single",
        "double"
      ],
      "default": "auto",
      "markdownDescription": "Preferred quote style to use for Quick Fixes.",
      "markdownEnumDescriptions": [
        "Infer quote type from existing code",
        "Always use single quotes: `'`",
        "Always use double quotes: `\"`"
      ],
      "scope": 5,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": "auto",
      "restricted": false
    },
    "typescript.preferences.quoteStyle": {
      "type": "string",
      "enum": [
        "auto",
        "single",
        "double"
      ],
      "default": "auto",
      "markdownDescription": "Preferred quote style to use for Quick Fixes.",
      "markdownEnumDescriptions": [
        "Infer quote type from existing code",
        "Always use single quotes: `'`",
        "Always use double quotes: `\"`"
      ],
      "scope": 5,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": "auto",
      "restricted": false
    },
    "javascript.preferences.importModuleSpecifier": {
      "type": "string",
      "enum": [
        "shortest",
        "relative",
        "non-relative",
        "project-relative"
      ],
      "markdownEnumDescriptions": [
        "Prefers a non-relative import only if one is available that has fewer path segments than a relative import.",
        "Prefers a relative path to the imported file location.",
        "Prefers a non-relative import based on the `baseUrl` or `paths` configured in your `jsconfig.json` / `tsconfig.json`.",
        "Prefers a non-relative import only if the relative import path would leave the package or project directory."
      ],
      "default": "shortest",
      "description": "Preferred path style for auto imports.",
      "scope": 5,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": "shortest",
      "restricted": false
    },
    "typescript.preferences.importModuleSpecifier": {
      "type": "string",
      "enum": [
        "shortest",
        "relative",
        "non-relative",
        "project-relative"
      ],
      "markdownEnumDescriptions": [
        "Prefers a non-relative import only if one is available that has fewer path segments than a relative import.",
        "Prefers a relative path to the imported file location.",
        "Prefers a non-relative import based on the `baseUrl` or `paths` configured in your `jsconfig.json` / `tsconfig.json`.",
        "Prefers a non-relative import only if the relative import path would leave the package or project directory."
      ],
      "default": "shortest",
      "description": "Preferred path style for auto imports.",
      "scope": 5,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": "shortest",
      "restricted": false
    },
    "javascript.preferences.importModuleSpecifierEnding": {
      "type": "string",
      "enum": [
        "auto",
        "minimal",
        "index",
        "js"
      ],
      "markdownEnumDescriptions": [
        "Use project settings to select a default.",
        "Shorten `./component/index.js` to `./component`.",
        "Shorten `./component/index.js` to `./component/index`.",
        "Do not shorten path endings; include the `.js` extension."
      ],
      "default": "auto",
      "description": "Preferred path ending for auto imports.",
      "scope": 5,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": "auto",
      "restricted": false
    },
    "typescript.preferences.importModuleSpecifierEnding": {
      "type": "string",
      "enum": [
        "auto",
        "minimal",
        "index",
        "js"
      ],
      "markdownEnumDescriptions": [
        "Use project settings to select a default.",
        "Shorten `./component/index.js` to `./component`.",
        "Shorten `./component/index.js` to `./component/index`.",
        "Do not shorten path endings; include the `.js` extension."
      ],
      "default": "auto",
      "description": "Preferred path ending for auto imports.",
      "scope": 5,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": "auto",
      "restricted": false
    },
    "javascript.preferences.jsxAttributeCompletionStyle": {
      "type": "string",
      "enum": [
        "auto",
        "braces",
        "none"
      ],
      "markdownEnumDescriptions": [
        "Insert `={}` or `=\"\"` after attribute names based on the prop type. See `javascript.preferences.quoteStyle` to control the type of quotes used for string attributes.",
        "Insert `={}` after attribute names.",
        "Only insert attribute names."
      ],
      "default": "auto",
      "description": "Preferred style for JSX attribute completions.",
      "scope": 5,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": "auto",
      "restricted": false
    },
    "typescript.preferences.jsxAttributeCompletionStyle": {
      "type": "string",
      "enum": [
        "auto",
        "braces",
        "none"
      ],
      "markdownEnumDescriptions": [
        "Insert `={}` or `=\"\"` after attribute names based on the prop type. See `typescript.preferences.quoteStyle` to control the type of quotes used for string attributes.",
        "Insert `={}` after attribute names.",
        "Only insert attribute names."
      ],
      "default": "auto",
      "description": "Preferred style for JSX attribute completions.",
      "scope": 5,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": "auto",
      "restricted": false
    },
    "typescript.preferences.autoImportFileExcludePatterns": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "markdownDescription": "Specify glob patterns of files to exclude from auto imports. Requires using TypeScript 4.8 or newer in the workspace.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "default": [],
      "restricted": false
    },
    "javascript.preferences.autoImportFileExcludePatterns": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "markdownDescription": "Specify glob patterns of files to exclude from auto imports. Requires using TypeScript 4.8 or newer in the workspace.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "default": [],
      "restricted": false
    },
    "javascript.preferences.renameShorthandProperties": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable introducing aliases for object shorthand properties during renames.",
      "deprecationMessage": "The setting 'typescript.preferences.renameShorthandProperties' has been deprecated in favor of 'typescript.preferences.useAliasesForRenames'",
      "scope": 5,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescript.preferences.renameShorthandProperties": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable introducing aliases for object shorthand properties during renames.",
      "deprecationMessage": "The setting 'typescript.preferences.renameShorthandProperties' has been deprecated in favor of 'typescript.preferences.useAliasesForRenames'",
      "scope": 5,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "javascript.preferences.useAliasesForRenames": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable introducing aliases for object shorthand properties during renames.",
      "scope": 5,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescript.preferences.useAliasesForRenames": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable introducing aliases for object shorthand properties during renames.",
      "scope": 5,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescript.updateImportsOnFileMove.enabled": {
      "type": "string",
      "enum": [
        "prompt",
        "always",
        "never"
      ],
      "markdownEnumDescriptions": [
        "Prompt on each rename.",
        "Always update paths automatically.",
        "Never rename paths and don't prompt."
      ],
      "default": "prompt",
      "description": "Enable/disable automatic updating of import paths when you rename or move a file in VS Code.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": "prompt",
      "restricted": false
    },
    "javascript.updateImportsOnFileMove.enabled": {
      "type": "string",
      "enum": [
        "prompt",
        "always",
        "never"
      ],
      "markdownEnumDescriptions": [
        "Prompt on each rename.",
        "Always update paths automatically.",
        "Never rename paths and don't prompt."
      ],
      "default": "prompt",
      "description": "Enable/disable automatic updating of import paths when you rename or move a file in VS Code.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": "prompt",
      "restricted": false
    },
    "typescript.autoClosingTags": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable automatic closing of JSX tags.",
      "scope": 5,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "javascript.autoClosingTags": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable automatic closing of JSX tags.",
      "scope": 5,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "javascript.suggest.enabled": {
      "type": "boolean",
      "default": true,
      "description": "Enabled/disable autocomplete suggestions.",
      "scope": 5,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescript.suggest.enabled": {
      "type": "boolean",
      "default": true,
      "description": "Enabled/disable autocomplete suggestions.",
      "scope": 5,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "javascript.suggest.classMemberSnippets.enabled": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable snippet completions for class members.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescript.suggest.classMemberSnippets.enabled": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable snippet completions for class members.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescript.suggest.objectLiteralMethodSnippets.enabled": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable snippet completions for methods in object literals. Requires using TypeScript 4.7+ in the workspace.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svgPreview.autoOpen": {
      "type": "boolean",
      "default": true,
      "description": "Automatically open the preview when an svg file is opened.",
      "scope": 4,
      "source": {
        "id": "SimonSiefke.svg-preview",
        "displayName": "Svg Preview"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svgPreview.scaleToFit": {
      "type": "boolean",
      "default": true,
      "description": "Whether or not the svg should be scaled to fit the viewport or keep its original size",
      "scope": 4,
      "source": {
        "id": "SimonSiefke.svg-preview",
        "displayName": "Svg Preview"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svgPreview.style": {
      "type": "object",
      "description": "Custom style for the preview.",
      "additionalProperties": false,
      "default": {},
      "properties": {
        "html": {
          "type": "object",
          "description": "Custom style for the html element.",
          "properties": {
            "background": {
              "type": "string"
            },
            "background-position": {
              "type": "string"
            },
            "background-image": {
              "type": "string"
            },
            "background-size": {
              "type": "string"
            },
            "background-repeat": {
              "type": "string",
              "enum": [
                "repeat",
                "space",
                "round",
                "repeat-y",
                "repeat-x",
                "repeat no-repeat",
                "no-repeat"
              ]
            },
            "margin": {
              "type": "string"
            },
            "padding": {
              "type": "string"
            }
          }
        },
        "img": {
          "type": "object",
          "description": "Custom style for the image.",
          "properties": {
            "border": {
              "type": "string"
            },
            "margin": {
              "type": "string"
            },
            "padding": {
              "type": "string"
            }
          }
        }
      },
      "scope": 4,
      "source": {
        "id": "SimonSiefke.svg-preview",
        "displayName": "Svg Preview"
      },
      "defaultDefaultValue": {},
      "restricted": false
    },
    "workbench.editorLargeFileConfirmation": {
      "type": "number",
      "default": 10,
      "minimum": 1,
      "scope": 4,
      "markdownDescription": "Controls the minimum size of a file in MB before asking for confirmation when opening in the editor. Note that this setting may not apply to all editor types and environments.",
      "defaultDefaultValue": 10,
      "restricted": false
    },
    "tailwindCSS.suggestions": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Enable autocomplete suggestions.",
      "scope": 5,
      "source": {
        "id": "bradlc.vscode-tailwindcss",
        "displayName": "Tailwind CSS IntelliSense"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "tailwindCSS.hovers": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Enable hovers.",
      "scope": 5,
      "source": {
        "id": "bradlc.vscode-tailwindcss",
        "displayName": "Tailwind CSS IntelliSense"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "tailwindCSS.codeActions": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Enable code actions.",
      "scope": 5,
      "source": {
        "id": "bradlc.vscode-tailwindcss",
        "displayName": "Tailwind CSS IntelliSense"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "tailwindCSS.colorDecorators": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Controls whether the editor should render inline color decorators for Tailwind CSS classes and helper functions.",
      "scope": 5,
      "source": {
        "id": "bradlc.vscode-tailwindcss",
        "displayName": "Tailwind CSS IntelliSense"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "tailwindCSS.validate": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Enable linting. Rules can be configured individually using the `tailwindcss.lint.*` settings",
      "scope": 5,
      "source": {
        "id": "bradlc.vscode-tailwindcss",
        "displayName": "Tailwind CSS IntelliSense"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "tailwindCSS.lint.cssConflict": {
      "type": "string",
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "warning",
      "markdownDescription": "Class names on the same HTML element which apply the same CSS property or properties",
      "scope": 5,
      "source": {
        "id": "bradlc.vscode-tailwindcss",
        "displayName": "Tailwind CSS IntelliSense"
      },
      "defaultDefaultValue": "warning",
      "restricted": false
    },
    "tailwindCSS.lint.invalidApply": {
      "type": "string",
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "error",
      "markdownDescription": "Unsupported use of the [`@apply` directive](https://tailwindcss.com/docs/functions-and-directives/#apply)",
      "scope": 5,
      "source": {
        "id": "bradlc.vscode-tailwindcss",
        "displayName": "Tailwind CSS IntelliSense"
      },
      "defaultDefaultValue": "error",
      "restricted": false
    },
    "tailwindCSS.lint.invalidScreen": {
      "type": "string",
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "error",
      "markdownDescription": "Unknown screen name used with the [`@screen` directive](https://tailwindcss.com/docs/functions-and-directives/#screen)",
      "scope": 5,
      "source": {
        "id": "bradlc.vscode-tailwindcss",
        "displayName": "Tailwind CSS IntelliSense"
      },
      "defaultDefaultValue": "error",
      "restricted": false
    },
    "tailwindCSS.lint.invalidVariant": {
      "type": "string",
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "error",
      "markdownDescription": "Unknown variant name used with the [`@variants` directive](https://tailwindcss.com/docs/functions-and-directives/#variants)",
      "scope": 5,
      "source": {
        "id": "bradlc.vscode-tailwindcss",
        "displayName": "Tailwind CSS IntelliSense"
      },
      "defaultDefaultValue": "error",
      "restricted": false
    },
    "tailwindCSS.lint.invalidConfigPath": {
      "type": "string",
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "error",
      "markdownDescription": "Unknown or invalid path used with the [`theme` helper](https://tailwindcss.com/docs/functions-and-directives/#theme)",
      "scope": 5,
      "source": {
        "id": "bradlc.vscode-tailwindcss",
        "displayName": "Tailwind CSS IntelliSense"
      },
      "defaultDefaultValue": "error",
      "restricted": false
    },
    "tailwindCSS.lint.invalidTailwindDirective": {
      "type": "string",
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "error",
      "markdownDescription": "Unknown value used with the [`@tailwind` directive](https://tailwindcss.com/docs/functions-and-directives/#tailwind)",
      "scope": 5,
      "source": {
        "id": "bradlc.vscode-tailwindcss",
        "displayName": "Tailwind CSS IntelliSense"
      },
      "defaultDefaultValue": "error",
      "restricted": false
    },
    "tailwindCSS.lint.recommendedVariantOrder": {
      "type": "string",
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "warning",
      "markdownDescription": "Class variants not in the recommended order (applies in [JIT mode](https://tailwindcss.com/docs/just-in-time-mode) only)",
      "scope": 5,
      "source": {
        "id": "bradlc.vscode-tailwindcss",
        "displayName": "Tailwind CSS IntelliSense"
      },
      "defaultDefaultValue": "warning",
      "restricted": false
    },
    "tailwindCSS.experimental.classRegex": {
      "type": "array",
      "scope": 5,
      "source": {
        "id": "bradlc.vscode-tailwindcss",
        "displayName": "Tailwind CSS IntelliSense"
      },
      "default": [],
      "restricted": false
    },
    "githubPullRequests.queries": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string",
            "description": "The label to display for the query in the Pull Requests tree"
          },
          "query": {
            "type": "string",
            "description": "The query used for searching pull requests."
          }
        }
      },
      "scope": 4,
      "markdownDescription": "Specifies what queries should be used in the GitHub Pull Requests tree. All queries are made against **the currently opened repos**. Each query object has a `label` that will be shown in the tree and a search `query` using [GitHub search syntax](https://help.github.com/en/articles/understanding-the-search-syntax). The variable `${user}` can be used to specify the logged in user within a search. By default these queries define the categories \"Waiting For My Review\", \"Assigned To Me\" and \"Created By Me\". If you want to preserve these, make sure they are still in the array when you modify the setting.",
      "default": [
        {
          "label": "Waiting For My Review",
          "query": "is:open review-requested:${user}"
        },
        {
          "label": "Assigned To Me",
          "query": "is:open assignee:${user}"
        },
        {
          "label": "Created By Me",
          "query": "is:open author:${user}"
        }
      ],
      "source": {
        "id": "GitHub.vscode-pull-request-github",
        "displayName": "GitHub Pull Requests and Issues"
      },
      "defaultDefaultValue": [
        {
          "label": "Waiting For My Review",
          "query": "is:open review-requested:${user}"
        },
        {
          "label": "Assigned To Me",
          "query": "is:open assignee:${user}"
        },
        {
          "label": "Created By Me",
          "query": "is:open author:${user}"
        }
      ],
      "restricted": false
    },
    "githubIssues.queries": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string",
            "description": "The label to display for the query in the Issues tree."
          },
          "query": {
            "type": "string",
            "markdownDescription": "The search query using [GitHub search syntax](https://help.github.com/en/articles/understanding-the-search-syntax) with variables. The variable `${user}` can be used to specify the logged in user within a search. `${owner}` and `${repository}` can be used to specify the repository by using `repo:${owner}/${repository}`."
          }
        }
      },
      "scope": 4,
      "markdownDescription": "Specifies what queries should be used in the GitHub issues tree using [GitHub search syntax](https://help.github.com/en/articles/understanding-the-search-syntax) with variables. The first query listed will be expanded in the Issues view. The \"default\" query includes issues assigned to you by Milestone. If you want to preserve these, make sure they are still in the array when you modify the setting.",
      "default": [
        {
          "label": "My Issues",
          "query": "default"
        },
        {
          "label": "Created Issues",
          "query": "author:${user} state:open repo:${owner}/${repository} sort:created-desc"
        },
        {
          "label": "Recent Issues",
          "query": "state:open repo:${owner}/${repository} sort:updated-desc"
        }
      ],
      "source": {
        "id": "GitHub.vscode-pull-request-github",
        "displayName": "GitHub Pull Requests and Issues"
      },
      "defaultDefaultValue": [
        {
          "label": "My Issues",
          "query": "default"
        },
        {
          "label": "Created Issues",
          "query": "author:${user} state:open repo:${owner}/${repository} sort:created-desc"
        },
        {
          "label": "Recent Issues",
          "query": "state:open repo:${owner}/${repository} sort:updated-desc"
        }
      ],
      "restricted": false
    },
    "python.autoComplete.extraPaths": {
      "default": [],
      "description": "List of paths to libraries and the like that need to be imported by auto complete engine. E.g. when using Google App SDK, the paths are not in system path, hence need to be added into this list.",
      "scope": 4,
      "type": "array",
      "uniqueItems": true,
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "python.envFile": {
      "default": "${workspaceFolder}/.env",
      "description": "Absolute path to a file containing environment variable definitions.",
      "scope": 4,
      "type": "string",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": "${workspaceFolder}/.env",
      "restricted": false
    },
    "python.formatting.autopep8Args": {
      "default": [],
      "description": "Arguments passed in. Each argument is a separate item in the array.",
      "items": {
        "type": "string"
      },
      "scope": 4,
      "type": "array",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "python.formatting.blackArgs": {
      "default": [],
      "description": "Arguments passed in. Each argument is a separate item in the array.",
      "items": {
        "type": "string"
      },
      "scope": 4,
      "type": "array",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "python.formatting.provider": {
      "default": "autopep8",
      "description": "Provider for formatting. Possible options include 'autopep8', 'black', and 'yapf'.",
      "enum": [
        "autopep8",
        "black",
        "none",
        "yapf"
      ],
      "scope": 4,
      "type": "string",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": "autopep8",
      "restricted": false
    },
    "python.formatting.yapfArgs": {
      "default": [],
      "description": "Arguments passed in. Each argument is a separate item in the array.",
      "items": {
        "type": "string"
      },
      "scope": 4,
      "type": "array",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "python.globalModuleInstallation": {
      "default": false,
      "description": "Whether to install Python modules globally when not using an environment.",
      "scope": 4,
      "type": "boolean",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "python.linting.banditArgs": {
      "default": [],
      "description": "Arguments passed in. Each argument is a separate item in the array.",
      "items": {
        "type": "string"
      },
      "scope": 4,
      "type": "array",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "python.linting.banditEnabled": {
      "default": false,
      "description": "Whether to lint Python files using bandit.",
      "scope": 4,
      "type": "boolean",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "python.linting.cwd": {
      "default": null,
      "description": "Optional working directory for linters.",
      "scope": 4,
      "type": "string",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "python.linting.enabled": {
      "default": true,
      "description": "Whether to lint Python files.",
      "scope": 4,
      "type": "boolean",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "python.linting.flake8Args": {
      "default": [],
      "description": "Arguments passed in. Each argument is a separate item in the array.",
      "items": {
        "type": "string"
      },
      "scope": 4,
      "type": "array",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "python.linting.flake8CategorySeverity.E": {
      "default": "Error",
      "description": "Severity of Flake8 message type 'E'.",
      "enum": [
        "Error",
        "Hint",
        "Information",
        "Warning"
      ],
      "scope": 4,
      "type": "string",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": "Error",
      "restricted": false
    },
    "python.linting.flake8CategorySeverity.F": {
      "default": "Error",
      "description": "Severity of Flake8 message type 'F'.",
      "enum": [
        "Error",
        "Hint",
        "Information",
        "Warning"
      ],
      "scope": 4,
      "type": "string",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": "Error",
      "restricted": false
    },
    "python.linting.flake8CategorySeverity.W": {
      "default": "Warning",
      "description": "Severity of Flake8 message type 'W'.",
      "enum": [
        "Error",
        "Hint",
        "Information",
        "Warning"
      ],
      "scope": 4,
      "type": "string",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": "Warning",
      "restricted": false
    },
    "python.linting.flake8Enabled": {
      "default": false,
      "description": "Whether to lint Python files using flake8.",
      "scope": 4,
      "type": "boolean",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "python.linting.ignorePatterns": {
      "default": [
        "**/site-packages/**/*.py",
        ".vscode/*.py"
      ],
      "description": "Patterns used to exclude files or folders from being linted.",
      "items": {
        "type": "string"
      },
      "scope": 4,
      "type": "array",
      "uniqueItems": true,
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": [
        "**/site-packages/**/*.py",
        ".vscode/*.py"
      ],
      "restricted": false
    },
    "python.linting.lintOnSave": {
      "default": true,
      "description": "Whether to lint Python files when saved.",
      "scope": 4,
      "type": "boolean",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "python.linting.maxNumberOfProblems": {
      "default": 100,
      "description": "Controls the maximum number of problems produced by the server.",
      "scope": 4,
      "type": "number",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": 100,
      "restricted": false
    },
    "python.linting.mypyArgs": {
      "default": [
        "--follow-imports=silent",
        "--ignore-missing-imports",
        "--show-column-numbers",
        "--no-pretty"
      ],
      "description": "Arguments passed in. Each argument is a separate item in the array.",
      "items": {
        "type": "string"
      },
      "scope": 4,
      "type": "array",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": [
        "--follow-imports=silent",
        "--ignore-missing-imports",
        "--show-column-numbers",
        "--no-pretty"
      ],
      "restricted": false
    },
    "python.linting.mypyCategorySeverity.error": {
      "default": "Error",
      "description": "Severity of Mypy message type 'Error'.",
      "enum": [
        "Error",
        "Hint",
        "Information",
        "Warning"
      ],
      "scope": 4,
      "type": "string",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": "Error",
      "restricted": false
    },
    "python.linting.mypyCategorySeverity.note": {
      "default": "Information",
      "description": "%python.linting.mypyCategorySeverity.note.description%.",
      "enum": [
        "Error",
        "Hint",
        "Information",
        "Warning"
      ],
      "scope": 4,
      "type": "string",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": "Information",
      "restricted": false
    },
    "python.linting.mypyEnabled": {
      "default": false,
      "description": "Whether to lint Python files using mypy.",
      "scope": 4,
      "type": "boolean",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "python.linting.prospectorArgs": {
      "default": [],
      "description": "Arguments passed in. Each argument is a separate item in the array.",
      "items": {
        "type": "string"
      },
      "scope": 4,
      "type": "array",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "python.linting.prospectorEnabled": {
      "default": false,
      "description": "Whether to lint Python files using prospector.",
      "scope": 4,
      "type": "boolean",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "python.linting.pycodestyleArgs": {
      "default": [],
      "description": "Arguments passed in. Each argument is a separate item in the array.",
      "items": {
        "type": "string"
      },
      "scope": 4,
      "type": "array",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "python.linting.pycodestyleCategorySeverity.E": {
      "default": "Error",
      "description": "Severity of pycodestyle message type 'E'.",
      "enum": [
        "Error",
        "Hint",
        "Information",
        "Warning"
      ],
      "scope": 4,
      "type": "string",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": "Error",
      "restricted": false
    },
    "python.linting.pycodestyleCategorySeverity.W": {
      "default": "Warning",
      "description": "Severity of pycodestyle message type 'W'.",
      "enum": [
        "Error",
        "Hint",
        "Information",
        "Warning"
      ],
      "scope": 4,
      "type": "string",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": "Warning",
      "restricted": false
    },
    "python.linting.pycodestyleEnabled": {
      "default": false,
      "description": "Whether to lint Python files using pycodestyle.",
      "scope": 4,
      "type": "boolean",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "python.linting.pydocstyleArgs": {
      "default": [],
      "description": "Arguments passed in. Each argument is a separate item in the array.",
      "items": {
        "type": "string"
      },
      "scope": 4,
      "type": "array",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "python.linting.pydocstyleEnabled": {
      "default": false,
      "description": "Whether to lint Python files using pydocstyle.",
      "scope": 4,
      "type": "boolean",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "python.linting.pylamaArgs": {
      "default": [],
      "description": "Arguments passed in. Each argument is a separate item in the array.",
      "items": {
        "type": "string"
      },
      "scope": 4,
      "type": "array",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "python.linting.pylamaEnabled": {
      "default": false,
      "description": "Whether to lint Python files using pylama.",
      "scope": 4,
      "type": "boolean",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "python.linting.pylintArgs": {
      "default": [],
      "description": "Arguments passed in. Each argument is a separate item in the array.",
      "items": {
        "type": "string"
      },
      "scope": 4,
      "type": "array",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "python.linting.pylintCategorySeverity.convention": {
      "default": "Information",
      "description": "Severity of Pylint message type 'Convention/C'.",
      "enum": [
        "Error",
        "Hint",
        "Information",
        "Warning"
      ],
      "scope": 4,
      "type": "string",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": "Information",
      "restricted": false
    },
    "python.linting.pylintCategorySeverity.error": {
      "default": "Error",
      "description": "Severity of Pylint message type 'Error/E'.",
      "enum": [
        "Error",
        "Hint",
        "Information",
        "Warning"
      ],
      "scope": 4,
      "type": "string",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": "Error",
      "restricted": false
    },
    "python.linting.pylintCategorySeverity.fatal": {
      "default": "Error",
      "description": "Severity of Pylint message type 'Error/F'.",
      "enum": [
        "Error",
        "Hint",
        "Information",
        "Warning"
      ],
      "scope": 4,
      "type": "string",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": "Error",
      "restricted": false
    },
    "python.linting.pylintCategorySeverity.refactor": {
      "default": "Hint",
      "description": "Severity of Pylint message type 'Refactor/R'.",
      "enum": [
        "Error",
        "Hint",
        "Information",
        "Warning"
      ],
      "scope": 4,
      "type": "string",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": "Hint",
      "restricted": false
    },
    "python.linting.pylintCategorySeverity.warning": {
      "default": "Warning",
      "description": "Severity of Pylint message type 'Warning/W'.",
      "enum": [
        "Error",
        "Hint",
        "Information",
        "Warning"
      ],
      "scope": 4,
      "type": "string",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": "Warning",
      "restricted": false
    },
    "python.linting.pylintEnabled": {
      "default": false,
      "description": "Whether to lint Python files using pylint.",
      "scope": 4,
      "type": "boolean",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "python.sortImports.args": {
      "default": [],
      "description": "Arguments passed in. Each argument is a separate item in the array.",
      "items": {
        "type": "string"
      },
      "scope": 4,
      "type": "array",
      "deprecationMessage": "This setting will be removed soon. Use 'isort.args' instead.",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "python.tensorBoard.logDirectory": {
      "default": "",
      "description": "Set this setting to your preferred TensorBoard log directory to skip log directory prompt when starting TensorBoard.",
      "scope": 4,
      "type": "string",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": "",
      "restricted": false
    },
    "python.terminal.activateEnvInCurrentTerminal": {
      "default": false,
      "description": "Activate Python Environment in the current Terminal on load of the Extension.",
      "scope": 4,
      "type": "boolean",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "python.terminal.activateEnvironment": {
      "default": true,
      "description": "Activate Python Environment in Terminal created using the Extension.",
      "scope": 4,
      "type": "boolean",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "python.terminal.executeInFileDir": {
      "default": false,
      "description": "When executing a file in the terminal, whether to use execute in the file's directory, instead of the current open folder.",
      "scope": 4,
      "type": "boolean",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "python.terminal.focusAfterLaunch": {
      "default": false,
      "description": "When launching a python terminal, whether to focus the cursor on the terminal.",
      "scope": 4,
      "type": "boolean",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "python.terminal.launchArgs": {
      "default": [],
      "description": "Python launch arguments to use when executing a file in the terminal.",
      "scope": 4,
      "type": "array",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "python.testing.autoTestDiscoverOnSaveEnabled": {
      "default": true,
      "description": "Enable auto run test discovery when saving a test file.",
      "scope": 4,
      "type": "boolean",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "python.testing.cwd": {
      "default": null,
      "description": "Optional working directory for tests.",
      "scope": 4,
      "type": "string",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "python.testing.debugPort": {
      "default": 3000,
      "description": "Port number used for debugging of tests.",
      "scope": 4,
      "type": "number",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": 3000,
      "restricted": false
    },
    "python.testing.promptToConfigure": {
      "default": true,
      "description": "Prompt to configure a test framework if potential tests directories are discovered.",
      "scope": 4,
      "type": "boolean",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "python.testing.pytestArgs": {
      "default": [],
      "description": "Arguments passed in. Each argument is a separate item in the array.",
      "items": {
        "type": "string"
      },
      "scope": 4,
      "type": "array",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "python.testing.pytestEnabled": {
      "default": false,
      "description": "Enable testing using pytest.",
      "scope": 4,
      "type": "boolean",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "python.testing.unittestArgs": {
      "default": [
        "-v",
        "-s",
        ".",
        "-p",
        "*test*.py"
      ],
      "description": "Arguments passed in. Each argument is a separate item in the array.",
      "items": {
        "type": "string"
      },
      "scope": 4,
      "type": "array",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": [
        "-v",
        "-s",
        ".",
        "-p",
        "*test*.py"
      ],
      "restricted": false
    },
    "python.testing.unittestEnabled": {
      "default": false,
      "description": "Enable testing using unittest.",
      "scope": 4,
      "type": "boolean",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "python.analysis.inlayHints.variableTypes": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Enable/disable inlay hints for variable types:\n```python\nfoo ' :list[str] ' = [\"a\"]\n \n```\n",
      "scope": 4,
      "source": {
        "id": "ms-python.vscode-pylance",
        "displayName": "Pylance"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "python.analysis.inlayHints.functionReturnTypes": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Enable/disable inlay hints for function return types:\n```python\ndef foo(x:int) ' -> int ':\n\treturn x\n```\n",
      "scope": 4,
      "source": {
        "id": "ms-python.vscode-pylance",
        "displayName": "Pylance"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "python.analysis.inlayHints.pytestParameters": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Enable/disable inlay hints for pytest function parameters:\n```python\ndef test_foo(my_fixture: 'str'):\n\tassert(myfixture == 'foo')\n```\n",
      "scope": 4,
      "source": {
        "id": "ms-python.vscode-pylance",
        "displayName": "Pylance"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "python.analysis.completeFunctionParens": {
      "type": "boolean",
      "default": false,
      "description": "Add parentheses to function completions.",
      "scope": 4,
      "source": {
        "id": "ms-python.vscode-pylance",
        "displayName": "Pylance"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "python.analysis.autoImportCompletions": {
      "type": "boolean",
      "default": false,
      "description": "Offer auto-import completions.",
      "scope": 4,
      "source": {
        "id": "ms-python.vscode-pylance",
        "displayName": "Pylance"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "python.analysis.autoImportUserSymbols": {
      "type": "boolean",
      "default": false,
      "description": "Offer user symbols in auto-import completions.",
      "scope": 4,
      "tags": [
        "experimental"
      ],
      "source": {
        "id": "ms-python.vscode-pylance",
        "displayName": "Pylance"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "python.analysis.autoSearchPaths": {
      "type": "boolean",
      "default": true,
      "description": "Automatically add common search paths like 'src'.",
      "scope": 4,
      "source": {
        "id": "ms-python.vscode-pylance",
        "displayName": "Pylance"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "python.analysis.stubPath": {
      "type": "string",
      "default": "typings",
      "description": "Path to directory containing custom type stub files.",
      "scope": 4,
      "source": {
        "id": "ms-python.vscode-pylance",
        "displayName": "Pylance"
      },
      "defaultDefaultValue": "typings",
      "restricted": false
    },
    "python.analysis.diagnosticMode": {
      "type": "string",
      "default": "openFilesOnly",
      "description": "Analysis mode for diagnostics.",
      "enum": [
        "openFilesOnly",
        "workspace"
      ],
      "enumDescriptions": [
        "Analyzes and reports errors on only open files.",
        "Analyzes and reports errors on all files in the workspace."
      ],
      "scope": 4,
      "source": {
        "id": "ms-python.vscode-pylance",
        "displayName": "Pylance"
      },
      "defaultDefaultValue": "openFilesOnly",
      "restricted": false
    },
    "python.analysis.extraPaths": {
      "type": "array",
      "default": [],
      "items": {
        "type": "string"
      },
      "description": "Additional import search resolution paths",
      "scope": 4,
      "source": {
        "id": "ms-python.vscode-pylance",
        "displayName": "Pylance"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "python.analysis.include": {
      "type": "array",
      "default": [],
      "items": {
        "type": "string"
      },
      "description": "Paths of directories or files that should be included. If no paths are specified, Pylance defaults to the workspace root directory. Paths may contain wildcard characters ** (a directory or multiple levels of directories), * (a sequence of zero or more characters), or ? (a single character).",
      "scope": 4,
      "source": {
        "id": "ms-python.vscode-pylance",
        "displayName": "Pylance"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "python.analysis.exclude": {
      "type": "array",
      "default": [],
      "items": {
        "type": "string"
      },
      "description": "Paths of directories or files that should not be included. These override the include directories, allowing specific subdirectories to be excluded. Note that files in the exclude paths may still be included in the analysis if they are referenced (imported) by source files that are not excluded. Paths may contain wildcard characters ** (a directory or multiple levels of directories), * (a sequence of zero or more characters), or ? (a single character). If no exclude paths are specified, Pylance automatically excludes the following: `**/node_modules`, `**/__pycache__`, `.git` and any virtual environment directories.",
      "scope": 4,
      "source": {
        "id": "ms-python.vscode-pylance",
        "displayName": "Pylance"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "python.analysis.ignore": {
      "type": "array",
      "default": [],
      "items": {
        "type": "string"
      },
      "description": "Paths of directories or files whose diagnostic output (errors and warnings) should be suppressed even if they are an included file or within the transitive closure of an included file. Paths may contain wildcard characters ** (a directory or multiple levels of directories), * (a sequence of zero or more characters), or ? (a single character). If no value is provided, the value of python.linting.ignorePatterns (if set) will be used.",
      "scope": 4,
      "source": {
        "id": "ms-python.vscode-pylance",
        "displayName": "Pylance"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "python.analysis.indexing": {
      "type": "boolean",
      "default": true,
      "description": "Index installed third party libraries and user files for language features such as auto-import, add import, workspace symbols and etc.",
      "scope": 4,
      "source": {
        "id": "ms-python.vscode-pylance",
        "displayName": "Pylance"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "python.analysis.extraCommitChars": {
      "type": "boolean",
      "default": true,
      "description": "Allow using '.', '(' as commit characters when applicable.",
      "scope": 4,
      "tags": [
        "experimental"
      ],
      "source": {
        "id": "ms-python.vscode-pylance",
        "displayName": "Pylance"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "python.analysis.useLibraryCodeForTypes": {
      "type": "boolean",
      "default": true,
      "description": "Use library implementations to extract type information when type stub is not present.",
      "scope": 4,
      "source": {
        "id": "ms-python.vscode-pylance",
        "displayName": "Pylance"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "python.analysis.typeCheckingMode": {
      "type": "string",
      "default": "off",
      "enum": [
        "off",
        "basic",
        "strict"
      ],
      "description": "Defines the default rule set for type checking.",
      "enumDescriptions": [
        "Surfaces diagnostics for invalid syntax, unresolved imports, undefined variables.",
        "All \"off\" rules + basic type checking rules.",
        "All \"off\" rules + all type checking rules."
      ],
      "scope": 4,
      "tags": [
        "experimental"
      ],
      "source": {
        "id": "ms-python.vscode-pylance",
        "displayName": "Pylance"
      },
      "defaultDefaultValue": "off",
      "restricted": false
    },
    "python.analysis.fixAll": {
      "type": "array",
      "default": [],
      "items": {
        "enum": [
          "source.unusedImports",
          "source.convertImportFormat"
        ],
        "enumDescriptions": [
          "Remove unused imports.",
          "Convert import format following python.analysis.importFormat."
        ]
      },
      "description": "source fixes to run in fix all.",
      "scope": 4,
      "source": {
        "id": "ms-python.vscode-pylance",
        "displayName": "Pylance"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "python.analysis.packageIndexDepths": {
      "type": "array",
      "default": [
        {
          "name": "sklearn",
          "depth": 2
        },
        {
          "name": "matplotlib",
          "depth": 2
        },
        {
          "name": "scipy",
          "depth": 2
        },
        {
          "name": "django",
          "depth": 2
        }
      ],
      "items": {
        "type": "object",
        "label": "Per package settings",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "label": "Package name to configure. Empty name means all packages.",
            "default": ""
          },
          "depth": {
            "type": "integer",
            "label": "Depth to scan modules.",
            "default": 1
          },
          "includeAllSymbols": {
            "type": "boolean",
            "label": "'true' means include all symbols. 'false' means only symbols in __all__.",
            "default": false
          }
        }
      },
      "markdownDescription": "Used to override how many levels under installed packages to index on a per package basis. By default, only top-level modules are indexed (depth = 1). To index submodules, increase depth by 1 for each level of submodule you want to index. Accepted values are:\n```JSON\n{\"name\": \"package name (str)\",\n \"depth\": \"depth to scan (int)\",\n \"includeAllSymbols\": \"whether to include all symbols (bool)\"}\n\n```\nIf `include all symbols` is set to `false`, only symbols in each package's `__all__` are included. When it's set to `true`, Pylance will index every module/top level symbol declarations in the file.  \n  \nUsage example: \n```JSON\n[\n\t{\"name\": \"sklearn\", \"depth\": 2, \"includeAllSymbols\": true},\n\t{\"name\": \"matplotlib\", \"depth\": 3, \"includeAllSymbols\": false}\n]\n\n```\n",
      "scope": 4,
      "source": {
        "id": "ms-python.vscode-pylance",
        "displayName": "Pylance"
      },
      "defaultDefaultValue": [
        {
          "name": "sklearn",
          "depth": 2
        },
        {
          "name": "matplotlib",
          "depth": 2
        },
        {
          "name": "scipy",
          "depth": 2
        },
        {
          "name": "django",
          "depth": 2
        }
      ],
      "restricted": false
    },
    "python.analysis.addImport.exactMatchOnly": {
      "type": "boolean",
      "default": false,
      "description": "Offer only exact matches in `add import` code actions",
      "scope": 4,
      "tags": [
        "experimental"
      ],
      "source": {
        "id": "ms-python.vscode-pylance",
        "displayName": "Pylance"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "python.analysis.refactoring.allowMovingSymbols": {
      "type": "boolean",
      "default": false,
      "description": "Allow moving a symbol to another module. [Experimental]",
      "scope": 4,
      "tags": [
        "experimental"
      ],
      "source": {
        "id": "ms-python.vscode-pylance",
        "displayName": "Pylance"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "python.analysis.diagnosticSeverityOverrides": {
      "type": "object",
      "default": {},
      "description": "Allows a user to override the severity levels for individual diagnostics.",
      "scope": 4,
      "properties": {
        "reportGeneralTypeIssues": {
          "type": "string",
          "description": "Diagnostics for general type inconsistencies, unsupported operations, argument/parameter mismatches, etc. Covers all of the basic type-checking rules not covered by other rules. Does not include syntax errors.",
          "default": "error",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportPropertyTypeMismatch": {
          "type": "string",
          "description": "Diagnostics for property whose setter and getter have mismatched types.",
          "default": "error",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportFunctionMemberAccess": {
          "type": "string",
          "description": "Diagnostics for member accesses on functions.",
          "default": "none",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportMissingImports": {
          "type": "string",
          "description": "Diagnostics for imports that have no corresponding imported python file or type stub file.",
          "default": "warning",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportMissingModuleSource": {
          "type": "string",
          "description": "Diagnostics for imports that have no corresponding source file. This happens when a type stub is found, but the module source file was not found, indicating that the code may fail at runtime when using this execution environment. Type checking will be done using the type stub.",
          "default": "warning",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportMissingTypeStubs": {
          "type": "string",
          "description": "Diagnostics for imports that have no corresponding type stub file (either a typeshed file or a custom type stub). The type checker requires type stubs to do its best job at analysis.",
          "default": "warning",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportImportCycles": {
          "type": "string",
          "description": "Diagnostics for cyclical import chains. These are not errors in Python, but they do slow down type analysis and often hint at architectural layering issues. Generally, they should be avoided.",
          "default": "warning",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportUnusedImport": {
          "type": "string",
          "description": "Diagnostics for an imported symbol that is not referenced within that file.",
          "default": "information",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportUnusedClass": {
          "type": "string",
          "description": "Diagnostics for a class with a private name (starting with an underscore) that is not accessed.",
          "default": "information",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportUnusedFunction": {
          "type": "string",
          "description": "Diagnostics for a function or method with a private name (starting with an underscore) that is not accessed.",
          "default": "information",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportUnusedVariable": {
          "type": "string",
          "description": "Diagnostics for a variable that is not accessed.",
          "default": "information",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportDuplicateImport": {
          "type": "string",
          "description": "Diagnostics for an imported symbol or module that is imported more than once.",
          "default": "warning",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportWildcardImportFromLibrary": {
          "type": "string",
          "description": "Diagnostics for an wildcard import from an external library.",
          "default": "warning",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportOptionalSubscript": {
          "type": "string",
          "description": "Diagnostics for an attempt to subscript (index) a variable with an Optional type.",
          "default": "warning",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportOptionalMemberAccess": {
          "type": "string",
          "description": "Diagnostics for an attempt to access a member of a variable with an Optional type.",
          "default": "warning",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportOptionalCall": {
          "type": "string",
          "description": "Diagnostics for an attempt to call a variable with an Optional type.",
          "default": "warning",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportOptionalIterable": {
          "type": "string",
          "description": "Diagnostics for an attempt to use an Optional type as an iterable value (e.g. within a for statement).",
          "default": "warning",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportOptionalContextManager": {
          "type": "string",
          "description": "Diagnostics for an attempt to use an Optional type as a context manager (as a parameter to a with statement).",
          "default": "warning",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportOptionalOperand": {
          "type": "string",
          "description": "Diagnostics for an attempt to use an Optional type as an operand to a binary or unary operator (like '+', '==', 'or', 'not').",
          "default": "warning",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportTypedDictNotRequiredAccess": {
          "type": "string",
          "description": "Diagnostics for an attempt to access a non-required key within a TypedDict without a check for its presence.",
          "default": "error",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportUntypedFunctionDecorator": {
          "type": "string",
          "description": "Diagnostics for function decorators that have no type annotations. These obscure the function type, defeating many type analysis features.",
          "default": "warning",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportUntypedClassDecorator": {
          "type": "string",
          "description": "Diagnostics for class decorators that have no type annotations. These obscure the class type, defeating many type analysis features.",
          "default": "warning",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportUntypedBaseClass": {
          "type": "string",
          "description": "Diagnostics for base classes whose type cannot be determined statically. These obscure the class type, defeating many type analysis features.",
          "default": "warning",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportUntypedNamedTuple": {
          "type": "string",
          "description": "Diagnostics when “namedtuple” is used rather than “NamedTuple”. The former contains no type information, whereas the latter does.",
          "default": "warning",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportPrivateUsage": {
          "type": "string",
          "description": "Diagnostics for incorrect usage of private or protected variables or functions. Protected class members begin with a single underscore _ and can be accessed only by subclasses. Private class members begin with a double underscore but do not end in a double underscore and can be accessed only within the declaring class. Variables and functions declared outside of a class are considered private if their names start with either a single or double underscore, and they cannot be accessed outside of the declaring module.",
          "default": "warning",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportTypeCommentUsage": {
          "type": "string",
          "description": "Diagnostics for usage of deprecated type comments.",
          "default": "none",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportPrivateImportUsage": {
          "type": "string",
          "description": "Diagnostics for incorrect usage of symbol imported from a \"py.typed\" module that is not re-exported from that module.",
          "default": "error",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportConstantRedefinition": {
          "type": "string",
          "description": "Diagnostics for attempts to redefine variables whose names are all-caps with underscores and numerals.",
          "default": "warning",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportDeprecated": {
          "type": "string",
          "description": "Diagnostics for use of deprecated classes or functions.",
          "default": "none",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportIncompatibleMethodOverride": {
          "type": "string",
          "description": "Diagnostics for methods that override a method of the same name in a base class in an incompatible manner (wrong number of parameters, incompatible parameter types, or incompatible return type).",
          "default": "warning",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportIncompatibleVariableOverride": {
          "type": "string",
          "description": "Diagnostics for overrides in subclasses that redefine a variable in an incompatible way.",
          "default": "warning",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportInconsistentConstructor": {
          "type": "string",
          "description": "Diagnostics for __init__ and __new__ methods whose signatures are inconsistent.",
          "default": "none",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportOverlappingOverload": {
          "type": "string",
          "description": "Diagnostics for function overloads that overlap in signature and obscure each other or have incompatible return types.",
          "default": "none",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportMissingSuperCall": {
          "type": "string",
          "description": "Diagnostics for missing call to parent class for inherited `__init__` methods.",
          "default": "none",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportUninitializedInstanceVariable": {
          "type": "string",
          "description": "Diagnostics for instance variables that are not declared or initialized within class body or `__init__` method.",
          "default": "none",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportInvalidStringEscapeSequence": {
          "type": "string",
          "description": "Diagnostics for invalid escape sequences used within string literals. The Python specification indicates that such sequences will generate a syntax error in future versions.",
          "default": "warning",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportUnknownParameterType": {
          "type": "string",
          "description": "Diagnostics for input or return parameters for functions or methods that have an unknown type.",
          "default": "warning",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportUnknownArgumentType": {
          "type": "string",
          "description": "Diagnostics for call arguments for functions or methods that have an unknown type.",
          "default": "warning",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportUnknownLambdaType": {
          "type": "string",
          "description": "Diagnostics for input or return parameters for lambdas that have an unknown type.",
          "default": "warning",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportUnknownVariableType": {
          "type": "string",
          "description": "Diagnostics for variables that have an unknown type..",
          "default": "warning",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportUnknownMemberType": {
          "type": "string",
          "description": "Diagnostics for class or instance variables that have an unknown type.",
          "default": "warning",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportMissingParameterType": {
          "type": "string",
          "description": "Diagnostics for parameters that are missing a type annotation.",
          "default": "none",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportMissingTypeArgument": {
          "type": "string",
          "description": "Diagnostics for generic class reference with missing type arguments.",
          "default": "none",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportInvalidTypeVarUse": {
          "type": "string",
          "description": "Diagnostics for improper use of type variables in a function signature.",
          "default": "warning",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportCallInDefaultInitializer": {
          "type": "string",
          "description": "Diagnostics for function calls within a default value initialization expression. Such calls can mask expensive operations that are performed at module initialization time.",
          "default": "information",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportUnnecessaryIsInstance": {
          "type": "string",
          "description": "Diagnostics for 'isinstance' or 'issubclass' calls where the result is statically determined to be always true or always false. Such calls are often indicative of a programming error.",
          "default": "information",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportUnnecessaryCast": {
          "type": "string",
          "description": "Diagnostics for 'cast' calls that are statically determined to be unnecessary. Such calls are sometimes indicative of a programming error.",
          "default": "information",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportUnnecessaryComparison": {
          "type": "string",
          "description": "Diagnostics for '==' and '!=' comparisons that are statically determined to be unnecessary. Such calls are sometimes indicative of a programming error.",
          "default": "none",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportUnnecessaryContains": {
          "type": "string",
          "description": "Diagnostics for 'in' operation that is statically determined to be unnecessary. Such operations are sometimes indicative of a programming error.",
          "default": "none",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportAssertAlwaysTrue": {
          "type": "string",
          "description": "Diagnostics for 'assert' statement that will provably always assert. This can be indicative of a programming error.",
          "default": "information",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportSelfClsParameterName": {
          "type": "string",
          "description": "Diagnostics for a missing or misnamed “self” parameter in instance methods and “cls” parameter in class methods. Instance methods in metaclasses (classes that derive from “type”) are allowed to use “cls” for instance methods.",
          "default": "information",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportImplicitStringConcatenation": {
          "type": "string",
          "description": "Diagnostics for two or more string literals that follow each other, indicating an implicit concatenation. This is considered a bad practice and often masks bugs such as missing commas.",
          "default": "warning",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportInvalidStubStatement": {
          "type": "string",
          "description": "Diagnostics for type stub statements that do not conform to PEP 484.",
          "default": "warning",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportIncompleteStub": {
          "type": "string",
          "description": "Diagnostics for the use of a module-level “__getattr__” function, indicating that the stub is incomplete.",
          "default": "none",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportUndefinedVariable": {
          "type": "string",
          "description": "Diagnostics for a missing or misnamed “self” parameter in instance methods and “cls” parameter in class methods. Instance methods in metaclasses (classes that derive from “type”) are allowed to use “cls” for instance methods.",
          "default": "warning",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportUnboundVariable": {
          "type": "string",
          "description": "Diagnostics for unbound and possibly unbound variables.",
          "default": "information",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportUnusedCallResult": {
          "type": "string",
          "description": "Diagnostics for call expressions whose results are not consumed and are not None.",
          "default": "none",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportUnusedCoroutine": {
          "type": "string",
          "description": "Diagnostics for call expressions that return a Coroutine and whose results are not consumed.",
          "default": "error",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportUnusedExpression": {
          "type": "string",
          "description": "Diagnostics for simple expressions whose value is not used in any way.",
          "default": "warning",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportUnsupportedDunderAll": {
          "type": "string",
          "description": "Diagnostics for unsupported operations performed on __all__.",
          "default": "warning",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportUnnecessaryTypeIgnoreComment": {
          "type": "string",
          "description": "Diagnostics for '# type: ignore' comments that have no effect.",
          "default": "none",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportMatchNotExhaustive": {
          "type": "string",
          "description": "Diagnostics for 'match' statements that do not exhaustively match all possible values.",
          "default": "none",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportShadowedImports": {
          "type": "string",
          "description": "Diagnostics for files that are overriding a module in the stdlib.",
          "default": "warning",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        }
      },
      "source": {
        "id": "ms-python.vscode-pylance",
        "displayName": "Pylance"
      },
      "defaultDefaultValue": {},
      "restricted": false
    },
    "python.analysis.typeshedPaths": {
      "type": "array",
      "default": [],
      "items": {
        "type": "string"
      },
      "description": "Paths to look for typeshed modules.",
      "scope": 4,
      "source": {
        "id": "ms-python.vscode-pylance",
        "displayName": "Pylance"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "python.analysis.importFormat": {
      "type": "string",
      "default": "absolute",
      "enum": [
        "absolute",
        "relative"
      ],
      "description": "Defines the default format for import module.",
      "enumDescriptions": [
        "Use absolute import format when creating new import statement.",
        "Use relative import format when creating new import statement."
      ],
      "scope": 4,
      "source": {
        "id": "ms-python.vscode-pylance",
        "displayName": "Pylance"
      },
      "defaultDefaultValue": "absolute",
      "restricted": false
    },
    "jupyter.showVariableViewWhenDebugging": {
      "type": "boolean",
      "default": false,
      "description": "Bring up the Variable View when starting a Run by Line session.",
      "scope": 4,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "jupyter.exportWithOutputEnabled": {
      "type": "boolean",
      "default": false,
      "description": "Enable exporting a python file into a jupyter notebook and run all cells when doing so.",
      "scope": 4,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "jupyter.jupyterCommandLineArguments": {
      "type": "array",
      "default": [],
      "description": "If and when a Jupyter server is started, these arguments will be passed to into the Jupyter Notebook CLI. By default this list is generated by the Jupyter Extension.",
      "scope": 4,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "jupyter.notebookFileRoot": {
      "type": "string",
      "default": "${fileDirname}",
      "description": "Set the root directory for running notebooks and the Interactive window.",
      "scope": 4,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": "${fileDirname}",
      "restricted": false
    },
    "jupyter.searchForJupyter": {
      "type": "boolean",
      "default": true,
      "deprecationMessage": "This setting is deprecated and will be removed in a future release.",
      "description": "Search all installed Python interpreters for a Jupyter installation when starting the Interactive window",
      "scope": 4,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "jupyter.sendSelectionToInteractiveWindow": {
      "type": "boolean",
      "default": false,
      "description": "When pressing shift+enter, send selected code in a Python file to the Jupyter interactive window as opposed to the Python terminal.",
      "deprecationMessage": "This setting has been deprecated in favor of jupyter.interactiveWindow.textEditor.executeSelection.",
      "scope": 4,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "jupyter.interactiveWindow.textEditor.executeSelection": {
      "type": "boolean",
      "default": false,
      "description": "When pressing shift+enter, send selected code in a Python file to the Jupyter interactive window as opposed to the Python terminal.",
      "scope": 4,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "jupyter.variableExplorerExclude": {
      "type": "string",
      "default": "module;function;builtin_function_or_method;ABCMeta;type",
      "description": "Types to exclude from showing in the Interactive variable explorer",
      "scope": 4,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": "module;function;builtin_function_or_method;ABCMeta;type",
      "restricted": false
    },
    "jupyter.codeRegularExpression": {
      "type": "string",
      "default": "^(#\\s*%%|#\\s*\\<codecell\\>|#\\s*In\\[\\d*?\\]|#\\s*In\\[ \\])",
      "description": "Regular expression used to identify code cells. All code until the next match is considered part of this cell.",
      "deprecationMessage": "This setting has been deprecated in favor of jupyter.interactiveWindow.cellMarker.codeRegex.",
      "scope": 4,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": "^(#\\s*%%|#\\s*\\<codecell\\>|#\\s*In\\[\\d*?\\]|#\\s*In\\[ \\])",
      "restricted": false
    },
    "jupyter.interactiveWindow.cellMarker.codeRegex": {
      "type": "string",
      "default": "^(#\\s*%%|#\\s*\\<codecell\\>|#\\s*In\\[\\d*?\\]|#\\s*In\\[ \\])",
      "description": "Regular expression used to identify code cells. All code until the next match is considered part of this cell.",
      "scope": 4,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": "^(#\\s*%%|#\\s*\\<codecell\\>|#\\s*In\\[\\d*?\\]|#\\s*In\\[ \\])",
      "restricted": false
    },
    "jupyter.defaultCellMarker": {
      "type": "string",
      "default": "# %%",
      "description": "Cell marker used for delineating a cell in a python file.",
      "deprecationMessage": "This setting has been deprecated in favor of jupyter.interactiveWindow.cellMarker.default",
      "scope": 4,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": "# %%",
      "restricted": false
    },
    "jupyter.interactiveWindow.cellMarker.default": {
      "type": "string",
      "default": "# %%",
      "description": "Cell marker used for delineating a cell in a python file.",
      "scope": 4,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": "# %%",
      "restricted": false
    },
    "jupyter.markdownRegularExpression": {
      "type": "string",
      "default": "^(#\\s*%%\\s*\\[markdown\\]|#\\s*\\<markdowncell\\>)",
      "description": "Regular expression used to identify markdown cells. All comments after this expression are considered part of the markdown.",
      "deprecationMessage": "This setting has been deprecated in favor of jupyter.interactiveWindow.cellMarker.markdownRegex.",
      "scope": 4,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": "^(#\\s*%%\\s*\\[markdown\\]|#\\s*\\<markdowncell\\>)",
      "restricted": false
    },
    "jupyter.interactiveWindow.cellMarker.markdownRegex": {
      "type": "string",
      "default": "^(#\\s*%%\\s*\\[markdown\\]|#\\s*\\<markdowncell\\>)",
      "description": "Regular expression used to identify markdown cells. All comments after this expression are considered part of the markdown.",
      "scope": 4,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": "^(#\\s*%%\\s*\\[markdown\\]|#\\s*\\<markdowncell\\>)",
      "restricted": false
    },
    "jupyter.decorateCells": {
      "type": "boolean",
      "default": true,
      "description": "Draw a highlight behind the currently active cell.",
      "deprecationMessage": "This setting has been deprecated in favor of jupyter.interactiveWindow.cellMarker.decorateCells.",
      "scope": 4,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "jupyter.interactiveWindow.cellMarker.decorateCells": {
      "type": "boolean",
      "default": true,
      "description": "Draw a highlight behind the currently active cell.",
      "scope": 4,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "jupyter.enableCellCodeLens": {
      "type": "boolean",
      "default": true,
      "description": "Enables code lens for 'cells' in a python file.",
      "deprecationMessage": "This setting has been deprecated in favor of jupyter.interactiveWindow.codeLens.enable.",
      "scope": 4,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "jupyter.interactiveWindow.codeLens.enable": {
      "type": "boolean",
      "default": true,
      "description": "Enables code lens for 'cells' in a python file.",
      "scope": 4,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "jupyter.enableAutoMoveToNextCell": {
      "type": "boolean",
      "default": true,
      "description": "Enables moving to the next cell when clicking on a 'Run Cell' code lens.",
      "deprecationMessage": "This setting has been deprecated in favor of jupyter.interactiveWindow.textEditor.autoMoveToNextCell.",
      "scope": 4,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "jupyter.interactiveWindow.textEditor.autoMoveToNextCell": {
      "type": "boolean",
      "default": true,
      "description": "Enables moving to the next cell when clicking on a 'Run Cell' code lens.",
      "scope": 4,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "jupyter.generateSVGPlots": {
      "type": "boolean",
      "default": false,
      "description": "Generate SVG output for notebook plots. This allows for better display in the plot viewer at the cost of generation speed and file size.",
      "deprecationMessage": "This setting is deprecated and will be removed in the next release.",
      "scope": 4,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "jupyter.codeLenses": {
      "type": "string",
      "default": "jupyter.runcell, jupyter.runallcellsabove, jupyter.debugcell",
      "description": "Set of commands to put as code lens above a cell.",
      "deprecationMessage": "This setting has been deprecated in favor of jupyter.interactiveWindow.codeLens.commands.",
      "scope": 4,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": "jupyter.runcell, jupyter.runallcellsabove, jupyter.debugcell",
      "restricted": false
    },
    "jupyter.interactiveWindow.codeLens.commands": {
      "type": "string",
      "default": "jupyter.runcell, jupyter.runallcellsabove, jupyter.debugcell",
      "description": "Set of commands to put as code lens above a cell.",
      "scope": 4,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": "jupyter.runcell, jupyter.runallcellsabove, jupyter.debugcell",
      "restricted": false
    },
    "jupyter.debugCodeLenses": {
      "type": "string",
      "default": "jupyter.debugcontinue, jupyter.debugstop, jupyter.debugstepover",
      "description": "Set of debug commands to put as code lens above a cell while debugging.",
      "deprecationMessage": "This setting has been deprecated in favor of jupyter.interactiveWindow.codeLes.debugCommands.",
      "scope": 4,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": "jupyter.debugcontinue, jupyter.debugstop, jupyter.debugstepover",
      "restricted": false
    },
    "jupyter.interactiveWindow.codeLes.debugCommands": {
      "type": "string",
      "default": "jupyter.debugcontinue, jupyter.debugstop, jupyter.debugstepover",
      "description": "Set of debug commands to put as code lens above a cell while debugging.",
      "scope": 4,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": "jupyter.debugcontinue, jupyter.debugstop, jupyter.debugstepover",
      "restricted": false
    },
    "jupyter.debugpyDistPath": {
      "type": "string",
      "default": "",
      "description": "Path to debugpy bits for debugging cells.",
      "scope": 4,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": "",
      "restricted": false
    },
    "jupyter.stopOnFirstLineWhileDebugging": {
      "type": "boolean",
      "default": true,
      "description": "When debugging a cell, stop on the first line.",
      "scope": 4,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "jupyter.remoteDebuggerPort": {
      "type": "number",
      "default": -1,
      "description": "When debugging a cell, open this port on the remote box. If -1 is specified, a random port between 8889 and 9000 will be attempted.",
      "deprecationMessage": "This setting is deprecated and will be removed in the next release.",
      "scope": 4,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": -1,
      "restricted": false
    },
    "jupyter.addGotoCodeLenses": {
      "type": "boolean",
      "default": true,
      "description": "After running a cell, add a 'Goto' code lens on the cell. Note, disabling all code lenses disables this code lens as well.",
      "deprecationMessage": "This setting has been deprecated in favor of jupyter.interactiveWindow.codeLens.enableGotoCell.",
      "scope": 4,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "jupyter.interactiveWindow.codeLens.enableGotoCell": {
      "type": "boolean",
      "default": true,
      "description": "After running a cell, add a 'Goto' code lens on the cell. Note, disabling all code lenses disables this code lens as well.",
      "scope": 4,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "jupyter.interactiveWindowMode": {
      "type": "string",
      "enum": [
        "perFile",
        "single",
        "multiple"
      ],
      "scope": 4,
      "description": "Behavior of the Interactive Window. 'perFile' will create a new interactive window for every file that runs a cell. 'single' allows a single window. 'multiple' allows the creation of multiple.",
      "deprecationMessage": "This setting has been deprecated in favor of jupyter.interactiveWindow.creationMode.",
      "default": "multiple",
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": "multiple",
      "restricted": false
    },
    "jupyter.interactiveWindow.creationMode": {
      "type": "string",
      "enum": [
        "perFile",
        "single",
        "multiple"
      ],
      "scope": 4,
      "description": "Behavior of the Interactive Window. 'perFile' will create a new interactive window for every file that runs a cell. 'single' allows a single window. 'multiple' allows the creation of multiple.",
      "default": "multiple",
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": "multiple",
      "restricted": false
    },
    "jupyter.pythonCellFolding": {
      "type": "boolean",
      "default": true,
      "description": "Enable folding regions for code cells in Python files. This setting requires a reload of VS Code.",
      "deprecationMessage": "This setting has been deprecated in favor of jupyter.interactiveWindow.textEditor.cellFolding.",
      "scope": 4,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "jupyter.interactiveWindow.textEditor.cellFolding": {
      "type": "boolean",
      "default": true,
      "description": "Enable folding regions for code cells in Python files. This setting requires a reload of VS Code.",
      "scope": 4,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "jupyter.interactiveWindowViewColumn": {
      "type": "string",
      "enum": [
        "beside",
        "active",
        "secondGroup"
      ],
      "scope": 4,
      "description": "Where to open an Interactive Window that is not associated with a python file. 'beside' will open the interactive window to the right of the active editor. 'active' will open the interactive window in place of the active editor. 'secondGroup' will open the interactive window in the second editor group.",
      "deprecationMessage": "This setting has been deprecated in favor of jupyter.interactiveWindow.viewColumn.",
      "default": "secondGroup",
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": "secondGroup",
      "restricted": false
    },
    "jupyter.interactiveWindow.viewColumn": {
      "type": "string",
      "enum": [
        "beside",
        "active",
        "secondGroup"
      ],
      "scope": 4,
      "description": "Where to open an Interactive Window that is not associated with a python file. 'beside' will open the interactive window to the right of the active editor. 'active' will open the interactive window in place of the active editor. 'secondGroup' will open the interactive window in the second editor group.",
      "default": "secondGroup",
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": "secondGroup",
      "restricted": false
    },
    "jupyter.debugJustMyCode": {
      "type": "boolean",
      "default": true,
      "description": "When debugging, only step through user-written code. Disable this to allow stepping into library code.",
      "scope": 4,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "jupyter.newCellOnRunLast": {
      "type": "boolean",
      "default": true,
      "description": "Append a new empty cell to an interactive window file on running the currently last cell.",
      "deprecationMessage": "This setting has been deprecated in favor of jupyter.interactiveWindow.textEditor.autoAddNewCell.",
      "scope": 4,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "jupyter.interactiveWindow.textEditor.autoAddNewCell": {
      "type": "boolean",
      "default": true,
      "description": "Append a new empty cell to an interactive window file on running the currently last cell.",
      "scope": 4,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": true,
      "restricted": false
    }
  },
  "patternProperties": {
    "^(\\[([^\\]]+)\\])+$": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage"
    }
  },
  "additionalProperties": true,
  "allowTrailingCommas": true,
  "allowComments": true
}