# Generated by Django 4.2.1 on 2023-05-14 02:35

import computedfields.resolver
import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import multiselectfield.db.fields
import sch.models
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0005_auto_20220424_2025'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Department',
            fields=[
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(max_length=100, primary_key=True, serialize=False, unique=True)),
                ('initial_start_date', models.DateField(default=datetime.date(2022, 12, 25))),
                ('schedule_week_length', models.IntegerField(choices=[(2, 2), (4, 4), (6, 6), (8, 8), (10, 10)], default=6)),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('name', models.CharField(max_length=100)),
                ('initials', models.CharField(max_length=4, null=True)),
                ('fte', models.FloatField(default=1)),
                ('streak_pref', models.IntegerField(default=3)),
                ('trade_one_offs', models.BooleanField(default=True)),
                ('time_pref', models.CharField(choices=[('AM', 'Morning'), ('PM', 'Evening'), ('XN', 'Overnight')], max_length=10)),
                ('slug', models.CharField(blank=True, max_length=25, primary_key=True, serialize=False)),
                ('hire_date', models.DateField(default=datetime.date(2018, 4, 11))),
                ('image_url', models.CharField(default='/static/img/CuteRobot-01.png', max_length=300)),
                ('active', models.BooleanField(default=True)),
                ('std_wk_max', models.IntegerField(default=40)),
                ('pto_hrs', models.IntegerField(default=10)),
                ('department', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='sch.department')),
            ],
            options={
                'ordering': ['department', 'name'],
            },
        ),
        migrations.CreateModel(
            name='FillCandidate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_preferable', models.BooleanField(default=None, null=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sch.employee')),
            ],
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(max_length=100, primary_key=True, serialize=False, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Period',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField()),
                ('number', models.IntegerField()),
                ('start_date', models.DateField()),
                ('hours', models.JSONField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PtoRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('workday', models.DateField(blank=True, null=True)),
                ('dateCreated', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Approved', 'Approved'), ('Denied', 'Denied')], default='Pending', max_length=20)),
                ('manager_approval', models.BooleanField(default=False)),
                ('sd_id', models.IntegerField(default=-1)),
                ('stands_respected', models.BooleanField(editable=False)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pto_requests', to='sch.employee')),
            ],
            options={
                'abstract': False,
            },
            bases=(computedfields.resolver._ComputedFieldsModelBase, models.Model),
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(default=None, null=True)),
                ('number', models.IntegerField(default=None, null=True)),
                ('start_date', models.DateField()),
                ('status', models.IntegerField(choices=[(0, 'working'), (1, 'finished'), (2, 'discarded')], default=0)),
                ('version', models.CharField(default='A', max_length=1)),
                ('slug', models.CharField(default='', max_length=20)),
                ('percent', models.IntegerField(default=0)),
                ('unfavorable_ratio', models.FloatField(default=0)),
                ('action_log', models.TextField(default='')),
                ('last_update', models.DateTimeField(auto_now=True)),
                ('n_empty', models.IntegerField(default=0)),
                ('data', models.JSONField(blank=True, null=True)),
                ('weekly_hours', models.JSONField(blank=True, null=True)),
                ('department', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='sch.department')),
                ('employees', models.ManyToManyField(related_name='schedules', to='sch.employee')),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'ordering': ['year', 'number', 'version'],
            },
            bases=(models.Model, sch.models.ScheduleBaseActions),
        ),
        migrations.CreateModel(
            name='Shift',
            fields=[
                ('name', models.CharField(max_length=20)),
                ('slug', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('start', models.TimeField(default=datetime.time(7, 0))),
                ('duration', models.DurationField(default=datetime.timedelta(seconds=37800))),
                ('hours', models.FloatField(default=10)),
                ('group', models.CharField(choices=[('AM', 'Morning'), ('MD', 'Midday'), ('PM', 'Evening'), ('XN', 'Overnight')], max_length=10, null=True)),
                ('phase', models.SmallIntegerField(choices=[(1, 'AM'), (2, 'MD'), (3, 'PM'), (4, 'EV'), (5, 'XN')], default=-1)),
                ('occur_days', multiselectfield.db.fields.MultiSelectField(choices=[(0, 'Sun'), (1, 'Mon'), (2, 'Tue'), (3, 'Wed'), (4, 'Thu'), (5, 'Fri'), (6, 'Sat')], default=[0, 1, 2, 3, 4, 5, 6], max_length=14)),
                ('is_iv', models.BooleanField(default=False)),
                ('image_url', models.CharField(default='/static/img/CuteRobot-01.png', max_length=300)),
                ('coverage_for', models.ManyToManyField(blank=True, related_name='covers', to='sch.shift')),
                ('department', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='shifts', to='sch.department')),
            ],
            options={
                'ordering': ['start', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Week',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('iweek', models.IntegerField(blank=True, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('number', models.IntegerField(blank=True, null=True)),
                ('version', models.CharField(blank=True, max_length=10, null=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('hours', models.JSONField(blank=True, null=True)),
                ('period', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='weeks', to='sch.period')),
                ('schedule', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='weeks', to='sch.schedule')),
            ],
            options={
                'ordering': ['year', 'number', 'schedule__version'],
            },
        ),
        migrations.CreateModel(
            name='WorkdayViewPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('view', models.CharField(choices=[(0, 'wday/wd-detail-2.html'), (1, 'wday/wd-detail.html'), (2, 'wday/wd-detail-old.html'), (3, 'wday/wd-3.html'), (4, 'wday/partials/hs_wday.html'), (5, 'wday/wday-4.pug')], default=0, max_length=10)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='wd_view_pref', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Workday',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('slug', models.CharField(blank=True, max_length=30, null=True)),
                ('iweekday', models.IntegerField(default=-1)),
                ('iweek', models.IntegerField(default=-1)),
                ('iperiod', models.IntegerField(default=-1)),
                ('ischedule', models.IntegerField(default=-1)),
                ('ppd_id', models.IntegerField(default=-1)),
                ('sd_id', models.IntegerField(default=-1)),
                ('percent', models.IntegerField(default=0)),
                ('period', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='workdays', to='sch.period')),
                ('pto_requests', models.ManyToManyField(blank=True, related_name='workdays', to='sch.ptorequest')),
                ('schedule', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='workdays', to='sch.schedule')),
                ('week', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='workdays', to='sch.week')),
            ],
        ),
        migrations.CreateModel(
            name='Slot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(max_length=100, null=True)),
                ('empl_sentiment', models.SmallIntegerField(default=None, null=True)),
                ('is_turnaround', models.BooleanField(default=False)),
                ('is_terminal', models.BooleanField(default=False)),
                ('is_unfavorable', models.BooleanField(default=False)),
                ('streak', models.SmallIntegerField(default=None, null=True)),
                ('last_update', models.DateTimeField(auto_now=True)),
                ('employee', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='slots', to='sch.employee')),
                ('fill_candidates', models.ManyToManyField(related_name='fill_candidates', through='sch.FillCandidate', to='sch.employee')),
                ('period', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='slots', to='sch.period')),
                ('schedule', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='slots', to='sch.schedule')),
                ('shift', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='slots', to='sch.shift')),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
                ('template_employee', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='slot_templates', to='sch.employee')),
                ('week', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='slots', to='sch.week')),
                ('workday', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='slots', to='sch.workday')),
            ],
            options={
                'ordering': ['workday__date', 'shift__start', 'shift__name'],
            },
        ),
        migrations.CreateModel(
            name='ShiftTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sd_id', models.IntegerField()),
                ('employee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='shift_templates', to='sch.employee')),
                ('shift', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shift_templates', to='sch.shift')),
            ],
        ),
        migrations.CreateModel(
            name='ShiftSortPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField(default=0)),
                ('rank', models.IntegerField(default=1)),
                ('scaled', models.IntegerField(default=0)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shift_sort_prefs', to='sch.employee')),
                ('shift', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sort_prefs', to='sch.shift')),
            ],
            options={
                'ordering': ['score', 'shift'],
            },
        ),
        migrations.CreateModel(
            name='ShiftPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('priority', models.CharField(choices=[('SP', 'Strongly Prefer'), ('P', 'Prefer'), ('N', 'Neutral'), ('D', 'Dislike'), ('SD', 'Strongly Dislike')], default='N', max_length=2)),
                ('score', models.IntegerField(editable=False)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shift_prefs', to='sch.employee')),
                ('shift', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prefs', to='sch.shift')),
            ],
            options={
                'ordering': ['shift', '-score'],
            },
            bases=(computedfields.resolver._ComputedFieldsModelBase, models.Model),
        ),
        migrations.CreateModel(
            name='ScheduleEmusr',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('n_unfav', models.SmallIntegerField()),
                ('n_var', models.SmallIntegerField()),
                ('std_dev', models.FloatField()),
                ('schedule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='emusr', to='sch.schedule')),
            ],
        ),
        migrations.CreateModel(
            name='RoutineLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('schedule', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='routine_log', to='sch.schedule')),
            ],
        ),
        migrations.AddField(
            model_name='ptorequest',
            name='schedules',
            field=models.ManyToManyField(related_name='pto_requests', to='sch.schedule'),
        ),
        migrations.AddField(
            model_name='period',
            name='schedule',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='periods', to='sch.schedule'),
        ),
        migrations.CreateModel(
            name='LogEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('data', models.JSONField()),
                ('log', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='sch.routinelog')),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.AddField(
            model_name='fillcandidate',
            name='slot',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sch.slot'),
        ),
        migrations.AddField(
            model_name='employee',
            name='shifts_available',
            field=models.ManyToManyField(related_name='available', to='sch.shift'),
        ),
        migrations.AddField(
            model_name='employee',
            name='shifts_trained',
            field=models.ManyToManyField(related_name='trained', to='sch.shift'),
        ),
        migrations.AddField(
            model_name='employee',
            name='user',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='employee', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='department',
            name='org',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='departments', to='sch.organization'),
        ),
        migrations.CreateModel(
            name='Turnaround',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('early_slot', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='early_turnarounds', to='sch.slot')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='turnarounds', to='sch.employee')),
                ('late_slot', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='late_turnarounds', to='sch.slot')),
                ('schedule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='turnarounds', to='sch.schedule')),
            ],
            options={
                'unique_together': {('employee', 'early_slot', 'late_slot')},
            },
        ),
        migrations.CreateModel(
            name='TemplatedDayOff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sd_id', models.IntegerField()),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tdos', to='sch.employee')),
            ],
            options={
                'unique_together': {('employee', 'sd_id')},
            },
        ),
        migrations.CreateModel(
            name='SlotPriority',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('iweekday', models.IntegerField()),
                ('priority', models.CharField(choices=[('L', 'Low'), ('M', 'Medium'), ('H', 'High'), ('U', 'Urgent')], default='M', max_length=20)),
                ('shift', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sch.shift')),
            ],
            options={
                'unique_together': {('iweekday', 'shift')},
            },
        ),
        migrations.AddConstraint(
            model_name='slot',
            constraint=models.UniqueConstraint(fields=('workday', 'shift', 'schedule'), name='Shift Duplicates on day'),
        ),
        migrations.AddConstraint(
            model_name='slot',
            constraint=models.UniqueConstraint(fields=('workday', 'employee', 'schedule'), name='Employee Duplicates on day'),
        ),
        migrations.AlterUniqueTogether(
            name='shifttemplate',
            unique_together={('shift', 'sd_id')},
        ),
        migrations.AlterUniqueTogether(
            name='shiftsortpreference',
            unique_together={('employee', 'shift')},
        ),
        migrations.AlterUniqueTogether(
            name='shiftpreference',
            unique_together={('employee', 'shift')},
        ),
        migrations.AlterUniqueTogether(
            name='shift',
            unique_together={('name', 'department')},
        ),
        migrations.AlterUniqueTogether(
            name='employee',
            unique_together={('initials', 'department')},
        ),
    ]
