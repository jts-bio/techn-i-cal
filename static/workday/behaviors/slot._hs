
behavior Slot 
    on dragover 
        call event.preventDefault() then
        set incomingEmployee to first .active then
        set avble to incomingEmployee@data-available then
        if @data-shift is in avble.split(' ') 
        and @data-time-of-day is not in incomingEmployee@data-prohibited
            add .dragged-over 
        else if @data-shift is in avble.split(' ') 
        and @data-time-of-day is in incomingEmployee@data-prohibited
            add .dragged-over-discouraged
        else 
            add .dragged-over-prohibited
            end
        end
    on dragleave or drop 
        send hideHint to .slot
        remove .dragged-over .dragged-over-prohibited
    on drop 
        call event.stopPropagation() then
        call event.dataTransfer.getData("text") 
        then set employeeId to result
        trigger checkAndAssign
        end 
    on showHint
        if first .active@data-available includes @data-shift
        and first .active@data-prohibited does not contain @data-time-of-day
            if first .active@data-employee-id != @data-employee
                remove .hidden from .swap-in-btn in me then 
                add .text-emerald-300 .font-extrabold to .shift-name in me
            else 
                transition my *opacity to 100% over 500ms
                end
        else 
            transition my *opacity to 20% over 500ms
        end
    on hideHint 
        add .hidden to .swap-in-btn in me then
        remove .text-emerald-300 .font-extrabold from .shift-name in me
        remove .dragged-over .dragged-over-prohibited .dragged-over-discouraged from me
        transition my *opacity to 100% over 300ms
        end
    on mutation of @data-employee 
        set tod to @data-in-daytime
        then tell .employee in me 
            set your@data-time-of-day to tod
            trigger checkFlags  
            then trigger renderHoursDisplay
            end
        end
    on checkAndAssign 
        set incomingEmployee to first .active then
        set avble to incomingEmployee@data-available
        send hideHint to .slot
            tell .employee 
                transition *scale to 1 over 100ms 
            end
        if @data-shift is in avble.split(' ')
            set empId to incomingEmployee@data-employee-id
            put incomingEmployee at the end of me
            then remove .active from (.employee in me)
            then fetch `${@data-shift}/${empId}/assign/` then 
            call showToast(result,"success")
            if (.employee in me).length > 1
                    send showAccepted to (.employee in me)[1]
                    send showBooted to (.employee in me)[0]
                    put (.employee in me)[0] at the start of #ScrollingDeck
                    trigger recieve on #ScrollingDeck
                    end 
            then set @data-employee to (.employee in me)[0]@data-employee-id 
            then trigger employeeChanged on me end
        if @data-shift is not in avble.split(' ') 
            call alert(`${@data-shift} not in ${incomingEmployee@data-employee-id}'s available shifts [${incomingEmployee@data-available}]`)
            then call window.location.reload() 
            remove .active from .employee
            tell .employee  
                transition *scale to 1 over 100ms
                end
            end
    on employeeChanged 
        set @data-employee to (.employee in me)[0]@data-employee-id 
        set tod to @data-time-of-day
        set sft to @data-shift
        set hrs to @data-hours
        then tell .employee in me 
            set @data-in-daytime to tod
            then set @data-in-slot to sft
            then set @data-day-hours to hrs
            trigger checkFlags on you 
            then trigger renderHoursDisplay on you 
            end
        then tell .template-btn in me 
            add .hidden end
        end


-- Employee goto:///workspaces/techn-i-cal/static/workday/behaviors/employee._hs
